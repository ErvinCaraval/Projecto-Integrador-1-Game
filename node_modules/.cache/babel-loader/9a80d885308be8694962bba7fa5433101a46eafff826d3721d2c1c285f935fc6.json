{"ast":null,"code":"let A;\nconst I = new Array(128).fill(void 0);\nI.push(void 0, null, !0, !1);\nlet g = I.length;\nfunction C(A) {\n  g === I.length && I.push(I.length + 1);\n  const C = g;\n  return g = I[C], I[C] = A, C;\n}\nfunction B(A) {\n  return I[A];\n}\nfunction Q(A) {\n  const C = B(A);\n  return function (A) {\n    A < 132 || (I[A] = g, g = A);\n  }(A), C;\n}\nfunction E(A) {\n  return null == A;\n}\nlet i = null;\nfunction D() {\n  return null !== i && 0 !== i.byteLength || (i = new Float64Array(A.memory.buffer)), i;\n}\nlet o = null;\nfunction G() {\n  return null !== o && 0 !== o.byteLength || (o = new Int32Array(A.memory.buffer)), o;\n}\nconst w = \"undefined\" != typeof TextDecoder ? new TextDecoder(\"utf-8\", {\n  ignoreBOM: !0,\n  fatal: !0\n}) : {\n  decode: () => {\n    throw Error(\"TextDecoder not available\");\n  }\n};\n\"undefined\" != typeof TextDecoder && w.decode();\nlet S = null;\nfunction k(I, g) {\n  return I >>>= 0, w.decode((null !== S && 0 !== S.byteLength || (S = new Uint8Array(A.memory.buffer)), S).subarray(I, I + g));\n}\nfunction a(A, I) {\n  if (!(A instanceof I)) throw new Error(`expected instance of ${I.name}`);\n  return A.ptr;\n}\nlet h = null;\nfunction K() {\n  return null !== h && 0 !== h.byteLength || (h = new Float32Array(A.memory.buffer)), h;\n}\nlet U = 128;\nfunction J(A) {\n  if (1 == U) throw new Error(\"out of js stack\");\n  return I[--U] = A, U;\n}\nfunction N(A, I) {\n  return A >>>= 0, K().subarray(A / 4, A / 4 + I);\n}\nlet y = null;\nfunction M() {\n  return null !== y && 0 !== y.byteLength || (y = new Uint32Array(A.memory.buffer)), y;\n}\nlet F = 0;\nfunction q(A, I) {\n  const g = I(4 * A.length, 4) >>> 0;\n  return K().set(A, g / 4), F = A.length, g;\n}\nfunction R(A, I) {\n  const g = I(4 * A.length, 4) >>> 0;\n  return M().set(A, g / 4), F = A.length, g;\n}\nfunction s(I, g) {\n  try {\n    return I.apply(this, g);\n  } catch (I) {\n    A.__wbindgen_exn_store(C(I));\n  }\n}\nObject.freeze({\n  Dynamic: 0,\n  0: \"Dynamic\",\n  Fixed: 1,\n  1: \"Fixed\",\n  KinematicPositionBased: 2,\n  2: \"KinematicPositionBased\",\n  KinematicVelocityBased: 3,\n  3: \"KinematicVelocityBased\"\n}), Object.freeze({\n  Vertex: 0,\n  0: \"Vertex\",\n  Edge: 1,\n  1: \"Edge\",\n  Face: 2,\n  2: \"Face\",\n  Unknown: 3,\n  3: \"Unknown\"\n}), Object.freeze({\n  AccelerationBased: 0,\n  0: \"AccelerationBased\",\n  ForceBased: 1,\n  1: \"ForceBased\"\n});\nconst c = Object.freeze({\n    Ball: 0,\n    0: \"Ball\",\n    Cuboid: 1,\n    1: \"Cuboid\",\n    Capsule: 2,\n    2: \"Capsule\",\n    Segment: 3,\n    3: \"Segment\",\n    Polyline: 4,\n    4: \"Polyline\",\n    Triangle: 5,\n    5: \"Triangle\",\n    TriMesh: 6,\n    6: \"TriMesh\",\n    HeightField: 7,\n    7: \"HeightField\",\n    Compound: 8,\n    8: \"Compound\",\n    ConvexPolyhedron: 9,\n    9: \"ConvexPolyhedron\",\n    Cylinder: 10,\n    10: \"Cylinder\",\n    Cone: 11,\n    11: \"Cone\",\n    RoundCuboid: 12,\n    12: \"RoundCuboid\",\n    RoundTriangle: 13,\n    13: \"RoundTriangle\",\n    RoundCylinder: 14,\n    14: \"RoundCylinder\",\n    RoundCone: 15,\n    15: \"RoundCone\",\n    RoundConvexPolyhedron: 16,\n    16: \"RoundConvexPolyhedron\",\n    HalfSpace: 17,\n    17: \"HalfSpace\"\n  }),\n  Y = Object.freeze({\n    X: 0,\n    0: \"X\",\n    Y: 1,\n    1: \"Y\",\n    Z: 2,\n    2: \"Z\",\n    AngX: 3,\n    3: \"AngX\",\n    AngY: 4,\n    4: \"AngY\",\n    AngZ: 5,\n    5: \"AngZ\"\n  }),\n  H = Object.freeze({\n    Revolute: 0,\n    0: \"Revolute\",\n    Fixed: 1,\n    1: \"Fixed\",\n    Prismatic: 2,\n    2: \"Prismatic\",\n    Rope: 3,\n    3: \"Rope\",\n    Spring: 4,\n    4: \"Spring\",\n    Spherical: 5,\n    5: \"Spherical\",\n    Generic: 6,\n    6: \"Generic\"\n  });\nclass l {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(l.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawbroadphase_free(I);\n  }\n  constructor() {\n    const I = A.rawbroadphase_new();\n    return this.__wbg_ptr = I >>> 0, this;\n  }\n}\nclass L {\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawccdsolver_free(I);\n  }\n  constructor() {\n    const I = A.rawccdsolver_new();\n    return this.__wbg_ptr = I >>> 0, this;\n  }\n}\nclass t {\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawcharactercollision_free(I);\n  }\n  constructor() {\n    const I = A.rawcharactercollision_new();\n    return this.__wbg_ptr = I >>> 0, this;\n  }\n  handle() {\n    return A.rawcharactercollision_handle(this.__wbg_ptr);\n  }\n  translationDeltaApplied() {\n    const I = A.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  translationDeltaRemaining() {\n    const I = A.rawcharactercollision_translationDeltaRemaining(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  toi() {\n    return A.rawcharactercollision_toi(this.__wbg_ptr);\n  }\n  worldWitness1() {\n    const I = A.rawcharactercollision_worldWitness1(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  worldWitness2() {\n    const I = A.rawcharactercollision_worldWitness2(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  worldNormal1() {\n    const I = A.rawcharactercollision_worldNormal1(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  worldNormal2() {\n    const I = A.rawcharactercollision_worldNormal2(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n}\nclass p {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(p.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawcolliderset_free(I);\n  }\n  coTranslation(I) {\n    const g = A.rawcolliderset_coTranslation(this.__wbg_ptr, I);\n    return DA.__wrap(g);\n  }\n  coRotation(I) {\n    const g = A.rawcolliderset_coRotation(this.__wbg_ptr, I);\n    return IA.__wrap(g);\n  }\n  coSetTranslation(I, g, C, B) {\n    A.rawcolliderset_coSetTranslation(this.__wbg_ptr, I, g, C, B);\n  }\n  coSetTranslationWrtParent(I, g, C, B) {\n    A.rawcolliderset_coSetTranslationWrtParent(this.__wbg_ptr, I, g, C, B);\n  }\n  coSetRotation(I, g, C, B, Q) {\n    A.rawcolliderset_coSetRotation(this.__wbg_ptr, I, g, C, B, Q);\n  }\n  coSetRotationWrtParent(I, g, C, B, Q) {\n    A.rawcolliderset_coSetRotationWrtParent(this.__wbg_ptr, I, g, C, B, Q);\n  }\n  coIsSensor(I) {\n    return 0 !== A.rawcolliderset_coIsSensor(this.__wbg_ptr, I);\n  }\n  coShapeType(I) {\n    return A.rawcolliderset_coShapeType(this.__wbg_ptr, I);\n  }\n  coHalfspaceNormal(I) {\n    const g = A.rawcolliderset_coHalfspaceNormal(this.__wbg_ptr, I);\n    return 0 === g ? void 0 : DA.__wrap(g);\n  }\n  coHalfExtents(I) {\n    const g = A.rawcolliderset_coHalfExtents(this.__wbg_ptr, I);\n    return 0 === g ? void 0 : DA.__wrap(g);\n  }\n  coSetHalfExtents(I, g) {\n    a(g, DA), A.rawcolliderset_coSetHalfExtents(this.__wbg_ptr, I, g.__wbg_ptr);\n  }\n  coRadius(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawcolliderset_coRadius(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  coSetRadius(I, g) {\n    A.rawcolliderset_coSetRadius(this.__wbg_ptr, I, g);\n  }\n  coHalfHeight(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawcolliderset_coHalfHeight(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  coSetHalfHeight(I, g) {\n    A.rawcolliderset_coSetHalfHeight(this.__wbg_ptr, I, g);\n  }\n  coRoundRadius(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawcolliderset_coRoundRadius(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  coSetRoundRadius(I, g) {\n    A.rawcolliderset_coSetRoundRadius(this.__wbg_ptr, I, g);\n  }\n  coVertices(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawcolliderset_coVertices(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = G()[B / 4 + 1];\n      let Q;\n      return 0 !== g && (Q = N(g, C).slice(), A.__wbindgen_free(g, 4 * C, 4)), Q;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  coIndices(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawcolliderset_coIndices(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = G()[B / 4 + 1];\n      let Q;\n      return 0 !== g && (Q = function (A, I) {\n        return A >>>= 0, M().subarray(A / 4, A / 4 + I);\n      }(g, C).slice(), A.__wbindgen_free(g, 4 * C, 4)), Q;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  coHeightfieldHeights(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawcolliderset_coHeightfieldHeights(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = G()[B / 4 + 1];\n      let Q;\n      return 0 !== g && (Q = N(g, C).slice(), A.__wbindgen_free(g, 4 * C, 4)), Q;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  coHeightfieldScale(I) {\n    const g = A.rawcolliderset_coHeightfieldScale(this.__wbg_ptr, I);\n    return 0 === g ? void 0 : DA.__wrap(g);\n  }\n  coHeightfieldNRows(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawcolliderset_coHeightfieldNRows(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = G()[B / 4 + 1];\n      return 0 === g ? void 0 : C >>> 0;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  coHeightfieldNCols(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawcolliderset_coHeightfieldNCols(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = G()[B / 4 + 1];\n      return 0 === g ? void 0 : C >>> 0;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  coParent(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawcolliderset_coParent(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = D()[B / 8 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  coSetEnabled(I, g) {\n    A.rawcolliderset_coSetEnabled(this.__wbg_ptr, I, g);\n  }\n  coIsEnabled(I) {\n    return 0 !== A.rawcolliderset_coIsEnabled(this.__wbg_ptr, I);\n  }\n  coFriction(I) {\n    return A.rawcolliderset_coFriction(this.__wbg_ptr, I);\n  }\n  coRestitution(I) {\n    return A.rawcolliderset_coRestitution(this.__wbg_ptr, I);\n  }\n  coDensity(I) {\n    return A.rawcolliderset_coDensity(this.__wbg_ptr, I);\n  }\n  coMass(I) {\n    return A.rawcolliderset_coMass(this.__wbg_ptr, I);\n  }\n  coVolume(I) {\n    return A.rawcolliderset_coVolume(this.__wbg_ptr, I);\n  }\n  coCollisionGroups(I) {\n    return A.rawcolliderset_coCollisionGroups(this.__wbg_ptr, I) >>> 0;\n  }\n  coSolverGroups(I) {\n    return A.rawcolliderset_coSolverGroups(this.__wbg_ptr, I) >>> 0;\n  }\n  coActiveHooks(I) {\n    return A.rawcolliderset_coActiveHooks(this.__wbg_ptr, I) >>> 0;\n  }\n  coActiveCollisionTypes(I) {\n    return A.rawcolliderset_coActiveCollisionTypes(this.__wbg_ptr, I);\n  }\n  coActiveEvents(I) {\n    return A.rawcolliderset_coActiveEvents(this.__wbg_ptr, I) >>> 0;\n  }\n  coContactForceEventThreshold(I) {\n    return A.rawcolliderset_coContactForceEventThreshold(this.__wbg_ptr, I);\n  }\n  coContainsPoint(I, g) {\n    a(g, DA);\n    return 0 !== A.rawcolliderset_coContainsPoint(this.__wbg_ptr, I, g.__wbg_ptr);\n  }\n  coCastShape(I, g, C, B, Q, E, i, D) {\n    a(g, DA), a(C, BA), a(B, DA), a(Q, IA), a(E, DA);\n    const o = A.rawcolliderset_coCastShape(this.__wbg_ptr, I, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr, E.__wbg_ptr, i, D);\n    return 0 === o ? void 0 : iA.__wrap(o);\n  }\n  coCastCollider(I, g, C, B, Q, E) {\n    a(g, DA), a(B, DA);\n    const i = A.rawcolliderset_coCastCollider(this.__wbg_ptr, I, g.__wbg_ptr, C, B.__wbg_ptr, Q, E);\n    return 0 === i ? void 0 : QA.__wrap(i);\n  }\n  coIntersectsShape(I, g, C, B) {\n    a(g, BA), a(C, DA), a(B, IA);\n    return 0 !== A.rawcolliderset_coIntersectsShape(this.__wbg_ptr, I, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr);\n  }\n  coContactShape(I, g, C, B, Q) {\n    a(g, BA), a(C, DA), a(B, IA);\n    const E = A.rawcolliderset_coContactShape(this.__wbg_ptr, I, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q);\n    return 0 === E ? void 0 : EA.__wrap(E);\n  }\n  coContactCollider(I, g, C) {\n    const B = A.rawcolliderset_coContactCollider(this.__wbg_ptr, I, g, C);\n    return 0 === B ? void 0 : EA.__wrap(B);\n  }\n  coProjectPoint(I, g, C) {\n    a(g, DA);\n    const B = A.rawcolliderset_coProjectPoint(this.__wbg_ptr, I, g.__wbg_ptr, C);\n    return u.__wrap(B);\n  }\n  coIntersectsRay(I, g, C, B) {\n    a(g, DA), a(C, DA);\n    return 0 !== A.rawcolliderset_coIntersectsRay(this.__wbg_ptr, I, g.__wbg_ptr, C.__wbg_ptr, B);\n  }\n  coCastRay(I, g, C, B, Q) {\n    a(g, DA), a(C, DA);\n    return A.rawcolliderset_coCastRay(this.__wbg_ptr, I, g.__wbg_ptr, C.__wbg_ptr, B, Q);\n  }\n  coCastRayAndGetNormal(I, g, C, B, Q) {\n    a(g, DA), a(C, DA);\n    const E = A.rawcolliderset_coCastRayAndGetNormal(this.__wbg_ptr, I, g.__wbg_ptr, C.__wbg_ptr, B, Q);\n    return 0 === E ? void 0 : $.__wrap(E);\n  }\n  coSetSensor(I, g) {\n    A.rawcolliderset_coSetSensor(this.__wbg_ptr, I, g);\n  }\n  coSetRestitution(I, g) {\n    A.rawcolliderset_coSetRestitution(this.__wbg_ptr, I, g);\n  }\n  coSetFriction(I, g) {\n    A.rawcolliderset_coSetFriction(this.__wbg_ptr, I, g);\n  }\n  coFrictionCombineRule(I) {\n    return A.rawcolliderset_coFrictionCombineRule(this.__wbg_ptr, I) >>> 0;\n  }\n  coSetFrictionCombineRule(I, g) {\n    A.rawcolliderset_coSetFrictionCombineRule(this.__wbg_ptr, I, g);\n  }\n  coRestitutionCombineRule(I) {\n    return A.rawcolliderset_coRestitutionCombineRule(this.__wbg_ptr, I) >>> 0;\n  }\n  coSetRestitutionCombineRule(I, g) {\n    A.rawcolliderset_coSetRestitutionCombineRule(this.__wbg_ptr, I, g);\n  }\n  coSetCollisionGroups(I, g) {\n    A.rawcolliderset_coSetCollisionGroups(this.__wbg_ptr, I, g);\n  }\n  coSetSolverGroups(I, g) {\n    A.rawcolliderset_coSetSolverGroups(this.__wbg_ptr, I, g);\n  }\n  coSetActiveHooks(I, g) {\n    A.rawcolliderset_coSetActiveHooks(this.__wbg_ptr, I, g);\n  }\n  coSetActiveEvents(I, g) {\n    A.rawcolliderset_coSetActiveEvents(this.__wbg_ptr, I, g);\n  }\n  coSetActiveCollisionTypes(I, g) {\n    A.rawcolliderset_coSetActiveCollisionTypes(this.__wbg_ptr, I, g);\n  }\n  coSetShape(I, g) {\n    a(g, BA), A.rawcolliderset_coSetShape(this.__wbg_ptr, I, g.__wbg_ptr);\n  }\n  coSetContactForceEventThreshold(I, g) {\n    A.rawcolliderset_coSetContactForceEventThreshold(this.__wbg_ptr, I, g);\n  }\n  coSetDensity(I, g) {\n    A.rawcolliderset_coSetDensity(this.__wbg_ptr, I, g);\n  }\n  coSetMass(I, g) {\n    A.rawcolliderset_coSetMass(this.__wbg_ptr, I, g);\n  }\n  coSetMassProperties(I, g, C, B, Q) {\n    a(C, DA), a(B, DA), a(Q, IA), A.rawcolliderset_coSetMassProperties(this.__wbg_ptr, I, g, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr);\n  }\n  constructor() {\n    const I = A.rawcolliderset_new();\n    return this.__wbg_ptr = I >>> 0, this;\n  }\n  len() {\n    return A.rawcolliderset_len(this.__wbg_ptr) >>> 0;\n  }\n  contains(I) {\n    return 0 !== A.rawcolliderset_contains(this.__wbg_ptr, I);\n  }\n  createCollider(I, g, C, B, Q, E, i, o, w, S, k, h, K, U, J, N, y, M, F, q, R, s, c, Y) {\n    try {\n      const L = A.__wbindgen_add_to_stack_pointer(-16);\n      a(g, BA), a(C, DA), a(B, IA), a(i, DA), a(o, DA), a(w, IA), a(Y, AA), A.rawcolliderset_createCollider(L, this.__wbg_ptr, I, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q, E, i.__wbg_ptr, o.__wbg_ptr, w.__wbg_ptr, S, k, h, K, U, J, N, y, M, F, q, R, s, c, Y.__wbg_ptr);\n      var H = G()[L / 4 + 0],\n        l = D()[L / 8 + 1];\n      return 0 === H ? void 0 : l;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  remove(I, g, C, B) {\n    a(g, m), a(C, AA), A.rawcolliderset_remove(this.__wbg_ptr, I, g.__wbg_ptr, C.__wbg_ptr, B);\n  }\n  isHandleValid(I) {\n    return 0 !== A.rawcolliderset_contains(this.__wbg_ptr, I);\n  }\n  forEachColliderHandle(g) {\n    try {\n      A.rawcolliderset_forEachColliderHandle(this.__wbg_ptr, J(g));\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n}\nclass e {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(e.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawcontactforceevent_free(I);\n  }\n  collider1() {\n    return A.rawcharactercollision_handle(this.__wbg_ptr);\n  }\n  collider2() {\n    return A.rawcontactforceevent_collider2(this.__wbg_ptr);\n  }\n  total_force() {\n    const I = A.rawcontactforceevent_total_force(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  total_force_magnitude() {\n    return A.rawcontactforceevent_total_force_magnitude(this.__wbg_ptr);\n  }\n  max_force_direction() {\n    const I = A.rawcontactforceevent_max_force_direction(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  max_force_magnitude() {\n    return A.rawcontactforceevent_max_force_magnitude(this.__wbg_ptr);\n  }\n}\nclass r {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(r.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawcontactmanifold_free(I);\n  }\n  normal() {\n    const I = A.rawcontactmanifold_normal(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  local_n1() {\n    const I = A.rawcontactmanifold_local_n1(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  local_n2() {\n    const I = A.rawcontactmanifold_local_n2(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  subshape1() {\n    return A.rawcontactmanifold_subshape1(this.__wbg_ptr) >>> 0;\n  }\n  subshape2() {\n    return A.rawcontactmanifold_subshape2(this.__wbg_ptr) >>> 0;\n  }\n  num_contacts() {\n    return A.rawcontactmanifold_num_contacts(this.__wbg_ptr) >>> 0;\n  }\n  contact_local_p1(I) {\n    const g = A.rawcontactmanifold_contact_local_p1(this.__wbg_ptr, I);\n    return 0 === g ? void 0 : DA.__wrap(g);\n  }\n  contact_local_p2(I) {\n    const g = A.rawcontactmanifold_contact_local_p2(this.__wbg_ptr, I);\n    return 0 === g ? void 0 : DA.__wrap(g);\n  }\n  contact_dist(I) {\n    return A.rawcontactmanifold_contact_dist(this.__wbg_ptr, I);\n  }\n  contact_fid1(I) {\n    return A.rawcontactmanifold_contact_fid1(this.__wbg_ptr, I) >>> 0;\n  }\n  contact_fid2(I) {\n    return A.rawcontactmanifold_contact_fid2(this.__wbg_ptr, I) >>> 0;\n  }\n  contact_impulse(I) {\n    return A.rawcontactmanifold_contact_impulse(this.__wbg_ptr, I);\n  }\n  contact_tangent_impulse_x(I) {\n    return A.rawcontactmanifold_contact_tangent_impulse_x(this.__wbg_ptr, I);\n  }\n  contact_tangent_impulse_y(I) {\n    return A.rawcontactmanifold_contact_tangent_impulse_y(this.__wbg_ptr, I);\n  }\n  num_solver_contacts() {\n    return A.rawcontactmanifold_num_solver_contacts(this.__wbg_ptr) >>> 0;\n  }\n  solver_contact_point(I) {\n    const g = A.rawcontactmanifold_solver_contact_point(this.__wbg_ptr, I);\n    return 0 === g ? void 0 : DA.__wrap(g);\n  }\n  solver_contact_dist(I) {\n    return A.rawcontactmanifold_solver_contact_dist(this.__wbg_ptr, I);\n  }\n  solver_contact_friction(I) {\n    return A.rawcontactmanifold_solver_contact_friction(this.__wbg_ptr, I);\n  }\n  solver_contact_restitution(I) {\n    return A.rawcontactmanifold_solver_contact_restitution(this.__wbg_ptr, I);\n  }\n  solver_contact_tangent_velocity(I) {\n    const g = A.rawcontactmanifold_solver_contact_tangent_velocity(this.__wbg_ptr, I);\n    return DA.__wrap(g);\n  }\n}\nclass d {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(d.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawcontactpair_free(I);\n  }\n  collider1() {\n    return A.rawcontactpair_collider1(this.__wbg_ptr);\n  }\n  collider2() {\n    return A.rawcontactpair_collider2(this.__wbg_ptr);\n  }\n  numContactManifolds() {\n    return A.rawcontactpair_numContactManifolds(this.__wbg_ptr) >>> 0;\n  }\n  contactManifold(I) {\n    const g = A.rawcontactpair_contactManifold(this.__wbg_ptr, I);\n    return 0 === g ? void 0 : r.__wrap(g);\n  }\n}\nclass T {\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawdebugrenderpipeline_free(I);\n  }\n  constructor() {\n    const I = A.rawdebugrenderpipeline_new();\n    return this.__wbg_ptr = I >>> 0, this;\n  }\n  vertices() {\n    return Q(A.rawdebugrenderpipeline_vertices(this.__wbg_ptr));\n  }\n  colors() {\n    return Q(A.rawdebugrenderpipeline_colors(this.__wbg_ptr));\n  }\n  render(I, g, C, B, Q) {\n    a(I, AA), a(g, p), a(C, W), a(B, f), a(Q, X), A.rawdebugrenderpipeline_render(this.__wbg_ptr, I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr);\n  }\n}\nclass n {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(n.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawdeserializedworld_free(I);\n  }\n  takeGravity() {\n    const I = A.rawdeserializedworld_takeGravity(this.__wbg_ptr);\n    return 0 === I ? void 0 : DA.__wrap(I);\n  }\n  takeIntegrationParameters() {\n    const I = A.rawdeserializedworld_takeIntegrationParameters(this.__wbg_ptr);\n    return 0 === I ? void 0 : x.__wrap(I);\n  }\n  takeIslandManager() {\n    const I = A.rawdeserializedworld_takeIslandManager(this.__wbg_ptr);\n    return 0 === I ? void 0 : m.__wrap(I);\n  }\n  takeBroadPhase() {\n    const I = A.rawdeserializedworld_takeBroadPhase(this.__wbg_ptr);\n    return 0 === I ? void 0 : l.__wrap(I);\n  }\n  takeNarrowPhase() {\n    const I = A.rawdeserializedworld_takeNarrowPhase(this.__wbg_ptr);\n    return 0 === I ? void 0 : X.__wrap(I);\n  }\n  takeBodies() {\n    const I = A.rawdeserializedworld_takeBodies(this.__wbg_ptr);\n    return 0 === I ? void 0 : AA.__wrap(I);\n  }\n  takeColliders() {\n    const I = A.rawdeserializedworld_takeColliders(this.__wbg_ptr);\n    return 0 === I ? void 0 : p.__wrap(I);\n  }\n  takeImpulseJoints() {\n    const I = A.rawdeserializedworld_takeImpulseJoints(this.__wbg_ptr);\n    return 0 === I ? void 0 : W.__wrap(I);\n  }\n  takeMultibodyJoints() {\n    const I = A.rawdeserializedworld_takeMultibodyJoints(this.__wbg_ptr);\n    return 0 === I ? void 0 : f.__wrap(I);\n  }\n}\nclass O {\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawdynamicraycastvehiclecontroller_free(I);\n  }\n  constructor(I) {\n    const g = A.rawdynamicraycastvehiclecontroller_new(I);\n    return this.__wbg_ptr = g >>> 0, this;\n  }\n  current_vehicle_speed() {\n    return A.rawdynamicraycastvehiclecontroller_current_vehicle_speed(this.__wbg_ptr);\n  }\n  chassis() {\n    return A.rawdynamicraycastvehiclecontroller_chassis(this.__wbg_ptr);\n  }\n  index_up_axis() {\n    return A.rawdynamicraycastvehiclecontroller_index_up_axis(this.__wbg_ptr) >>> 0;\n  }\n  set_index_up_axis(I) {\n    A.rawdynamicraycastvehiclecontroller_set_index_up_axis(this.__wbg_ptr, I);\n  }\n  index_forward_axis() {\n    return A.rawdynamicraycastvehiclecontroller_index_forward_axis(this.__wbg_ptr) >>> 0;\n  }\n  set_index_forward_axis(I) {\n    A.rawdynamicraycastvehiclecontroller_set_index_forward_axis(this.__wbg_ptr, I);\n  }\n  add_wheel(I, g, C, B, Q) {\n    a(I, DA), a(g, DA), a(C, DA), A.rawdynamicraycastvehiclecontroller_add_wheel(this.__wbg_ptr, I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B, Q);\n  }\n  num_wheels() {\n    return A.rawdynamicraycastvehiclecontroller_num_wheels(this.__wbg_ptr) >>> 0;\n  }\n  update_vehicle(g, C, B, Q, i, D, o) {\n    try {\n      a(C, AA), a(B, p), a(Q, z), A.rawdynamicraycastvehiclecontroller_update_vehicle(this.__wbg_ptr, g, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr, i, !E(D), E(D) ? 0 : D, J(o));\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n  wheel_chassis_connection_point_cs(I) {\n    const g = A.rawdynamicraycastvehiclecontroller_wheel_chassis_connection_point_cs(this.__wbg_ptr, I);\n    return 0 === g ? void 0 : DA.__wrap(g);\n  }\n  set_wheel_chassis_connection_point_cs(I, g) {\n    a(g, DA), A.rawdynamicraycastvehiclecontroller_set_wheel_chassis_connection_point_cs(this.__wbg_ptr, I, g.__wbg_ptr);\n  }\n  wheel_suspension_rest_length(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_suspension_rest_length(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set_wheel_suspension_rest_length(I, g) {\n    A.rawdynamicraycastvehiclecontroller_set_wheel_suspension_rest_length(this.__wbg_ptr, I, g);\n  }\n  wheel_max_suspension_travel(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_max_suspension_travel(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set_wheel_max_suspension_travel(I, g) {\n    A.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_travel(this.__wbg_ptr, I, g);\n  }\n  wheel_radius(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_radius(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set_wheel_radius(I, g) {\n    A.rawdynamicraycastvehiclecontroller_set_wheel_radius(this.__wbg_ptr, I, g);\n  }\n  wheel_suspension_stiffness(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_suspension_stiffness(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set_wheel_suspension_stiffness(I, g) {\n    A.rawdynamicraycastvehiclecontroller_set_wheel_suspension_stiffness(this.__wbg_ptr, I, g);\n  }\n  wheel_suspension_compression(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_suspension_compression(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set_wheel_suspension_compression(I, g) {\n    A.rawdynamicraycastvehiclecontroller_set_wheel_suspension_compression(this.__wbg_ptr, I, g);\n  }\n  wheel_suspension_relaxation(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_suspension_relaxation(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set_wheel_suspension_relaxation(I, g) {\n    A.rawdynamicraycastvehiclecontroller_set_wheel_suspension_relaxation(this.__wbg_ptr, I, g);\n  }\n  wheel_max_suspension_force(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_max_suspension_force(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set_wheel_max_suspension_force(I, g) {\n    A.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_force(this.__wbg_ptr, I, g);\n  }\n  wheel_brake(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_brake(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set_wheel_brake(I, g) {\n    A.rawdynamicraycastvehiclecontroller_set_wheel_brake(this.__wbg_ptr, I, g);\n  }\n  wheel_steering(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_steering(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set_wheel_steering(I, g) {\n    A.rawdynamicraycastvehiclecontroller_set_wheel_steering(this.__wbg_ptr, I, g);\n  }\n  wheel_engine_force(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_engine_force(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set_wheel_engine_force(I, g) {\n    A.rawdynamicraycastvehiclecontroller_set_wheel_engine_force(this.__wbg_ptr, I, g);\n  }\n  wheel_direction_cs(I) {\n    const g = A.rawdynamicraycastvehiclecontroller_wheel_direction_cs(this.__wbg_ptr, I);\n    return 0 === g ? void 0 : DA.__wrap(g);\n  }\n  set_wheel_direction_cs(I, g) {\n    a(g, DA), A.rawdynamicraycastvehiclecontroller_set_wheel_direction_cs(this.__wbg_ptr, I, g.__wbg_ptr);\n  }\n  wheel_axle_cs(I) {\n    const g = A.rawdynamicraycastvehiclecontroller_wheel_axle_cs(this.__wbg_ptr, I);\n    return 0 === g ? void 0 : DA.__wrap(g);\n  }\n  set_wheel_axle_cs(I, g) {\n    a(g, DA), A.rawdynamicraycastvehiclecontroller_set_wheel_axle_cs(this.__wbg_ptr, I, g.__wbg_ptr);\n  }\n  wheel_friction_slip(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_friction_slip(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set_wheel_friction_slip(I, g) {\n    A.rawdynamicraycastvehiclecontroller_set_wheel_friction_slip(this.__wbg_ptr, I, g);\n  }\n  wheel_side_friction_stiffness(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_side_friction_stiffness(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  set_wheel_side_friction_stiffness(I, g) {\n    A.rawdynamicraycastvehiclecontroller_set_wheel_side_friction_stiffness(this.__wbg_ptr, I, g);\n  }\n  wheel_rotation(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_rotation(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  wheel_forward_impulse(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_forward_impulse(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  wheel_side_impulse(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_side_impulse(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  wheel_suspension_force(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_suspension_force(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  wheel_contact_normal_ws(I) {\n    const g = A.rawdynamicraycastvehiclecontroller_wheel_contact_normal_ws(this.__wbg_ptr, I);\n    return 0 === g ? void 0 : DA.__wrap(g);\n  }\n  wheel_contact_point_ws(I) {\n    const g = A.rawdynamicraycastvehiclecontroller_wheel_contact_point_ws(this.__wbg_ptr, I);\n    return 0 === g ? void 0 : DA.__wrap(g);\n  }\n  wheel_suspension_length(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_suspension_length(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = K()[B / 4 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  wheel_hard_point_ws(I) {\n    const g = A.rawdynamicraycastvehiclecontroller_wheel_hard_point_ws(this.__wbg_ptr, I);\n    return 0 === g ? void 0 : DA.__wrap(g);\n  }\n  wheel_is_in_contact(I) {\n    return 0 !== A.rawdynamicraycastvehiclecontroller_wheel_is_in_contact(this.__wbg_ptr, I);\n  }\n  wheel_ground_object(I) {\n    try {\n      const B = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawdynamicraycastvehiclecontroller_wheel_ground_object(B, this.__wbg_ptr, I);\n      var g = G()[B / 4 + 0],\n        C = D()[B / 8 + 1];\n      return 0 === g ? void 0 : C;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nclass Z {\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_raweventqueue_free(I);\n  }\n  constructor(I) {\n    const g = A.raweventqueue_new(I);\n    return this.__wbg_ptr = g >>> 0, this;\n  }\n  drainCollisionEvents(g) {\n    try {\n      A.raweventqueue_drainCollisionEvents(this.__wbg_ptr, J(g));\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n  drainContactForceEvents(g) {\n    try {\n      A.raweventqueue_drainContactForceEvents(this.__wbg_ptr, J(g));\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n  clear() {\n    A.raweventqueue_clear(this.__wbg_ptr);\n  }\n}\nclass b {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(b.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawgenericjoint_free(I);\n  }\n  static generic(I, g, C, B) {\n    a(I, DA), a(g, DA), a(C, DA);\n    const Q = A.rawgenericjoint_generic(I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B);\n    return 0 === Q ? void 0 : b.__wrap(Q);\n  }\n  static spring(I, g, C, B, Q) {\n    a(B, DA), a(Q, DA);\n    const E = A.rawgenericjoint_spring(I, g, C, B.__wbg_ptr, Q.__wbg_ptr);\n    return b.__wrap(E);\n  }\n  static rope(I, g, C) {\n    a(g, DA), a(C, DA);\n    const B = A.rawgenericjoint_rope(I, g.__wbg_ptr, C.__wbg_ptr);\n    return b.__wrap(B);\n  }\n  static spherical(I, g) {\n    a(I, DA), a(g, DA);\n    const C = A.rawgenericjoint_spherical(I.__wbg_ptr, g.__wbg_ptr);\n    return b.__wrap(C);\n  }\n  static prismatic(I, g, C, B, Q, E) {\n    a(I, DA), a(g, DA), a(C, DA);\n    const i = A.rawgenericjoint_prismatic(I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B, Q, E);\n    return 0 === i ? void 0 : b.__wrap(i);\n  }\n  static fixed(I, g, C, B) {\n    a(I, DA), a(g, IA), a(C, DA), a(B, IA);\n    const Q = A.rawgenericjoint_fixed(I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr);\n    return b.__wrap(Q);\n  }\n  static revolute(I, g, C) {\n    a(I, DA), a(g, DA), a(C, DA);\n    const B = A.rawgenericjoint_revolute(I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr);\n    return 0 === B ? void 0 : b.__wrap(B);\n  }\n}\nclass W {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(W.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawimpulsejointset_free(I);\n  }\n  jointType(I) {\n    return A.rawimpulsejointset_jointType(this.__wbg_ptr, I);\n  }\n  jointBodyHandle1(I) {\n    return A.rawimpulsejointset_jointBodyHandle1(this.__wbg_ptr, I);\n  }\n  jointBodyHandle2(I) {\n    return A.rawimpulsejointset_jointBodyHandle2(this.__wbg_ptr, I);\n  }\n  jointFrameX1(I) {\n    const g = A.rawimpulsejointset_jointFrameX1(this.__wbg_ptr, I);\n    return IA.__wrap(g);\n  }\n  jointFrameX2(I) {\n    const g = A.rawimpulsejointset_jointFrameX2(this.__wbg_ptr, I);\n    return IA.__wrap(g);\n  }\n  jointAnchor1(I) {\n    const g = A.rawimpulsejointset_jointAnchor1(this.__wbg_ptr, I);\n    return DA.__wrap(g);\n  }\n  jointAnchor2(I) {\n    const g = A.rawimpulsejointset_jointAnchor2(this.__wbg_ptr, I);\n    return DA.__wrap(g);\n  }\n  jointSetAnchor1(I, g) {\n    a(g, DA), A.rawimpulsejointset_jointSetAnchor1(this.__wbg_ptr, I, g.__wbg_ptr);\n  }\n  jointSetAnchor2(I, g) {\n    a(g, DA), A.rawimpulsejointset_jointSetAnchor2(this.__wbg_ptr, I, g.__wbg_ptr);\n  }\n  jointContactsEnabled(I) {\n    return 0 !== A.rawimpulsejointset_jointContactsEnabled(this.__wbg_ptr, I);\n  }\n  jointSetContactsEnabled(I, g) {\n    A.rawimpulsejointset_jointSetContactsEnabled(this.__wbg_ptr, I, g);\n  }\n  jointLimitsEnabled(I, g) {\n    return 0 !== A.rawimpulsejointset_jointLimitsEnabled(this.__wbg_ptr, I, g);\n  }\n  jointLimitsMin(I, g) {\n    return A.rawimpulsejointset_jointLimitsMin(this.__wbg_ptr, I, g);\n  }\n  jointLimitsMax(I, g) {\n    return A.rawimpulsejointset_jointLimitsMax(this.__wbg_ptr, I, g);\n  }\n  jointSetLimits(I, g, C, B) {\n    A.rawimpulsejointset_jointSetLimits(this.__wbg_ptr, I, g, C, B);\n  }\n  jointConfigureMotorModel(I, g, C) {\n    A.rawimpulsejointset_jointConfigureMotorModel(this.__wbg_ptr, I, g, C);\n  }\n  jointConfigureMotorVelocity(I, g, C, B) {\n    A.rawimpulsejointset_jointConfigureMotorVelocity(this.__wbg_ptr, I, g, C, B);\n  }\n  jointConfigureMotorPosition(I, g, C, B, Q) {\n    A.rawimpulsejointset_jointConfigureMotorPosition(this.__wbg_ptr, I, g, C, B, Q);\n  }\n  jointConfigureMotor(I, g, C, B, Q, E) {\n    A.rawimpulsejointset_jointConfigureMotor(this.__wbg_ptr, I, g, C, B, Q, E);\n  }\n  constructor() {\n    const I = A.rawimpulsejointset_new();\n    return this.__wbg_ptr = I >>> 0, this;\n  }\n  createJoint(I, g, C, B) {\n    a(I, b);\n    return A.rawimpulsejointset_createJoint(this.__wbg_ptr, I.__wbg_ptr, g, C, B);\n  }\n  remove(I, g) {\n    A.rawimpulsejointset_remove(this.__wbg_ptr, I, g);\n  }\n  len() {\n    return A.rawimpulsejointset_len(this.__wbg_ptr) >>> 0;\n  }\n  contains(I) {\n    return 0 !== A.rawimpulsejointset_contains(this.__wbg_ptr, I);\n  }\n  forEachJointHandle(g) {\n    try {\n      A.rawimpulsejointset_forEachJointHandle(this.__wbg_ptr, J(g));\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n  forEachJointAttachedToRigidBody(g, C) {\n    try {\n      A.rawimpulsejointset_forEachJointAttachedToRigidBody(this.__wbg_ptr, g, J(C));\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n}\nclass x {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(x.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawintegrationparameters_free(I);\n  }\n  constructor() {\n    const I = A.rawintegrationparameters_new();\n    return this.__wbg_ptr = I >>> 0, this;\n  }\n  get dt() {\n    return A.rawintegrationparameters_dt(this.__wbg_ptr);\n  }\n  get erp() {\n    return A.rawintegrationparameters_erp(this.__wbg_ptr);\n  }\n  get allowedLinearError() {\n    return A.rawcontactforceevent_total_force_magnitude(this.__wbg_ptr);\n  }\n  get predictionDistance() {\n    return A.rawdynamicraycastvehiclecontroller_current_vehicle_speed(this.__wbg_ptr);\n  }\n  get numSolverIterations() {\n    return A.rawintegrationparameters_numSolverIterations(this.__wbg_ptr) >>> 0;\n  }\n  get numAdditionalFrictionIterations() {\n    return A.rawintegrationparameters_numAdditionalFrictionIterations(this.__wbg_ptr) >>> 0;\n  }\n  get numInternalPgsIterations() {\n    return A.rawintegrationparameters_numInternalPgsIterations(this.__wbg_ptr) >>> 0;\n  }\n  get minIslandSize() {\n    return A.rawdynamicraycastvehiclecontroller_index_up_axis(this.__wbg_ptr) >>> 0;\n  }\n  get maxCcdSubsteps() {\n    return A.rawdynamicraycastvehiclecontroller_index_forward_axis(this.__wbg_ptr) >>> 0;\n  }\n  set dt(I) {\n    A.rawintegrationparameters_set_dt(this.__wbg_ptr, I);\n  }\n  set erp(I) {\n    A.rawintegrationparameters_set_erp(this.__wbg_ptr, I);\n  }\n  set allowedLinearError(I) {\n    A.rawintegrationparameters_set_allowedLinearError(this.__wbg_ptr, I);\n  }\n  set predictionDistance(I) {\n    A.rawintegrationparameters_set_predictionDistance(this.__wbg_ptr, I);\n  }\n  set numSolverIterations(I) {\n    A.rawintegrationparameters_set_numSolverIterations(this.__wbg_ptr, I);\n  }\n  set numAdditionalFrictionIterations(I) {\n    A.rawintegrationparameters_set_numAdditionalFrictionIterations(this.__wbg_ptr, I);\n  }\n  set numInternalPgsIterations(I) {\n    A.rawintegrationparameters_set_numInternalPgsIterations(this.__wbg_ptr, I);\n  }\n  set minIslandSize(I) {\n    A.rawdynamicraycastvehiclecontroller_set_index_up_axis(this.__wbg_ptr, I);\n  }\n  set maxCcdSubsteps(I) {\n    A.rawdynamicraycastvehiclecontroller_set_index_forward_axis(this.__wbg_ptr, I);\n  }\n  switchToStandardPgsSolver() {\n    A.rawintegrationparameters_switchToStandardPgsSolver(this.__wbg_ptr);\n  }\n  switchToSmallStepsPgsSolver() {\n    A.rawintegrationparameters_switchToSmallStepsPgsSolver(this.__wbg_ptr);\n  }\n}\nclass m {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(m.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawislandmanager_free(I);\n  }\n  constructor() {\n    const I = A.rawislandmanager_new();\n    return this.__wbg_ptr = I >>> 0, this;\n  }\n  forEachActiveRigidBodyHandle(g) {\n    try {\n      A.rawislandmanager_forEachActiveRigidBodyHandle(this.__wbg_ptr, J(g));\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n}\nclass j {\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawkinematiccharactercontroller_free(I);\n  }\n  constructor(I) {\n    const g = A.rawkinematiccharactercontroller_new(I);\n    return this.__wbg_ptr = g >>> 0, this;\n  }\n  up() {\n    const I = A.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  setUp(I) {\n    a(I, DA), A.rawkinematiccharactercontroller_setUp(this.__wbg_ptr, I.__wbg_ptr);\n  }\n  offset() {\n    return A.rawintegrationparameters_dt(this.__wbg_ptr);\n  }\n  setOffset(I) {\n    A.rawkinematiccharactercontroller_setOffset(this.__wbg_ptr, I);\n  }\n  slideEnabled() {\n    return 0 !== A.rawkinematiccharactercontroller_slideEnabled(this.__wbg_ptr);\n  }\n  setSlideEnabled(I) {\n    A.rawkinematiccharactercontroller_setSlideEnabled(this.__wbg_ptr, I);\n  }\n  autostepMaxHeight() {\n    try {\n      const C = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawkinematiccharactercontroller_autostepMaxHeight(C, this.__wbg_ptr);\n      var I = G()[C / 4 + 0],\n        g = K()[C / 4 + 1];\n      return 0 === I ? void 0 : g;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  autostepMinWidth() {\n    try {\n      const C = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawkinematiccharactercontroller_autostepMinWidth(C, this.__wbg_ptr);\n      var I = G()[C / 4 + 0],\n        g = K()[C / 4 + 1];\n      return 0 === I ? void 0 : g;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  autostepIncludesDynamicBodies() {\n    const I = A.rawkinematiccharactercontroller_autostepIncludesDynamicBodies(this.__wbg_ptr);\n    return 16777215 === I ? void 0 : 0 !== I;\n  }\n  autostepEnabled() {\n    return 0 !== A.rawkinematiccharactercontroller_autostepEnabled(this.__wbg_ptr);\n  }\n  enableAutostep(I, g, C) {\n    A.rawkinematiccharactercontroller_enableAutostep(this.__wbg_ptr, I, g, C);\n  }\n  disableAutostep() {\n    A.rawkinematiccharactercontroller_disableAutostep(this.__wbg_ptr);\n  }\n  maxSlopeClimbAngle() {\n    return A.rawkinematiccharactercontroller_maxSlopeClimbAngle(this.__wbg_ptr);\n  }\n  setMaxSlopeClimbAngle(I) {\n    A.rawkinematiccharactercontroller_setMaxSlopeClimbAngle(this.__wbg_ptr, I);\n  }\n  minSlopeSlideAngle() {\n    return A.rawkinematiccharactercontroller_minSlopeSlideAngle(this.__wbg_ptr);\n  }\n  setMinSlopeSlideAngle(I) {\n    A.rawkinematiccharactercontroller_setMinSlopeSlideAngle(this.__wbg_ptr, I);\n  }\n  snapToGroundDistance() {\n    try {\n      const C = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawkinematiccharactercontroller_snapToGroundDistance(C, this.__wbg_ptr);\n      var I = G()[C / 4 + 0],\n        g = K()[C / 4 + 1];\n      return 0 === I ? void 0 : g;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  enableSnapToGround(I) {\n    A.rawkinematiccharactercontroller_enableSnapToGround(this.__wbg_ptr, I);\n  }\n  disableSnapToGround() {\n    A.rawkinematiccharactercontroller_disableSnapToGround(this.__wbg_ptr);\n  }\n  snapToGroundEnabled() {\n    return 0 !== A.rawkinematiccharactercontroller_snapToGroundEnabled(this.__wbg_ptr);\n  }\n  computeColliderMovement(g, C, B, Q, i, D, o, G, w, S, k) {\n    try {\n      a(C, AA), a(B, p), a(Q, z), a(D, DA), A.rawkinematiccharactercontroller_computeColliderMovement(this.__wbg_ptr, g, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr, i, D.__wbg_ptr, o, !E(G), E(G) ? 0 : G, w, !E(S), E(S) ? 0 : S, J(k));\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n  computedMovement() {\n    const I = A.rawkinematiccharactercontroller_computedMovement(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  computedGrounded() {\n    return 0 !== A.rawkinematiccharactercontroller_computedGrounded(this.__wbg_ptr);\n  }\n  numComputedCollisions() {\n    return A.rawkinematiccharactercontroller_numComputedCollisions(this.__wbg_ptr) >>> 0;\n  }\n  computedCollision(I, g) {\n    a(g, t);\n    return 0 !== A.rawkinematiccharactercontroller_computedCollision(this.__wbg_ptr, I, g.__wbg_ptr);\n  }\n}\nclass f {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(f.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawmultibodyjointset_free(I);\n  }\n  jointType(I) {\n    return A.rawmultibodyjointset_jointType(this.__wbg_ptr, I);\n  }\n  jointFrameX1(I) {\n    const g = A.rawmultibodyjointset_jointFrameX1(this.__wbg_ptr, I);\n    return IA.__wrap(g);\n  }\n  jointFrameX2(I) {\n    const g = A.rawmultibodyjointset_jointFrameX2(this.__wbg_ptr, I);\n    return IA.__wrap(g);\n  }\n  jointAnchor1(I) {\n    const g = A.rawmultibodyjointset_jointAnchor1(this.__wbg_ptr, I);\n    return DA.__wrap(g);\n  }\n  jointAnchor2(I) {\n    const g = A.rawmultibodyjointset_jointAnchor2(this.__wbg_ptr, I);\n    return DA.__wrap(g);\n  }\n  jointContactsEnabled(I) {\n    return 0 !== A.rawmultibodyjointset_jointContactsEnabled(this.__wbg_ptr, I);\n  }\n  jointSetContactsEnabled(I, g) {\n    A.rawmultibodyjointset_jointSetContactsEnabled(this.__wbg_ptr, I, g);\n  }\n  jointLimitsEnabled(I, g) {\n    return 0 !== A.rawmultibodyjointset_jointLimitsEnabled(this.__wbg_ptr, I, g);\n  }\n  jointLimitsMin(I, g) {\n    return A.rawmultibodyjointset_jointLimitsMin(this.__wbg_ptr, I, g);\n  }\n  jointLimitsMax(I, g) {\n    return A.rawmultibodyjointset_jointLimitsMax(this.__wbg_ptr, I, g);\n  }\n  constructor() {\n    const I = A.rawmultibodyjointset_new();\n    return this.__wbg_ptr = I >>> 0, this;\n  }\n  createJoint(I, g, C, B) {\n    a(I, b);\n    return A.rawmultibodyjointset_createJoint(this.__wbg_ptr, I.__wbg_ptr, g, C, B);\n  }\n  remove(I, g) {\n    A.rawmultibodyjointset_remove(this.__wbg_ptr, I, g);\n  }\n  contains(I) {\n    return 0 !== A.rawmultibodyjointset_contains(this.__wbg_ptr, I);\n  }\n  forEachJointHandle(g) {\n    try {\n      A.rawmultibodyjointset_forEachJointHandle(this.__wbg_ptr, J(g));\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n  forEachJointAttachedToRigidBody(g, C) {\n    try {\n      A.rawmultibodyjointset_forEachJointAttachedToRigidBody(this.__wbg_ptr, g, J(C));\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n}\nclass X {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(X.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawnarrowphase_free(I);\n  }\n  constructor() {\n    const I = A.rawnarrowphase_new();\n    return this.__wbg_ptr = I >>> 0, this;\n  }\n  contact_pairs_with(I, g) {\n    A.rawnarrowphase_contact_pairs_with(this.__wbg_ptr, I, C(g));\n  }\n  contact_pair(I, g) {\n    const C = A.rawnarrowphase_contact_pair(this.__wbg_ptr, I, g);\n    return 0 === C ? void 0 : d.__wrap(C);\n  }\n  intersection_pairs_with(I, g) {\n    A.rawnarrowphase_intersection_pairs_with(this.__wbg_ptr, I, C(g));\n  }\n  intersection_pair(I, g) {\n    return 0 !== A.rawnarrowphase_intersection_pair(this.__wbg_ptr, I, g);\n  }\n}\nclass V {\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawphysicspipeline_free(I);\n  }\n  constructor() {\n    const I = A.rawphysicspipeline_new();\n    return this.__wbg_ptr = I >>> 0, this;\n  }\n  step(I, g, C, B, Q, E, i, D, o, G) {\n    a(I, DA), a(g, x), a(C, m), a(B, l), a(Q, X), a(E, AA), a(i, p), a(D, W), a(o, f), a(G, L), A.rawphysicspipeline_step(this.__wbg_ptr, I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr, E.__wbg_ptr, i.__wbg_ptr, D.__wbg_ptr, o.__wbg_ptr, G.__wbg_ptr);\n  }\n  stepWithEvents(I, g, B, Q, E, i, D, o, G, w, S, k, h, K) {\n    a(I, DA), a(g, x), a(B, m), a(Q, l), a(E, X), a(i, AA), a(D, p), a(o, W), a(G, f), a(w, L), a(S, Z), A.rawphysicspipeline_stepWithEvents(this.__wbg_ptr, I.__wbg_ptr, g.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr, E.__wbg_ptr, i.__wbg_ptr, D.__wbg_ptr, o.__wbg_ptr, G.__wbg_ptr, w.__wbg_ptr, S.__wbg_ptr, C(k), C(h), C(K));\n  }\n}\nclass P {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(P.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawpointcolliderprojection_free(I);\n  }\n  colliderHandle() {\n    return A.rawpointcolliderprojection_colliderHandle(this.__wbg_ptr);\n  }\n  point() {\n    const I = A.rawpointcolliderprojection_point(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  isInside() {\n    return 0 !== A.rawpointcolliderprojection_isInside(this.__wbg_ptr);\n  }\n  featureType() {\n    return A.rawpointcolliderprojection_featureType(this.__wbg_ptr);\n  }\n  featureId() {\n    try {\n      const C = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawpointcolliderprojection_featureId(C, this.__wbg_ptr);\n      var I = G()[C / 4 + 0],\n        g = G()[C / 4 + 1];\n      return 0 === I ? void 0 : g >>> 0;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nclass u {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(u.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawpointprojection_free(I);\n  }\n  point() {\n    const I = A.rawpointprojection_point(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  isInside() {\n    return 0 !== A.rawpointprojection_isInside(this.__wbg_ptr);\n  }\n}\nclass z {\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawquerypipeline_free(I);\n  }\n  constructor() {\n    const I = A.rawquerypipeline_new();\n    return this.__wbg_ptr = I >>> 0, this;\n  }\n  update(I, g) {\n    a(I, AA), a(g, p), A.rawquerypipeline_update(this.__wbg_ptr, I.__wbg_ptr, g.__wbg_ptr);\n  }\n  castRay(g, C, B, Q, i, D, o, G, w, S, k) {\n    try {\n      a(g, AA), a(C, p), a(B, DA), a(Q, DA);\n      const h = A.rawquerypipeline_castRay(this.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr, i, D, o, !E(G), E(G) ? 0 : G, !E(w), E(w) ? 0 : w, !E(S), E(S) ? 0 : S, J(k));\n      return 0 === h ? void 0 : _.__wrap(h);\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n  castRayAndGetNormal(g, C, B, Q, i, D, o, G, w, S, k) {\n    try {\n      a(g, AA), a(C, p), a(B, DA), a(Q, DA);\n      const h = A.rawquerypipeline_castRayAndGetNormal(this.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr, i, D, o, !E(G), E(G) ? 0 : G, !E(w), E(w) ? 0 : w, !E(S), E(S) ? 0 : S, J(k));\n      return 0 === h ? void 0 : v.__wrap(h);\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n  intersectionsWithRay(g, C, B, Q, i, D, o, G, w, S, k, h) {\n    try {\n      a(g, AA), a(C, p), a(B, DA), a(Q, DA), A.rawquerypipeline_intersectionsWithRay(this.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr, i, D, J(o), G, !E(w), E(w) ? 0 : w, !E(S), E(S) ? 0 : S, !E(k), E(k) ? 0 : k, J(h));\n    } finally {\n      I[U++] = void 0, I[U++] = void 0;\n    }\n  }\n  intersectionWithShape(g, C, B, Q, i, o, w, S, k, h) {\n    try {\n      const y = A.__wbindgen_add_to_stack_pointer(-16);\n      a(g, AA), a(C, p), a(B, DA), a(Q, IA), a(i, BA), A.rawquerypipeline_intersectionWithShape(y, this.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr, i.__wbg_ptr, o, !E(w), E(w) ? 0 : w, !E(S), E(S) ? 0 : S, !E(k), E(k) ? 0 : k, J(h));\n      var K = G()[y / 4 + 0],\n        N = D()[y / 8 + 1];\n      return 0 === K ? void 0 : N;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16), I[U++] = void 0;\n    }\n  }\n  projectPoint(g, C, B, Q, i, D, o, G, w) {\n    try {\n      a(g, AA), a(C, p), a(B, DA);\n      const S = A.rawquerypipeline_projectPoint(this.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q, i, !E(D), E(D) ? 0 : D, !E(o), E(o) ? 0 : o, !E(G), E(G) ? 0 : G, J(w));\n      return 0 === S ? void 0 : P.__wrap(S);\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n  projectPointAndGetFeature(g, C, B, Q, i, D, o, G) {\n    try {\n      a(g, AA), a(C, p), a(B, DA);\n      const w = A.rawquerypipeline_projectPointAndGetFeature(this.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q, !E(i), E(i) ? 0 : i, !E(D), E(D) ? 0 : D, !E(o), E(o) ? 0 : o, J(G));\n      return 0 === w ? void 0 : P.__wrap(w);\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n  intersectionsWithPoint(g, C, B, Q, i, D, o, G, w) {\n    try {\n      a(g, AA), a(C, p), a(B, DA), A.rawquerypipeline_intersectionsWithPoint(this.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, J(Q), i, !E(D), E(D) ? 0 : D, !E(o), E(o) ? 0 : o, !E(G), E(G) ? 0 : G, J(w));\n    } finally {\n      I[U++] = void 0, I[U++] = void 0;\n    }\n  }\n  castShape(g, C, B, Q, i, D, o, G, w, S, k, h, K) {\n    try {\n      a(g, AA), a(C, p), a(B, DA), a(Q, IA), a(i, DA), a(D, BA);\n      const N = A.rawquerypipeline_castShape(this.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr, i.__wbg_ptr, D.__wbg_ptr, o, G, w, !E(S), E(S) ? 0 : S, !E(k), E(k) ? 0 : k, !E(h), E(h) ? 0 : h, J(K));\n      return 0 === N ? void 0 : QA.__wrap(N);\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n  intersectionsWithShape(g, C, B, Q, i, D, o, G, w, S, k) {\n    try {\n      a(g, AA), a(C, p), a(B, DA), a(Q, IA), a(i, BA), A.rawquerypipeline_intersectionsWithShape(this.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr, i.__wbg_ptr, J(D), o, !E(G), E(G) ? 0 : G, !E(w), E(w) ? 0 : w, !E(S), E(S) ? 0 : S, J(k));\n    } finally {\n      I[U++] = void 0, I[U++] = void 0;\n    }\n  }\n  collidersWithAabbIntersectingAabb(g, C, B) {\n    try {\n      a(g, DA), a(C, DA), A.rawquerypipeline_collidersWithAabbIntersectingAabb(this.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, J(B));\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n}\nclass v {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(v.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawraycolliderintersection_free(I);\n  }\n  colliderHandle() {\n    return A.rawpointcolliderprojection_colliderHandle(this.__wbg_ptr);\n  }\n  normal() {\n    const I = A.rawraycolliderintersection_normal(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  toi() {\n    return A.rawraycolliderintersection_toi(this.__wbg_ptr);\n  }\n  featureType() {\n    return A.rawpointcolliderprojection_featureType(this.__wbg_ptr);\n  }\n  featureId() {\n    try {\n      const C = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawpointcolliderprojection_featureId(C, this.__wbg_ptr);\n      var I = G()[C / 4 + 0],\n        g = G()[C / 4 + 1];\n      return 0 === I ? void 0 : g >>> 0;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nclass _ {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(_.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawraycollidertoi_free(I);\n  }\n  colliderHandle() {\n    return A.rawcharactercollision_handle(this.__wbg_ptr);\n  }\n  toi() {\n    return A.rawraycolliderintersection_toi(this.__wbg_ptr);\n  }\n}\nclass $ {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create($.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawrayintersection_free(I);\n  }\n  normal() {\n    const I = A.rawraycolliderintersection_normal(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  toi() {\n    return A.rawraycolliderintersection_toi(this.__wbg_ptr);\n  }\n  featureType() {\n    return A.rawpointcolliderprojection_featureType(this.__wbg_ptr);\n  }\n  featureId() {\n    try {\n      const C = A.__wbindgen_add_to_stack_pointer(-16);\n      A.rawpointcolliderprojection_featureId(C, this.__wbg_ptr);\n      var I = G()[C / 4 + 0],\n        g = G()[C / 4 + 1];\n      return 0 === I ? void 0 : g >>> 0;\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nclass AA {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(AA.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawrigidbodyset_free(I);\n  }\n  rbTranslation(I) {\n    const g = A.rawrigidbodyset_rbTranslation(this.__wbg_ptr, I);\n    return DA.__wrap(g);\n  }\n  rbRotation(I) {\n    const g = A.rawrigidbodyset_rbRotation(this.__wbg_ptr, I);\n    return IA.__wrap(g);\n  }\n  rbSleep(I) {\n    A.rawrigidbodyset_rbSleep(this.__wbg_ptr, I);\n  }\n  rbIsSleeping(I) {\n    return 0 !== A.rawrigidbodyset_rbIsSleeping(this.__wbg_ptr, I);\n  }\n  rbIsMoving(I) {\n    return 0 !== A.rawrigidbodyset_rbIsMoving(this.__wbg_ptr, I);\n  }\n  rbNextTranslation(I) {\n    const g = A.rawrigidbodyset_rbNextTranslation(this.__wbg_ptr, I);\n    return DA.__wrap(g);\n  }\n  rbNextRotation(I) {\n    const g = A.rawrigidbodyset_rbNextRotation(this.__wbg_ptr, I);\n    return IA.__wrap(g);\n  }\n  rbSetTranslation(I, g, C, B, Q) {\n    A.rawrigidbodyset_rbSetTranslation(this.__wbg_ptr, I, g, C, B, Q);\n  }\n  rbSetRotation(I, g, C, B, Q, E) {\n    A.rawrigidbodyset_rbSetRotation(this.__wbg_ptr, I, g, C, B, Q, E);\n  }\n  rbSetLinvel(I, g, C) {\n    a(g, DA), A.rawrigidbodyset_rbSetLinvel(this.__wbg_ptr, I, g.__wbg_ptr, C);\n  }\n  rbSetAngvel(I, g, C) {\n    a(g, DA), A.rawrigidbodyset_rbSetAngvel(this.__wbg_ptr, I, g.__wbg_ptr, C);\n  }\n  rbSetNextKinematicTranslation(I, g, C, B) {\n    A.rawrigidbodyset_rbSetNextKinematicTranslation(this.__wbg_ptr, I, g, C, B);\n  }\n  rbSetNextKinematicRotation(I, g, C, B, Q) {\n    A.rawrigidbodyset_rbSetNextKinematicRotation(this.__wbg_ptr, I, g, C, B, Q);\n  }\n  rbRecomputeMassPropertiesFromColliders(I, g) {\n    a(g, p), A.rawrigidbodyset_rbRecomputeMassPropertiesFromColliders(this.__wbg_ptr, I, g.__wbg_ptr);\n  }\n  rbSetAdditionalMass(I, g, C) {\n    A.rawrigidbodyset_rbSetAdditionalMass(this.__wbg_ptr, I, g, C);\n  }\n  rbSetAdditionalMassProperties(I, g, C, B, Q, E) {\n    a(C, DA), a(B, DA), a(Q, IA), A.rawrigidbodyset_rbSetAdditionalMassProperties(this.__wbg_ptr, I, g, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr, E);\n  }\n  rbLinvel(I) {\n    const g = A.rawrigidbodyset_rbLinvel(this.__wbg_ptr, I);\n    return DA.__wrap(g);\n  }\n  rbAngvel(I) {\n    const g = A.rawrigidbodyset_rbAngvel(this.__wbg_ptr, I);\n    return DA.__wrap(g);\n  }\n  rbLockTranslations(I, g, C) {\n    A.rawrigidbodyset_rbLockTranslations(this.__wbg_ptr, I, g, C);\n  }\n  rbSetEnabledTranslations(I, g, C, B, Q) {\n    A.rawrigidbodyset_rbSetEnabledTranslations(this.__wbg_ptr, I, g, C, B, Q);\n  }\n  rbLockRotations(I, g, C) {\n    A.rawrigidbodyset_rbLockRotations(this.__wbg_ptr, I, g, C);\n  }\n  rbSetEnabledRotations(I, g, C, B, Q) {\n    A.rawrigidbodyset_rbSetEnabledRotations(this.__wbg_ptr, I, g, C, B, Q);\n  }\n  rbDominanceGroup(I) {\n    return A.rawrigidbodyset_rbDominanceGroup(this.__wbg_ptr, I);\n  }\n  rbSetDominanceGroup(I, g) {\n    A.rawrigidbodyset_rbSetDominanceGroup(this.__wbg_ptr, I, g);\n  }\n  rbEnableCcd(I, g) {\n    A.rawrigidbodyset_rbEnableCcd(this.__wbg_ptr, I, g);\n  }\n  rbMass(I) {\n    return A.rawrigidbodyset_rbMass(this.__wbg_ptr, I);\n  }\n  rbInvMass(I) {\n    return A.rawrigidbodyset_rbInvMass(this.__wbg_ptr, I);\n  }\n  rbEffectiveInvMass(I) {\n    const g = A.rawrigidbodyset_rbEffectiveInvMass(this.__wbg_ptr, I);\n    return DA.__wrap(g);\n  }\n  rbLocalCom(I) {\n    const g = A.rawrigidbodyset_rbLocalCom(this.__wbg_ptr, I);\n    return DA.__wrap(g);\n  }\n  rbWorldCom(I) {\n    const g = A.rawrigidbodyset_rbWorldCom(this.__wbg_ptr, I);\n    return DA.__wrap(g);\n  }\n  rbInvPrincipalInertiaSqrt(I) {\n    const g = A.rawrigidbodyset_rbInvPrincipalInertiaSqrt(this.__wbg_ptr, I);\n    return DA.__wrap(g);\n  }\n  rbPrincipalInertiaLocalFrame(I) {\n    const g = A.rawrigidbodyset_rbPrincipalInertiaLocalFrame(this.__wbg_ptr, I);\n    return IA.__wrap(g);\n  }\n  rbPrincipalInertia(I) {\n    const g = A.rawrigidbodyset_rbPrincipalInertia(this.__wbg_ptr, I);\n    return DA.__wrap(g);\n  }\n  rbEffectiveWorldInvInertiaSqrt(I) {\n    const g = A.rawrigidbodyset_rbEffectiveWorldInvInertiaSqrt(this.__wbg_ptr, I);\n    return gA.__wrap(g);\n  }\n  rbEffectiveAngularInertia(I) {\n    const g = A.rawrigidbodyset_rbEffectiveAngularInertia(this.__wbg_ptr, I);\n    return gA.__wrap(g);\n  }\n  rbWakeUp(I) {\n    A.rawrigidbodyset_rbWakeUp(this.__wbg_ptr, I);\n  }\n  rbIsCcdEnabled(I) {\n    return 0 !== A.rawrigidbodyset_rbIsCcdEnabled(this.__wbg_ptr, I);\n  }\n  rbNumColliders(I) {\n    return A.rawrigidbodyset_rbNumColliders(this.__wbg_ptr, I) >>> 0;\n  }\n  rbCollider(I, g) {\n    return A.rawrigidbodyset_rbCollider(this.__wbg_ptr, I, g);\n  }\n  rbBodyType(I) {\n    return A.rawrigidbodyset_rbBodyType(this.__wbg_ptr, I);\n  }\n  rbSetBodyType(I, g, C) {\n    A.rawrigidbodyset_rbSetBodyType(this.__wbg_ptr, I, g, C);\n  }\n  rbIsFixed(I) {\n    return 0 !== A.rawrigidbodyset_rbIsFixed(this.__wbg_ptr, I);\n  }\n  rbIsKinematic(I) {\n    return 0 !== A.rawrigidbodyset_rbIsKinematic(this.__wbg_ptr, I);\n  }\n  rbIsDynamic(I) {\n    return 0 !== A.rawrigidbodyset_rbIsDynamic(this.__wbg_ptr, I);\n  }\n  rbLinearDamping(I) {\n    return A.rawrigidbodyset_rbLinearDamping(this.__wbg_ptr, I);\n  }\n  rbAngularDamping(I) {\n    return A.rawrigidbodyset_rbAngularDamping(this.__wbg_ptr, I);\n  }\n  rbSetLinearDamping(I, g) {\n    A.rawrigidbodyset_rbSetLinearDamping(this.__wbg_ptr, I, g);\n  }\n  rbSetAngularDamping(I, g) {\n    A.rawrigidbodyset_rbSetAngularDamping(this.__wbg_ptr, I, g);\n  }\n  rbSetEnabled(I, g) {\n    A.rawrigidbodyset_rbSetEnabled(this.__wbg_ptr, I, g);\n  }\n  rbIsEnabled(I) {\n    return 0 !== A.rawrigidbodyset_rbIsEnabled(this.__wbg_ptr, I);\n  }\n  rbGravityScale(I) {\n    return A.rawrigidbodyset_rbGravityScale(this.__wbg_ptr, I);\n  }\n  rbSetGravityScale(I, g, C) {\n    A.rawrigidbodyset_rbSetGravityScale(this.__wbg_ptr, I, g, C);\n  }\n  rbResetForces(I, g) {\n    A.rawrigidbodyset_rbResetForces(this.__wbg_ptr, I, g);\n  }\n  rbResetTorques(I, g) {\n    A.rawrigidbodyset_rbResetTorques(this.__wbg_ptr, I, g);\n  }\n  rbAddForce(I, g, C) {\n    a(g, DA), A.rawrigidbodyset_rbAddForce(this.__wbg_ptr, I, g.__wbg_ptr, C);\n  }\n  rbApplyImpulse(I, g, C) {\n    a(g, DA), A.rawrigidbodyset_rbApplyImpulse(this.__wbg_ptr, I, g.__wbg_ptr, C);\n  }\n  rbAddTorque(I, g, C) {\n    a(g, DA), A.rawrigidbodyset_rbAddTorque(this.__wbg_ptr, I, g.__wbg_ptr, C);\n  }\n  rbApplyTorqueImpulse(I, g, C) {\n    a(g, DA), A.rawrigidbodyset_rbApplyTorqueImpulse(this.__wbg_ptr, I, g.__wbg_ptr, C);\n  }\n  rbAddForceAtPoint(I, g, C, B) {\n    a(g, DA), a(C, DA), A.rawrigidbodyset_rbAddForceAtPoint(this.__wbg_ptr, I, g.__wbg_ptr, C.__wbg_ptr, B);\n  }\n  rbApplyImpulseAtPoint(I, g, C, B) {\n    a(g, DA), a(C, DA), A.rawrigidbodyset_rbApplyImpulseAtPoint(this.__wbg_ptr, I, g.__wbg_ptr, C.__wbg_ptr, B);\n  }\n  rbAdditionalSolverIterations(I) {\n    return A.rawrigidbodyset_rbAdditionalSolverIterations(this.__wbg_ptr, I) >>> 0;\n  }\n  rbSetAdditionalSolverIterations(I, g) {\n    A.rawrigidbodyset_rbSetAdditionalSolverIterations(this.__wbg_ptr, I, g);\n  }\n  rbUserData(I) {\n    return A.rawrigidbodyset_rbUserData(this.__wbg_ptr, I) >>> 0;\n  }\n  rbSetUserData(I, g) {\n    A.rawrigidbodyset_rbSetUserData(this.__wbg_ptr, I, g);\n  }\n  constructor() {\n    const I = A.rawrigidbodyset_new();\n    return this.__wbg_ptr = I >>> 0, this;\n  }\n  createRigidBody(I, g, C, B, Q, E, i, D, o, G, w, S, k, h, K, U, J, N, y, M, F, q, R, s, c) {\n    a(g, DA), a(C, IA), a(i, DA), a(D, DA), a(o, DA), a(G, DA), a(w, IA);\n    return A.rawrigidbodyset_createRigidBody(this.__wbg_ptr, I, g.__wbg_ptr, C.__wbg_ptr, B, Q, E, i.__wbg_ptr, D.__wbg_ptr, o.__wbg_ptr, G.__wbg_ptr, w.__wbg_ptr, S, k, h, K, U, J, N, y, M, F, q, R, s, c);\n  }\n  remove(I, g, C, B, Q) {\n    a(g, m), a(C, p), a(B, W), a(Q, f), A.rawrigidbodyset_remove(this.__wbg_ptr, I, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr);\n  }\n  len() {\n    return A.rawcolliderset_len(this.__wbg_ptr) >>> 0;\n  }\n  contains(I) {\n    return 0 !== A.rawrigidbodyset_contains(this.__wbg_ptr, I);\n  }\n  forEachRigidBodyHandle(g) {\n    try {\n      A.rawrigidbodyset_forEachRigidBodyHandle(this.__wbg_ptr, J(g));\n    } finally {\n      I[U++] = void 0;\n    }\n  }\n  propagateModifiedBodyPositionsToColliders(I) {\n    a(I, p), A.rawrigidbodyset_propagateModifiedBodyPositionsToColliders(this.__wbg_ptr, I.__wbg_ptr);\n  }\n}\nclass IA {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(IA.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawrotation_free(I);\n  }\n  constructor(I, g, C, B) {\n    const Q = A.rawrotation_new(I, g, C, B);\n    return this.__wbg_ptr = Q >>> 0, this;\n  }\n  static identity() {\n    const I = A.rawrotation_identity();\n    return IA.__wrap(I);\n  }\n  get x() {\n    return A.rawrotation_x(this.__wbg_ptr);\n  }\n  get y() {\n    return A.rawintegrationparameters_dt(this.__wbg_ptr);\n  }\n  get z() {\n    return A.rawraycolliderintersection_toi(this.__wbg_ptr);\n  }\n  get w() {\n    return A.rawintegrationparameters_erp(this.__wbg_ptr);\n  }\n}\nclass gA {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(gA.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawsdpmatrix3_free(I);\n  }\n  elements() {\n    return Q(A.rawsdpmatrix3_elements(this.__wbg_ptr));\n  }\n}\nclass CA {\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawserializationpipeline_free(I);\n  }\n  constructor() {\n    const I = A.rawserializationpipeline_new();\n    return this.__wbg_ptr = I >>> 0, this;\n  }\n  serializeAll(I, g, C, B, E, i, D, o, G) {\n    a(I, DA), a(g, x), a(C, m), a(B, l), a(E, X), a(i, AA), a(D, p), a(o, W), a(G, f);\n    return Q(A.rawserializationpipeline_serializeAll(this.__wbg_ptr, I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, E.__wbg_ptr, i.__wbg_ptr, D.__wbg_ptr, o.__wbg_ptr, G.__wbg_ptr));\n  }\n  deserializeAll(I) {\n    const g = A.rawserializationpipeline_deserializeAll(this.__wbg_ptr, C(I));\n    return 0 === g ? void 0 : n.__wrap(g);\n  }\n}\nclass BA {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(BA.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawshape_free(I);\n  }\n  static cuboid(I, g, C) {\n    const B = A.rawshape_cuboid(I, g, C);\n    return BA.__wrap(B);\n  }\n  static roundCuboid(I, g, C, B) {\n    const Q = A.rawshape_roundCuboid(I, g, C, B);\n    return BA.__wrap(Q);\n  }\n  static ball(I) {\n    const g = A.rawshape_ball(I);\n    return BA.__wrap(g);\n  }\n  static halfspace(I) {\n    a(I, DA);\n    const g = A.rawshape_halfspace(I.__wbg_ptr);\n    return BA.__wrap(g);\n  }\n  static capsule(I, g) {\n    const C = A.rawshape_capsule(I, g);\n    return BA.__wrap(C);\n  }\n  static cylinder(I, g) {\n    const C = A.rawshape_cylinder(I, g);\n    return BA.__wrap(C);\n  }\n  static roundCylinder(I, g, C) {\n    const B = A.rawshape_roundCylinder(I, g, C);\n    return BA.__wrap(B);\n  }\n  static cone(I, g) {\n    const C = A.rawshape_cone(I, g);\n    return BA.__wrap(C);\n  }\n  static roundCone(I, g, C) {\n    const B = A.rawshape_roundCone(I, g, C);\n    return BA.__wrap(B);\n  }\n  static polyline(I, g) {\n    const C = q(I, A.__wbindgen_malloc),\n      B = F,\n      Q = R(g, A.__wbindgen_malloc),\n      E = F,\n      i = A.rawshape_polyline(C, B, Q, E);\n    return BA.__wrap(i);\n  }\n  static trimesh(I, g) {\n    const C = q(I, A.__wbindgen_malloc),\n      B = F,\n      Q = R(g, A.__wbindgen_malloc),\n      E = F,\n      i = A.rawshape_trimesh(C, B, Q, E);\n    return BA.__wrap(i);\n  }\n  static heightfield(I, g, C, B) {\n    const Q = q(C, A.__wbindgen_malloc),\n      E = F;\n    a(B, DA);\n    const i = A.rawshape_heightfield(I, g, Q, E, B.__wbg_ptr);\n    return BA.__wrap(i);\n  }\n  static segment(I, g) {\n    a(I, DA), a(g, DA);\n    const C = A.rawshape_segment(I.__wbg_ptr, g.__wbg_ptr);\n    return BA.__wrap(C);\n  }\n  static triangle(I, g, C) {\n    a(I, DA), a(g, DA), a(C, DA);\n    const B = A.rawshape_triangle(I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr);\n    return BA.__wrap(B);\n  }\n  static roundTriangle(I, g, C, B) {\n    a(I, DA), a(g, DA), a(C, DA);\n    const Q = A.rawshape_roundTriangle(I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B);\n    return BA.__wrap(Q);\n  }\n  static convexHull(I) {\n    const g = q(I, A.__wbindgen_malloc),\n      C = F,\n      B = A.rawshape_convexHull(g, C);\n    return 0 === B ? void 0 : BA.__wrap(B);\n  }\n  static roundConvexHull(I, g) {\n    const C = q(I, A.__wbindgen_malloc),\n      B = F,\n      Q = A.rawshape_roundConvexHull(C, B, g);\n    return 0 === Q ? void 0 : BA.__wrap(Q);\n  }\n  static convexMesh(I, g) {\n    const C = q(I, A.__wbindgen_malloc),\n      B = F,\n      Q = R(g, A.__wbindgen_malloc),\n      E = F,\n      i = A.rawshape_convexMesh(C, B, Q, E);\n    return 0 === i ? void 0 : BA.__wrap(i);\n  }\n  static roundConvexMesh(I, g, C) {\n    const B = q(I, A.__wbindgen_malloc),\n      Q = F,\n      E = R(g, A.__wbindgen_malloc),\n      i = F,\n      D = A.rawshape_roundConvexMesh(B, Q, E, i, C);\n    return 0 === D ? void 0 : BA.__wrap(D);\n  }\n  castShape(I, g, C, B, Q, E, i, D, o) {\n    a(I, DA), a(g, IA), a(C, DA), a(B, BA), a(Q, DA), a(E, IA), a(i, DA);\n    const G = A.rawshape_castShape(this.__wbg_ptr, I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr, E.__wbg_ptr, i.__wbg_ptr, D, o);\n    return 0 === G ? void 0 : iA.__wrap(G);\n  }\n  intersectsShape(I, g, C, B, Q) {\n    a(I, DA), a(g, IA), a(C, BA), a(B, DA), a(Q, IA);\n    return 0 !== A.rawshape_intersectsShape(this.__wbg_ptr, I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr);\n  }\n  contactShape(I, g, C, B, Q, E) {\n    a(I, DA), a(g, IA), a(C, BA), a(B, DA), a(Q, IA);\n    const i = A.rawshape_contactShape(this.__wbg_ptr, I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q.__wbg_ptr, E);\n    return 0 === i ? void 0 : EA.__wrap(i);\n  }\n  containsPoint(I, g, C) {\n    a(I, DA), a(g, IA), a(C, DA);\n    return 0 !== A.rawshape_containsPoint(this.__wbg_ptr, I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr);\n  }\n  projectPoint(I, g, C, B) {\n    a(I, DA), a(g, IA), a(C, DA);\n    const Q = A.rawshape_projectPoint(this.__wbg_ptr, I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B);\n    return u.__wrap(Q);\n  }\n  intersectsRay(I, g, C, B, Q) {\n    a(I, DA), a(g, IA), a(C, DA), a(B, DA);\n    return 0 !== A.rawshape_intersectsRay(this.__wbg_ptr, I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q);\n  }\n  castRay(I, g, C, B, Q, E) {\n    a(I, DA), a(g, IA), a(C, DA), a(B, DA);\n    return A.rawshape_castRay(this.__wbg_ptr, I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q, E);\n  }\n  castRayAndGetNormal(I, g, C, B, Q, E) {\n    a(I, DA), a(g, IA), a(C, DA), a(B, DA);\n    const i = A.rawshape_castRayAndGetNormal(this.__wbg_ptr, I.__wbg_ptr, g.__wbg_ptr, C.__wbg_ptr, B.__wbg_ptr, Q, E);\n    return 0 === i ? void 0 : $.__wrap(i);\n  }\n}\nclass QA {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(QA.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawshapecollidertoi_free(I);\n  }\n  colliderHandle() {\n    return A.rawcharactercollision_handle(this.__wbg_ptr);\n  }\n  toi() {\n    return A.rawraycolliderintersection_toi(this.__wbg_ptr);\n  }\n  witness1() {\n    const I = A.rawraycolliderintersection_normal(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  witness2() {\n    const I = A.rawshapecollidertoi_witness2(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  normal1() {\n    const I = A.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  normal2() {\n    const I = A.rawcharactercollision_translationDeltaRemaining(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n}\nclass EA {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(EA.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawshapecontact_free(I);\n  }\n  distance() {\n    return A.rawkinematiccharactercontroller_maxSlopeClimbAngle(this.__wbg_ptr);\n  }\n  point1() {\n    const I = A.rawpointprojection_point(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  point2() {\n    const I = A.rawraycolliderintersection_normal(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  normal1() {\n    const I = A.rawshapecollidertoi_witness2(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  normal2() {\n    const I = A.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n}\nclass iA {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(iA.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawshapetoi_free(I);\n  }\n  toi() {\n    return A.rawrotation_x(this.__wbg_ptr);\n  }\n  witness1() {\n    const I = A.rawshapetoi_witness1(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  witness2() {\n    const I = A.rawcontactforceevent_total_force(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  normal1() {\n    const I = A.rawshapetoi_normal1(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  normal2() {\n    const I = A.rawshapetoi_normal2(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n}\nclass DA {\n  static __wrap(A) {\n    A >>>= 0;\n    const I = Object.create(DA.prototype);\n    return I.__wbg_ptr = A, I;\n  }\n  __destroy_into_raw() {\n    const A = this.__wbg_ptr;\n    return this.__wbg_ptr = 0, A;\n  }\n  free() {\n    const I = this.__destroy_into_raw();\n    A.__wbg_rawvector_free(I);\n  }\n  static zero() {\n    const I = A.rawvector_zero();\n    return DA.__wrap(I);\n  }\n  constructor(I, g, C) {\n    const B = A.rawvector_new(I, g, C);\n    return this.__wbg_ptr = B >>> 0, this;\n  }\n  get x() {\n    return A.rawrotation_x(this.__wbg_ptr);\n  }\n  set x(I) {\n    A.rawvector_set_x(this.__wbg_ptr, I);\n  }\n  get y() {\n    return A.rawintegrationparameters_dt(this.__wbg_ptr);\n  }\n  set y(I) {\n    A.rawintegrationparameters_set_dt(this.__wbg_ptr, I);\n  }\n  get z() {\n    return A.rawraycolliderintersection_toi(this.__wbg_ptr);\n  }\n  set z(I) {\n    A.rawvector_set_z(this.__wbg_ptr, I);\n  }\n  xyz() {\n    const I = A.rawvector_xyz(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  yxz() {\n    const I = A.rawvector_yxz(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  zxy() {\n    const I = A.rawvector_zxy(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  xzy() {\n    const I = A.rawvector_xzy(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  yzx() {\n    const I = A.rawvector_yzx(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n  zyx() {\n    const I = A.rawvector_zyx(this.__wbg_ptr);\n    return DA.__wrap(I);\n  }\n}\nasync function oA(I) {\n  if (void 0 !== A) return A;\n  void 0 === I && (I = new URL(\"rapier_wasm3d_bg.wasm\", \"<deleted>\"));\n  const g = function () {\n    const I = {\n      wbg: {}\n    };\n    return I.wbg.__wbindgen_number_new = function (A) {\n      return C(A);\n    }, I.wbg.__wbindgen_boolean_get = function (A) {\n      const I = B(A);\n      return \"boolean\" == typeof I ? I ? 1 : 0 : 2;\n    }, I.wbg.__wbindgen_object_drop_ref = function (A) {\n      Q(A);\n    }, I.wbg.__wbindgen_number_get = function (A, I) {\n      const g = B(I),\n        C = \"number\" == typeof g ? g : void 0;\n      D()[A / 8 + 1] = E(C) ? 0 : C, G()[A / 4 + 0] = !E(C);\n    }, I.wbg.__wbindgen_is_function = function (A) {\n      return \"function\" == typeof B(A);\n    }, I.wbg.__wbg_rawraycolliderintersection_new = function (A) {\n      return C(v.__wrap(A));\n    }, I.wbg.__wbg_rawcontactforceevent_new = function (A) {\n      return C(e.__wrap(A));\n    }, I.wbg.__wbg_call_01734de55d61e11d = function () {\n      return s(function (A, I, g) {\n        return C(B(A).call(B(I), B(g)));\n      }, arguments);\n    }, I.wbg.__wbg_call_4c92f6aec1e1d6e6 = function () {\n      return s(function (A, I, g, Q) {\n        return C(B(A).call(B(I), B(g), B(Q)));\n      }, arguments);\n    }, I.wbg.__wbg_call_776890ca77946e2f = function () {\n      return s(function (A, I, g, Q, E) {\n        return C(B(A).call(B(I), B(g), B(Q), B(E)));\n      }, arguments);\n    }, I.wbg.__wbg_bind_60a9a80cada2f33c = function (A, I, g, Q) {\n      return C(B(A).bind(B(I), B(g), B(Q)));\n    }, I.wbg.__wbg_buffer_085ec1f694018c4f = function (A) {\n      return C(B(A).buffer);\n    }, I.wbg.__wbg_newwithbyteoffsetandlength_6da8e527659b86aa = function (A, I, g) {\n      return C(new Uint8Array(B(A), I >>> 0, g >>> 0));\n    }, I.wbg.__wbg_new_8125e318e6245eed = function (A) {\n      return C(new Uint8Array(B(A)));\n    }, I.wbg.__wbg_set_5cf90238115182c3 = function (A, I, g) {\n      B(A).set(B(I), g >>> 0);\n    }, I.wbg.__wbg_length_72e2208bbc0efc61 = function (A) {\n      return B(A).length;\n    }, I.wbg.__wbg_newwithbyteoffsetandlength_69193e31c844b792 = function (A, I, g) {\n      return C(new Float32Array(B(A), I >>> 0, g >>> 0));\n    }, I.wbg.__wbg_set_6146c51d49a2c0df = function (A, I, g) {\n      B(A).set(B(I), g >>> 0);\n    }, I.wbg.__wbg_length_d7327c75a759af37 = function (A) {\n      return B(A).length;\n    }, I.wbg.__wbg_newwithlength_68d29ab115d0099c = function (A) {\n      return C(new Float32Array(A >>> 0));\n    }, I.wbg.__wbindgen_throw = function (A, I) {\n      throw new Error(k(A, I));\n    }, I.wbg.__wbindgen_memory = function () {\n      return C(A.memory);\n    }, I;\n  }();\n  (\"string\" == typeof I || \"function\" == typeof Request && I instanceof Request || \"function\" == typeof URL && I instanceof URL) && (I = fetch(I));\n  const {\n    instance: w,\n    module: a\n  } = await async function (A, I) {\n    if (\"function\" == typeof Response && A instanceof Response) {\n      if (\"function\" == typeof WebAssembly.instantiateStreaming) try {\n        return await WebAssembly.instantiateStreaming(A, I);\n      } catch (I) {\n        if (\"application/wasm\" == A.headers.get(\"Content-Type\")) throw I;\n        console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", I);\n      }\n      const g = await A.arrayBuffer();\n      return await WebAssembly.instantiate(g, I);\n    }\n    {\n      const g = await WebAssembly.instantiate(A, I);\n      return g instanceof WebAssembly.Instance ? {\n        instance: g,\n        module: A\n      } : g;\n    }\n  }(await I, g);\n  return function (I, g) {\n    return A = I.exports, oA.__wbindgen_wasm_module = g, h = null, i = null, o = null, y = null, S = null, A;\n  }(w, a);\n}\nclass GA {\n  constructor(A, I, g) {\n    this.x = A, this.y = I, this.z = g;\n  }\n}\nclass wA {\n  static new(A, I, g) {\n    return new GA(A, I, g);\n  }\n  static intoRaw(A) {\n    return new DA(A.x, A.y, A.z);\n  }\n  static zeros() {\n    return wA.new(0, 0, 0);\n  }\n  static fromRaw(A) {\n    if (!A) return null;\n    let I = wA.new(A.x, A.y, A.z);\n    return A.free(), I;\n  }\n  static copy(A, I) {\n    A.x = I.x, A.y = I.y, A.z = I.z;\n  }\n}\nclass SA {\n  constructor(A, I, g, C) {\n    this.x = A, this.y = I, this.z = g, this.w = C;\n  }\n}\nclass kA {\n  static identity() {\n    return new SA(0, 0, 0, 1);\n  }\n  static fromRaw(A) {\n    if (!A) return null;\n    let I = new SA(A.x, A.y, A.z, A.w);\n    return A.free(), I;\n  }\n  static intoRaw(A) {\n    return new IA(A.x, A.y, A.z, A.w);\n  }\n  static copy(A, I) {\n    A.x = I.x, A.y = I.y, A.z = I.z, A.w = I.w;\n  }\n}\nclass aA {\n  constructor(A) {\n    this.elements = A;\n  }\n  get m11() {\n    return this.elements[0];\n  }\n  get m12() {\n    return this.elements[1];\n  }\n  get m21() {\n    return this.m12;\n  }\n  get m13() {\n    return this.elements[2];\n  }\n  get m31() {\n    return this.m13;\n  }\n  get m22() {\n    return this.elements[3];\n  }\n  get m23() {\n    return this.elements[4];\n  }\n  get m32() {\n    return this.m23;\n  }\n  get m33() {\n    return this.elements[5];\n  }\n}\nclass hA {\n  static fromRaw(A) {\n    const I = new aA(A.elements());\n    return A.free(), I;\n  }\n}\nvar KA, UA, JA, NA, yA, MA, FA, qA, RA, sA, cA, YA, HA;\n!function (A) {\n  A[A.Dynamic = 0] = \"Dynamic\", A[A.Fixed = 1] = \"Fixed\", A[A.KinematicPositionBased = 2] = \"KinematicPositionBased\", A[A.KinematicVelocityBased = 3] = \"KinematicVelocityBased\";\n}(KA || (KA = {}));\nclass lA {\n  constructor(A, I, g) {\n    this.rawSet = A, this.colliderSet = I, this.handle = g;\n  }\n  finalizeDeserialization(A) {\n    this.colliderSet = A;\n  }\n  isValid() {\n    return this.rawSet.contains(this.handle);\n  }\n  lockTranslations(A, I) {\n    return this.rawSet.rbLockTranslations(this.handle, A, I);\n  }\n  lockRotations(A, I) {\n    return this.rawSet.rbLockRotations(this.handle, A, I);\n  }\n  setEnabledTranslations(A, I, g, C) {\n    return this.rawSet.rbSetEnabledTranslations(this.handle, A, I, g, C);\n  }\n  restrictTranslations(A, I, g, C) {\n    this.setEnabledTranslations(A, I, g, C);\n  }\n  setEnabledRotations(A, I, g, C) {\n    return this.rawSet.rbSetEnabledRotations(this.handle, A, I, g, C);\n  }\n  restrictRotations(A, I, g, C) {\n    this.setEnabledRotations(A, I, g, C);\n  }\n  dominanceGroup() {\n    return this.rawSet.rbDominanceGroup(this.handle);\n  }\n  setDominanceGroup(A) {\n    this.rawSet.rbSetDominanceGroup(this.handle, A);\n  }\n  additionalSolverIterations() {\n    return this.rawSet.rbAdditionalSolverIterations(this.handle);\n  }\n  setAdditionalSolverIterations(A) {\n    this.rawSet.rbSetAdditionalSolverIterations(this.handle, A);\n  }\n  enableCcd(A) {\n    this.rawSet.rbEnableCcd(this.handle, A);\n  }\n  translation() {\n    let A = this.rawSet.rbTranslation(this.handle);\n    return wA.fromRaw(A);\n  }\n  rotation() {\n    let A = this.rawSet.rbRotation(this.handle);\n    return kA.fromRaw(A);\n  }\n  nextTranslation() {\n    let A = this.rawSet.rbNextTranslation(this.handle);\n    return wA.fromRaw(A);\n  }\n  nextRotation() {\n    let A = this.rawSet.rbNextRotation(this.handle);\n    return kA.fromRaw(A);\n  }\n  setTranslation(A, I) {\n    this.rawSet.rbSetTranslation(this.handle, A.x, A.y, A.z, I);\n  }\n  setLinvel(A, I) {\n    let g = wA.intoRaw(A);\n    this.rawSet.rbSetLinvel(this.handle, g, I), g.free();\n  }\n  gravityScale() {\n    return this.rawSet.rbGravityScale(this.handle);\n  }\n  setGravityScale(A, I) {\n    this.rawSet.rbSetGravityScale(this.handle, A, I);\n  }\n  setRotation(A, I) {\n    this.rawSet.rbSetRotation(this.handle, A.x, A.y, A.z, A.w, I);\n  }\n  setAngvel(A, I) {\n    let g = wA.intoRaw(A);\n    this.rawSet.rbSetAngvel(this.handle, g, I), g.free();\n  }\n  setNextKinematicTranslation(A) {\n    this.rawSet.rbSetNextKinematicTranslation(this.handle, A.x, A.y, A.z);\n  }\n  setNextKinematicRotation(A) {\n    this.rawSet.rbSetNextKinematicRotation(this.handle, A.x, A.y, A.z, A.w);\n  }\n  linvel() {\n    return wA.fromRaw(this.rawSet.rbLinvel(this.handle));\n  }\n  angvel() {\n    return wA.fromRaw(this.rawSet.rbAngvel(this.handle));\n  }\n  mass() {\n    return this.rawSet.rbMass(this.handle);\n  }\n  effectiveInvMass() {\n    return wA.fromRaw(this.rawSet.rbEffectiveInvMass(this.handle));\n  }\n  invMass() {\n    return this.rawSet.rbInvMass(this.handle);\n  }\n  localCom() {\n    return wA.fromRaw(this.rawSet.rbLocalCom(this.handle));\n  }\n  worldCom() {\n    return wA.fromRaw(this.rawSet.rbWorldCom(this.handle));\n  }\n  invPrincipalInertiaSqrt() {\n    return wA.fromRaw(this.rawSet.rbInvPrincipalInertiaSqrt(this.handle));\n  }\n  principalInertia() {\n    return wA.fromRaw(this.rawSet.rbPrincipalInertia(this.handle));\n  }\n  principalInertiaLocalFrame() {\n    return kA.fromRaw(this.rawSet.rbPrincipalInertiaLocalFrame(this.handle));\n  }\n  effectiveWorldInvInertiaSqrt() {\n    return hA.fromRaw(this.rawSet.rbEffectiveWorldInvInertiaSqrt(this.handle));\n  }\n  effectiveAngularInertia() {\n    return hA.fromRaw(this.rawSet.rbEffectiveAngularInertia(this.handle));\n  }\n  sleep() {\n    this.rawSet.rbSleep(this.handle);\n  }\n  wakeUp() {\n    this.rawSet.rbWakeUp(this.handle);\n  }\n  isCcdEnabled() {\n    return this.rawSet.rbIsCcdEnabled(this.handle);\n  }\n  numColliders() {\n    return this.rawSet.rbNumColliders(this.handle);\n  }\n  collider(A) {\n    return this.colliderSet.get(this.rawSet.rbCollider(this.handle, A));\n  }\n  setEnabled(A) {\n    this.rawSet.rbSetEnabled(this.handle, A);\n  }\n  isEnabled() {\n    return this.rawSet.rbIsEnabled(this.handle);\n  }\n  bodyType() {\n    return this.rawSet.rbBodyType(this.handle);\n  }\n  setBodyType(A, I) {\n    return this.rawSet.rbSetBodyType(this.handle, A, I);\n  }\n  isSleeping() {\n    return this.rawSet.rbIsSleeping(this.handle);\n  }\n  isMoving() {\n    return this.rawSet.rbIsMoving(this.handle);\n  }\n  isFixed() {\n    return this.rawSet.rbIsFixed(this.handle);\n  }\n  isKinematic() {\n    return this.rawSet.rbIsKinematic(this.handle);\n  }\n  isDynamic() {\n    return this.rawSet.rbIsDynamic(this.handle);\n  }\n  linearDamping() {\n    return this.rawSet.rbLinearDamping(this.handle);\n  }\n  angularDamping() {\n    return this.rawSet.rbAngularDamping(this.handle);\n  }\n  setLinearDamping(A) {\n    this.rawSet.rbSetLinearDamping(this.handle, A);\n  }\n  recomputeMassPropertiesFromColliders() {\n    this.rawSet.rbRecomputeMassPropertiesFromColliders(this.handle, this.colliderSet.raw);\n  }\n  setAdditionalMass(A, I) {\n    this.rawSet.rbSetAdditionalMass(this.handle, A, I);\n  }\n  setAdditionalMassProperties(A, I, g, C, B) {\n    let Q = wA.intoRaw(I),\n      E = wA.intoRaw(g),\n      i = kA.intoRaw(C);\n    this.rawSet.rbSetAdditionalMassProperties(this.handle, A, Q, E, i, B), Q.free(), E.free(), i.free();\n  }\n  setAngularDamping(A) {\n    this.rawSet.rbSetAngularDamping(this.handle, A);\n  }\n  resetForces(A) {\n    this.rawSet.rbResetForces(this.handle, A);\n  }\n  resetTorques(A) {\n    this.rawSet.rbResetTorques(this.handle, A);\n  }\n  addForce(A, I) {\n    const g = wA.intoRaw(A);\n    this.rawSet.rbAddForce(this.handle, g, I), g.free();\n  }\n  applyImpulse(A, I) {\n    const g = wA.intoRaw(A);\n    this.rawSet.rbApplyImpulse(this.handle, g, I), g.free();\n  }\n  addTorque(A, I) {\n    const g = wA.intoRaw(A);\n    this.rawSet.rbAddTorque(this.handle, g, I), g.free();\n  }\n  applyTorqueImpulse(A, I) {\n    const g = wA.intoRaw(A);\n    this.rawSet.rbApplyTorqueImpulse(this.handle, g, I), g.free();\n  }\n  addForceAtPoint(A, I, g) {\n    const C = wA.intoRaw(A),\n      B = wA.intoRaw(I);\n    this.rawSet.rbAddForceAtPoint(this.handle, C, B, g), C.free(), B.free();\n  }\n  applyImpulseAtPoint(A, I, g) {\n    const C = wA.intoRaw(A),\n      B = wA.intoRaw(I);\n    this.rawSet.rbApplyImpulseAtPoint(this.handle, C, B, g), C.free(), B.free();\n  }\n}\nclass LA {\n  constructor(A) {\n    this.enabled = !0, this.status = A, this.translation = wA.zeros(), this.rotation = kA.identity(), this.gravityScale = 1, this.linvel = wA.zeros(), this.mass = 0, this.massOnly = !1, this.centerOfMass = wA.zeros(), this.translationsEnabledX = !0, this.translationsEnabledY = !0, this.angvel = wA.zeros(), this.principalAngularInertia = wA.zeros(), this.angularInertiaLocalFrame = kA.identity(), this.translationsEnabledZ = !0, this.rotationsEnabledX = !0, this.rotationsEnabledY = !0, this.rotationsEnabledZ = !0, this.linearDamping = 0, this.angularDamping = 0, this.canSleep = !0, this.sleeping = !1, this.ccdEnabled = !1, this.dominanceGroup = 0, this.additionalSolverIterations = 0;\n  }\n  static dynamic() {\n    return new LA(KA.Dynamic);\n  }\n  static kinematicPositionBased() {\n    return new LA(KA.KinematicPositionBased);\n  }\n  static kinematicVelocityBased() {\n    return new LA(KA.KinematicVelocityBased);\n  }\n  static fixed() {\n    return new LA(KA.Fixed);\n  }\n  static newDynamic() {\n    return new LA(KA.Dynamic);\n  }\n  static newKinematicPositionBased() {\n    return new LA(KA.KinematicPositionBased);\n  }\n  static newKinematicVelocityBased() {\n    return new LA(KA.KinematicVelocityBased);\n  }\n  static newStatic() {\n    return new LA(KA.Fixed);\n  }\n  setDominanceGroup(A) {\n    return this.dominanceGroup = A, this;\n  }\n  setAdditionalSolverIterations(A) {\n    return this.additionalSolverIterations = A, this;\n  }\n  setEnabled(A) {\n    return this.enabled = A, this;\n  }\n  setTranslation(A, I, g) {\n    if (\"number\" != typeof A || \"number\" != typeof I || \"number\" != typeof g) throw TypeError(\"The translation components must be numbers.\");\n    return this.translation = {\n      x: A,\n      y: I,\n      z: g\n    }, this;\n  }\n  setRotation(A) {\n    return kA.copy(this.rotation, A), this;\n  }\n  setGravityScale(A) {\n    return this.gravityScale = A, this;\n  }\n  setAdditionalMass(A) {\n    return this.mass = A, this.massOnly = !0, this;\n  }\n  setLinvel(A, I, g) {\n    if (\"number\" != typeof A || \"number\" != typeof I || \"number\" != typeof g) throw TypeError(\"The linvel components must be numbers.\");\n    return this.linvel = {\n      x: A,\n      y: I,\n      z: g\n    }, this;\n  }\n  setAngvel(A) {\n    return wA.copy(this.angvel, A), this;\n  }\n  setAdditionalMassProperties(A, I, g, C) {\n    return this.mass = A, wA.copy(this.centerOfMass, I), wA.copy(this.principalAngularInertia, g), kA.copy(this.angularInertiaLocalFrame, C), this.massOnly = !1, this;\n  }\n  enabledTranslations(A, I, g) {\n    return this.translationsEnabledX = A, this.translationsEnabledY = I, this.translationsEnabledZ = g, this;\n  }\n  restrictTranslations(A, I, g) {\n    return this.enabledTranslations(A, I, g);\n  }\n  lockTranslations() {\n    return this.enabledTranslations(!1, !1, !1);\n  }\n  enabledRotations(A, I, g) {\n    return this.rotationsEnabledX = A, this.rotationsEnabledY = I, this.rotationsEnabledZ = g, this;\n  }\n  restrictRotations(A, I, g) {\n    return this.enabledRotations(A, I, g);\n  }\n  lockRotations() {\n    return this.restrictRotations(!1, !1, !1);\n  }\n  setLinearDamping(A) {\n    return this.linearDamping = A, this;\n  }\n  setAngularDamping(A) {\n    return this.angularDamping = A, this;\n  }\n  setCanSleep(A) {\n    return this.canSleep = A, this;\n  }\n  setSleeping(A) {\n    return this.sleeping = A, this;\n  }\n  setCcdEnabled(A) {\n    return this.ccdEnabled = A, this;\n  }\n  setUserData(A) {\n    return this.userData = A, this;\n  }\n}\nclass tA {\n  constructor() {\n    this.fconv = new Float64Array(1), this.uconv = new Uint32Array(this.fconv.buffer), this.data = new Array(), this.size = 0;\n  }\n  set(A, I) {\n    let g = this.index(A);\n    for (; this.data.length <= g;) this.data.push(null);\n    null == this.data[g] && (this.size += 1), this.data[g] = I;\n  }\n  len() {\n    return this.size;\n  }\n  delete(A) {\n    let I = this.index(A);\n    I < this.data.length && (null != this.data[I] && (this.size -= 1), this.data[I] = null);\n  }\n  clear() {\n    this.data = new Array();\n  }\n  get(A) {\n    let I = this.index(A);\n    return I < this.data.length ? this.data[I] : null;\n  }\n  forEach(A) {\n    for (const I of this.data) null != I && A(I);\n  }\n  getAll() {\n    return this.data.filter(A => null != A);\n  }\n  index(A) {\n    return this.fconv[0] = A, this.uconv[0];\n  }\n}\nclass pA {\n  constructor(A) {\n    this.raw = A || new AA(), this.map = new tA(), A && A.forEachRigidBodyHandle(I => {\n      this.map.set(I, new lA(A, null, I));\n    });\n  }\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0, this.map && this.map.clear(), this.map = void 0;\n  }\n  finalizeDeserialization(A) {\n    this.map.forEach(I => I.finalizeDeserialization(A));\n  }\n  createRigidBody(A, I) {\n    let g = wA.intoRaw(I.translation),\n      C = kA.intoRaw(I.rotation),\n      B = wA.intoRaw(I.linvel),\n      Q = wA.intoRaw(I.centerOfMass),\n      E = wA.intoRaw(I.angvel),\n      i = wA.intoRaw(I.principalAngularInertia),\n      D = kA.intoRaw(I.angularInertiaLocalFrame),\n      o = this.raw.createRigidBody(I.enabled, g, C, I.gravityScale, I.mass, I.massOnly, Q, B, E, i, D, I.translationsEnabledX, I.translationsEnabledY, I.translationsEnabledZ, I.rotationsEnabledX, I.rotationsEnabledY, I.rotationsEnabledZ, I.linearDamping, I.angularDamping, I.status, I.canSleep, I.sleeping, I.ccdEnabled, I.dominanceGroup, I.additionalSolverIterations);\n    g.free(), C.free(), B.free(), Q.free(), E.free(), i.free(), D.free();\n    const G = new lA(this.raw, A, o);\n    return G.userData = I.userData, this.map.set(o, G), G;\n  }\n  remove(A, I, g, C, B) {\n    for (let I = 0; I < this.raw.rbNumColliders(A); I += 1) g.unmap(this.raw.rbCollider(A, I));\n    C.forEachJointHandleAttachedToRigidBody(A, A => C.unmap(A)), B.forEachJointHandleAttachedToRigidBody(A, A => B.unmap(A)), this.raw.remove(A, I.raw, g.raw, C.raw, B.raw), this.map.delete(A);\n  }\n  len() {\n    return this.map.len();\n  }\n  contains(A) {\n    return null != this.get(A);\n  }\n  get(A) {\n    return this.map.get(A);\n  }\n  forEach(A) {\n    this.map.forEach(A);\n  }\n  forEachActiveRigidBody(A, I) {\n    A.forEachActiveRigidBodyHandle(A => {\n      I(this.get(A));\n    });\n  }\n  getAll() {\n    return this.map.getAll();\n  }\n}\nclass eA {\n  constructor(A) {\n    this.raw = A || new x();\n  }\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0;\n  }\n  get dt() {\n    return this.raw.dt;\n  }\n  get erp() {\n    return this.raw.erp;\n  }\n  get allowedLinearError() {\n    return this.raw.allowedLinearError;\n  }\n  get predictionDistance() {\n    return this.raw.predictionDistance;\n  }\n  get numSolverIterations() {\n    return this.raw.numSolverIterations;\n  }\n  get numAdditionalFrictionIterations() {\n    return this.raw.numAdditionalFrictionIterations;\n  }\n  get numInternalPgsIterations() {\n    return this.raw.numInternalPgsIterations;\n  }\n  get minIslandSize() {\n    return this.raw.minIslandSize;\n  }\n  get maxCcdSubsteps() {\n    return this.raw.maxCcdSubsteps;\n  }\n  set dt(A) {\n    this.raw.dt = A;\n  }\n  set erp(A) {\n    this.raw.erp = A;\n  }\n  set allowedLinearError(A) {\n    this.raw.allowedLinearError = A;\n  }\n  set predictionDistance(A) {\n    this.raw.predictionDistance = A;\n  }\n  set numSolverIterations(A) {\n    this.raw.numSolverIterations = A;\n  }\n  set numAdditionalFrictionIterations(A) {\n    this.raw.numAdditionalFrictionIterations = A;\n  }\n  set numInternalPgsIterations(A) {\n    this.raw.numInternalPgsIterations = A;\n  }\n  set minIslandSize(A) {\n    this.raw.minIslandSize = A;\n  }\n  set maxCcdSubsteps(A) {\n    this.raw.maxCcdSubsteps = A;\n  }\n  switchToStandardPgsSolver() {\n    this.raw.switchToStandardPgsSolver();\n  }\n  switchToSmallStepsPgsSolver() {\n    this.raw.switchToSmallStepsPgsSolver();\n  }\n}\n!function (A) {\n  A[A.Revolute = 0] = \"Revolute\", A[A.Fixed = 1] = \"Fixed\", A[A.Prismatic = 2] = \"Prismatic\", A[A.Rope = 3] = \"Rope\", A[A.Spring = 4] = \"Spring\", A[A.Spherical = 5] = \"Spherical\", A[A.Generic = 6] = \"Generic\";\n}(UA || (UA = {})), function (A) {\n  A[A.AccelerationBased = 0] = \"AccelerationBased\", A[A.ForceBased = 1] = \"ForceBased\";\n}(JA || (JA = {})), function (A) {\n  A[A.X = 1] = \"X\", A[A.Y = 2] = \"Y\", A[A.Z = 4] = \"Z\", A[A.AngX = 8] = \"AngX\", A[A.AngY = 16] = \"AngY\", A[A.AngZ = 32] = \"AngZ\";\n}(NA || (NA = {}));\nclass rA {\n  constructor(A, I, g) {\n    this.rawSet = A, this.bodySet = I, this.handle = g;\n  }\n  static newTyped(A, I, g) {\n    switch (A.jointType(g)) {\n      case H.Revolute:\n        return new bA(A, I, g);\n      case H.Prismatic:\n        return new ZA(A, I, g);\n      case H.Fixed:\n        return new TA(A, I, g);\n      case H.Spring:\n        return new OA(A, I, g);\n      case H.Rope:\n        return new nA(A, I, g);\n      case H.Spherical:\n        return new xA(A, I, g);\n      case H.Generic:\n        return new WA(A, I, g);\n      default:\n        return new rA(A, I, g);\n    }\n  }\n  finalizeDeserialization(A) {\n    this.bodySet = A;\n  }\n  isValid() {\n    return this.rawSet.contains(this.handle);\n  }\n  body1() {\n    return this.bodySet.get(this.rawSet.jointBodyHandle1(this.handle));\n  }\n  body2() {\n    return this.bodySet.get(this.rawSet.jointBodyHandle2(this.handle));\n  }\n  type() {\n    return this.rawSet.jointType(this.handle);\n  }\n  frameX1() {\n    return kA.fromRaw(this.rawSet.jointFrameX1(this.handle));\n  }\n  frameX2() {\n    return kA.fromRaw(this.rawSet.jointFrameX2(this.handle));\n  }\n  anchor1() {\n    return wA.fromRaw(this.rawSet.jointAnchor1(this.handle));\n  }\n  anchor2() {\n    return wA.fromRaw(this.rawSet.jointAnchor2(this.handle));\n  }\n  setAnchor1(A) {\n    const I = wA.intoRaw(A);\n    this.rawSet.jointSetAnchor1(this.handle, I), I.free();\n  }\n  setAnchor2(A) {\n    const I = wA.intoRaw(A);\n    this.rawSet.jointSetAnchor2(this.handle, I), I.free();\n  }\n  setContactsEnabled(A) {\n    this.rawSet.jointSetContactsEnabled(this.handle, A);\n  }\n  contactsEnabled() {\n    return this.rawSet.jointContactsEnabled(this.handle);\n  }\n}\nclass dA extends rA {\n  limitsEnabled() {\n    return this.rawSet.jointLimitsEnabled(this.handle, this.rawAxis());\n  }\n  limitsMin() {\n    return this.rawSet.jointLimitsMin(this.handle, this.rawAxis());\n  }\n  limitsMax() {\n    return this.rawSet.jointLimitsMax(this.handle, this.rawAxis());\n  }\n  setLimits(A, I) {\n    this.rawSet.jointSetLimits(this.handle, this.rawAxis(), A, I);\n  }\n  configureMotorModel(A) {\n    this.rawSet.jointConfigureMotorModel(this.handle, this.rawAxis(), A);\n  }\n  configureMotorVelocity(A, I) {\n    this.rawSet.jointConfigureMotorVelocity(this.handle, this.rawAxis(), A, I);\n  }\n  configureMotorPosition(A, I, g) {\n    this.rawSet.jointConfigureMotorPosition(this.handle, this.rawAxis(), A, I, g);\n  }\n  configureMotor(A, I, g, C) {\n    this.rawSet.jointConfigureMotor(this.handle, this.rawAxis(), A, I, g, C);\n  }\n}\nclass TA extends rA {}\nclass nA extends rA {}\nclass OA extends rA {}\nclass ZA extends dA {\n  rawAxis() {\n    return Y.X;\n  }\n}\nclass bA extends dA {\n  rawAxis() {\n    return Y.AngX;\n  }\n}\nclass WA extends rA {}\nclass xA extends rA {}\nclass mA {\n  constructor() {}\n  static fixed(A, I, g, C) {\n    let B = new mA();\n    return B.anchor1 = A, B.anchor2 = g, B.frame1 = I, B.frame2 = C, B.jointType = UA.Fixed, B;\n  }\n  static spring(A, I, g, C, B) {\n    let Q = new mA();\n    return Q.anchor1 = C, Q.anchor2 = B, Q.length = A, Q.stiffness = I, Q.damping = g, Q.jointType = UA.Spring, Q;\n  }\n  static rope(A, I, g) {\n    let C = new mA();\n    return C.anchor1 = I, C.anchor2 = g, C.length = A, C.jointType = UA.Rope, C;\n  }\n  static generic(A, I, g, C) {\n    let B = new mA();\n    return B.anchor1 = A, B.anchor2 = I, B.axis = g, B.axesMask = C, B.jointType = UA.Generic, B;\n  }\n  static spherical(A, I) {\n    let g = new mA();\n    return g.anchor1 = A, g.anchor2 = I, g.jointType = UA.Spherical, g;\n  }\n  static prismatic(A, I, g) {\n    let C = new mA();\n    return C.anchor1 = A, C.anchor2 = I, C.axis = g, C.jointType = UA.Prismatic, C;\n  }\n  static revolute(A, I, g) {\n    let C = new mA();\n    return C.anchor1 = A, C.anchor2 = I, C.axis = g, C.jointType = UA.Revolute, C;\n  }\n  intoRaw() {\n    let A,\n      I,\n      g = wA.intoRaw(this.anchor1),\n      C = wA.intoRaw(this.anchor2),\n      B = !1,\n      Q = 0,\n      E = 0;\n    switch (this.jointType) {\n      case UA.Fixed:\n        let i = kA.intoRaw(this.frame1),\n          D = kA.intoRaw(this.frame2);\n        I = b.fixed(g, i, C, D), i.free(), D.free();\n        break;\n      case UA.Spring:\n        I = b.spring(this.length, this.stiffness, this.damping, g, C);\n        break;\n      case UA.Rope:\n        I = b.rope(this.length, g, C);\n        break;\n      case UA.Prismatic:\n        A = wA.intoRaw(this.axis), this.limitsEnabled && (B = !0, Q = this.limits[0], E = this.limits[1]), I = b.prismatic(g, C, A, B, Q, E), A.free();\n        break;\n      case UA.Generic:\n        A = wA.intoRaw(this.axis);\n        let o = this.axesMask;\n        I = b.generic(g, C, A, o);\n        break;\n      case UA.Spherical:\n        I = b.spherical(g, C);\n        break;\n      case UA.Revolute:\n        A = wA.intoRaw(this.axis), I = b.revolute(g, C, A), A.free();\n    }\n    return g.free(), C.free(), I;\n  }\n}\nclass jA {\n  constructor(A) {\n    this.raw = A || new W(), this.map = new tA(), A && A.forEachJointHandle(I => {\n      this.map.set(I, rA.newTyped(A, null, I));\n    });\n  }\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0, this.map && this.map.clear(), this.map = void 0;\n  }\n  finalizeDeserialization(A) {\n    this.map.forEach(I => I.finalizeDeserialization(A));\n  }\n  createJoint(A, I, g, C, B) {\n    const Q = I.intoRaw(),\n      E = this.raw.createJoint(Q, g, C, B);\n    Q.free();\n    let i = rA.newTyped(this.raw, A, E);\n    return this.map.set(E, i), i;\n  }\n  remove(A, I) {\n    this.raw.remove(A, I), this.unmap(A);\n  }\n  forEachJointHandleAttachedToRigidBody(A, I) {\n    this.raw.forEachJointAttachedToRigidBody(A, I);\n  }\n  unmap(A) {\n    this.map.delete(A);\n  }\n  len() {\n    return this.map.len();\n  }\n  contains(A) {\n    return null != this.get(A);\n  }\n  get(A) {\n    return this.map.get(A);\n  }\n  forEach(A) {\n    this.map.forEach(A);\n  }\n  getAll() {\n    return this.map.getAll();\n  }\n}\nclass fA {\n  constructor(A, I) {\n    this.rawSet = A, this.handle = I;\n  }\n  static newTyped(A, I) {\n    switch (A.jointType(I)) {\n      case H.Revolute:\n        return new uA(A, I);\n      case H.Prismatic:\n        return new PA(A, I);\n      case H.Fixed:\n        return new VA(A, I);\n      case H.Spherical:\n        return new zA(A, I);\n      default:\n        return new fA(A, I);\n    }\n  }\n  isValid() {\n    return this.rawSet.contains(this.handle);\n  }\n  setContactsEnabled(A) {\n    this.rawSet.jointSetContactsEnabled(this.handle, A);\n  }\n  contactsEnabled() {\n    return this.rawSet.jointContactsEnabled(this.handle);\n  }\n}\nclass XA extends fA {}\nclass VA extends fA {}\nclass PA extends XA {\n  rawAxis() {\n    return Y.X;\n  }\n}\nclass uA extends XA {\n  rawAxis() {\n    return Y.AngX;\n  }\n}\nclass zA extends fA {}\nclass vA {\n  constructor(A) {\n    this.raw = A || new f(), this.map = new tA(), A && A.forEachJointHandle(A => {\n      this.map.set(A, fA.newTyped(this.raw, A));\n    });\n  }\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0, this.map && this.map.clear(), this.map = void 0;\n  }\n  createJoint(A, I, g, C) {\n    const B = A.intoRaw(),\n      Q = this.raw.createJoint(B, I, g, C);\n    B.free();\n    let E = fA.newTyped(this.raw, Q);\n    return this.map.set(Q, E), E;\n  }\n  remove(A, I) {\n    this.raw.remove(A, I), this.map.delete(A);\n  }\n  unmap(A) {\n    this.map.delete(A);\n  }\n  len() {\n    return this.map.len();\n  }\n  contains(A) {\n    return null != this.get(A);\n  }\n  get(A) {\n    return this.map.get(A);\n  }\n  forEach(A) {\n    this.map.forEach(A);\n  }\n  forEachJointHandleAttachedToRigidBody(A, I) {\n    this.raw.forEachJointAttachedToRigidBody(A, I);\n  }\n  getAll() {\n    return this.map.getAll();\n  }\n}\n!function (A) {\n  A[A.Average = 0] = \"Average\", A[A.Min = 1] = \"Min\", A[A.Multiply = 2] = \"Multiply\", A[A.Max = 3] = \"Max\";\n}(yA || (yA = {}));\nclass _A {\n  constructor(A) {\n    this.raw = A || new L();\n  }\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0;\n  }\n}\nclass $A {\n  constructor(A) {\n    this.raw = A || new m();\n  }\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0;\n  }\n  forEachActiveRigidBodyHandle(A) {\n    this.raw.forEachActiveRigidBodyHandle(A);\n  }\n}\nclass AI {\n  constructor(A) {\n    this.raw = A || new l();\n  }\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0;\n  }\n}\nclass II {\n  constructor(A) {\n    this.raw = A || new X(), this.tempManifold = new gI(null);\n  }\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0;\n  }\n  contactPairsWith(A, I) {\n    this.raw.contact_pairs_with(A, I);\n  }\n  intersectionPairsWith(A, I) {\n    this.raw.intersection_pairs_with(A, I);\n  }\n  contactPair(A, I, g) {\n    const C = this.raw.contact_pair(A, I);\n    if (C) {\n      const I = C.collider1() != A;\n      let B;\n      for (B = 0; B < C.numContactManifolds(); ++B) this.tempManifold.raw = C.contactManifold(B), this.tempManifold.raw && g(this.tempManifold, I), this.tempManifold.free();\n      C.free();\n    }\n  }\n  intersectionPair(A, I) {\n    return this.raw.intersection_pair(A, I);\n  }\n}\nclass gI {\n  constructor(A) {\n    this.raw = A;\n  }\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0;\n  }\n  normal() {\n    return wA.fromRaw(this.raw.normal());\n  }\n  localNormal1() {\n    return wA.fromRaw(this.raw.local_n1());\n  }\n  localNormal2() {\n    return wA.fromRaw(this.raw.local_n2());\n  }\n  subshape1() {\n    return this.raw.subshape1();\n  }\n  subshape2() {\n    return this.raw.subshape2();\n  }\n  numContacts() {\n    return this.raw.num_contacts();\n  }\n  localContactPoint1(A) {\n    return wA.fromRaw(this.raw.contact_local_p1(A));\n  }\n  localContactPoint2(A) {\n    return wA.fromRaw(this.raw.contact_local_p2(A));\n  }\n  contactDist(A) {\n    return this.raw.contact_dist(A);\n  }\n  contactFid1(A) {\n    return this.raw.contact_fid1(A);\n  }\n  contactFid2(A) {\n    return this.raw.contact_fid2(A);\n  }\n  contactImpulse(A) {\n    return this.raw.contact_impulse(A);\n  }\n  contactTangentImpulseX(A) {\n    return this.raw.contact_tangent_impulse_x(A);\n  }\n  contactTangentImpulseY(A) {\n    return this.raw.contact_tangent_impulse_y(A);\n  }\n  numSolverContacts() {\n    return this.raw.num_solver_contacts();\n  }\n  solverContactPoint(A) {\n    return wA.fromRaw(this.raw.solver_contact_point(A));\n  }\n  solverContactDist(A) {\n    return this.raw.solver_contact_dist(A);\n  }\n  solverContactFriction(A) {\n    return this.raw.solver_contact_friction(A);\n  }\n  solverContactRestitution(A) {\n    return this.raw.solver_contact_restitution(A);\n  }\n  solverContactTangentVelocity(A) {\n    return wA.fromRaw(this.raw.solver_contact_tangent_velocity(A));\n  }\n}\nclass CI {\n  constructor(A, I, g, C, B) {\n    this.distance = A, this.point1 = I, this.point2 = g, this.normal1 = C, this.normal2 = B;\n  }\n  static fromRaw(A) {\n    if (!A) return null;\n    const I = new CI(A.distance(), wA.fromRaw(A.point1()), wA.fromRaw(A.point2()), wA.fromRaw(A.normal1()), wA.fromRaw(A.normal2()));\n    return A.free(), I;\n  }\n}\n!function (A) {\n  A[A.Vertex = 0] = \"Vertex\", A[A.Edge = 1] = \"Edge\", A[A.Face = 2] = \"Face\", A[A.Unknown = 3] = \"Unknown\";\n}(MA || (MA = {}));\nclass BI {\n  constructor(A, I) {\n    this.point = A, this.isInside = I;\n  }\n  static fromRaw(A) {\n    if (!A) return null;\n    const I = new BI(wA.fromRaw(A.point()), A.isInside());\n    return A.free(), I;\n  }\n}\nclass QI {\n  constructor(A, I, g, C, B) {\n    this.featureType = MA.Unknown, this.featureId = void 0, this.collider = A, this.point = I, this.isInside = g, void 0 !== B && (this.featureId = B), void 0 !== C && (this.featureType = C);\n  }\n  static fromRaw(A, I) {\n    if (!I) return null;\n    const g = new QI(A.get(I.colliderHandle()), wA.fromRaw(I.point()), I.isInside(), I.featureType(), I.featureId());\n    return I.free(), g;\n  }\n}\nclass EI {\n  constructor(A, I) {\n    this.origin = A, this.dir = I;\n  }\n  pointAt(A) {\n    return {\n      x: this.origin.x + this.dir.x * A,\n      y: this.origin.y + this.dir.y * A,\n      z: this.origin.z + this.dir.z * A\n    };\n  }\n}\nclass iI {\n  constructor(A, I, g, C) {\n    this.featureType = MA.Unknown, this.featureId = void 0, this.toi = A, this.normal = I, void 0 !== C && (this.featureId = C), void 0 !== g && (this.featureType = g);\n  }\n  static fromRaw(A) {\n    if (!A) return null;\n    const I = new iI(A.toi(), wA.fromRaw(A.normal()), A.featureType(), A.featureId());\n    return A.free(), I;\n  }\n}\nclass DI {\n  constructor(A, I, g, C, B) {\n    this.featureType = MA.Unknown, this.featureId = void 0, this.collider = A, this.toi = I, this.normal = g, void 0 !== B && (this.featureId = B), void 0 !== C && (this.featureType = C);\n  }\n  static fromRaw(A, I) {\n    if (!I) return null;\n    const g = new DI(A.get(I.colliderHandle()), I.toi(), wA.fromRaw(I.normal()), I.featureType(), I.featureId());\n    return I.free(), g;\n  }\n}\nclass oI {\n  constructor(A, I) {\n    this.collider = A, this.toi = I;\n  }\n  static fromRaw(A, I) {\n    if (!I) return null;\n    const g = new oI(A.get(I.colliderHandle()), I.toi());\n    return I.free(), g;\n  }\n}\nclass GI {\n  constructor(A, I, g, C, B) {\n    this.toi = A, this.witness1 = I, this.witness2 = g, this.normal1 = C, this.normal2 = B;\n  }\n  static fromRaw(A, I) {\n    if (!I) return null;\n    const g = new GI(I.toi(), wA.fromRaw(I.witness1()), wA.fromRaw(I.witness2()), wA.fromRaw(I.normal1()), wA.fromRaw(I.normal2()));\n    return I.free(), g;\n  }\n}\nclass wI extends GI {\n  constructor(A, I, g, C, B, Q) {\n    super(I, g, C, B, Q), this.collider = A;\n  }\n  static fromRaw(A, I) {\n    if (!I) return null;\n    const g = new wI(A.get(I.colliderHandle()), I.toi(), wA.fromRaw(I.witness1()), wA.fromRaw(I.witness2()), wA.fromRaw(I.normal1()), wA.fromRaw(I.normal2()));\n    return I.free(), g;\n  }\n}\nclass SI {\n  static fromRaw(A, I) {\n    const g = A.coShapeType(I);\n    let C, B, Q, E, i, D, o;\n    switch (g) {\n      case c.Ball:\n        return new kI(A.coRadius(I));\n      case c.Cuboid:\n        return C = A.coHalfExtents(I), new hI(C.x, C.y, C.z);\n      case c.RoundCuboid:\n        return C = A.coHalfExtents(I), B = A.coRoundRadius(I), new KI(C.x, C.y, C.z, B);\n      case c.Capsule:\n        return i = A.coHalfHeight(I), D = A.coRadius(I), new UI(i, D);\n      case c.Segment:\n        return Q = A.coVertices(I), new JI(wA.new(Q[0], Q[1], Q[2]), wA.new(Q[3], Q[4], Q[5]));\n      case c.Polyline:\n        return Q = A.coVertices(I), E = A.coIndices(I), new MI(Q, E);\n      case c.Triangle:\n        return Q = A.coVertices(I), new NI(wA.new(Q[0], Q[1], Q[2]), wA.new(Q[3], Q[4], Q[5]), wA.new(Q[6], Q[7], Q[8]));\n      case c.RoundTriangle:\n        return Q = A.coVertices(I), B = A.coRoundRadius(I), new yI(wA.new(Q[0], Q[1], Q[2]), wA.new(Q[3], Q[4], Q[5]), wA.new(Q[6], Q[7], Q[8]), B);\n      case c.HalfSpace:\n        return o = wA.fromRaw(A.coHalfspaceNormal(I)), new aI(o);\n      case c.TriMesh:\n        return Q = A.coVertices(I), E = A.coIndices(I), new FI(Q, E);\n      case c.HeightField:\n        const G = A.coHeightfieldScale(I),\n          w = A.coHeightfieldHeights(I),\n          S = A.coHeightfieldNRows(I),\n          k = A.coHeightfieldNCols(I);\n        return new sI(S, k, w, G);\n      case c.ConvexPolyhedron:\n        return Q = A.coVertices(I), E = A.coIndices(I), new qI(Q, E);\n      case c.RoundConvexPolyhedron:\n        return Q = A.coVertices(I), E = A.coIndices(I), B = A.coRoundRadius(I), new RI(Q, E, B);\n      case c.Cylinder:\n        return i = A.coHalfHeight(I), D = A.coRadius(I), new cI(i, D);\n      case c.RoundCylinder:\n        return i = A.coHalfHeight(I), D = A.coRadius(I), B = A.coRoundRadius(I), new YI(i, D, B);\n      case c.Cone:\n        return i = A.coHalfHeight(I), D = A.coRadius(I), new HI(i, D);\n      case c.RoundCone:\n        return i = A.coHalfHeight(I), D = A.coRadius(I), B = A.coRoundRadius(I), new lI(i, D, B);\n      default:\n        throw new Error(\"unknown shape type: \" + g);\n    }\n  }\n  castShape(A, I, g, C, B, Q, E, i, D) {\n    let o = wA.intoRaw(A),\n      G = kA.intoRaw(I),\n      w = wA.intoRaw(g),\n      S = wA.intoRaw(B),\n      k = kA.intoRaw(Q),\n      a = wA.intoRaw(E),\n      h = this.intoRaw(),\n      K = C.intoRaw(),\n      U = GI.fromRaw(null, h.castShape(o, G, w, K, S, k, a, i, D));\n    return o.free(), G.free(), w.free(), S.free(), k.free(), a.free(), h.free(), K.free(), U;\n  }\n  intersectsShape(A, I, g, C, B) {\n    let Q = wA.intoRaw(A),\n      E = kA.intoRaw(I),\n      i = wA.intoRaw(C),\n      D = kA.intoRaw(B),\n      o = this.intoRaw(),\n      G = g.intoRaw(),\n      w = o.intersectsShape(Q, E, G, i, D);\n    return Q.free(), E.free(), i.free(), D.free(), o.free(), G.free(), w;\n  }\n  contactShape(A, I, g, C, B, Q) {\n    let E = wA.intoRaw(A),\n      i = kA.intoRaw(I),\n      D = wA.intoRaw(C),\n      o = kA.intoRaw(B),\n      G = this.intoRaw(),\n      w = g.intoRaw(),\n      S = CI.fromRaw(G.contactShape(E, i, w, D, o, Q));\n    return E.free(), i.free(), D.free(), o.free(), G.free(), w.free(), S;\n  }\n  containsPoint(A, I, g) {\n    let C = wA.intoRaw(A),\n      B = kA.intoRaw(I),\n      Q = wA.intoRaw(g),\n      E = this.intoRaw(),\n      i = E.containsPoint(C, B, Q);\n    return C.free(), B.free(), Q.free(), E.free(), i;\n  }\n  projectPoint(A, I, g, C) {\n    let B = wA.intoRaw(A),\n      Q = kA.intoRaw(I),\n      E = wA.intoRaw(g),\n      i = this.intoRaw(),\n      D = BI.fromRaw(i.projectPoint(B, Q, E, C));\n    return B.free(), Q.free(), E.free(), i.free(), D;\n  }\n  intersectsRay(A, I, g, C) {\n    let B = wA.intoRaw(I),\n      Q = kA.intoRaw(g),\n      E = wA.intoRaw(A.origin),\n      i = wA.intoRaw(A.dir),\n      D = this.intoRaw(),\n      o = D.intersectsRay(B, Q, E, i, C);\n    return B.free(), Q.free(), E.free(), i.free(), D.free(), o;\n  }\n  castRay(A, I, g, C, B) {\n    let Q = wA.intoRaw(I),\n      E = kA.intoRaw(g),\n      i = wA.intoRaw(A.origin),\n      D = wA.intoRaw(A.dir),\n      o = this.intoRaw(),\n      G = o.castRay(Q, E, i, D, C, B);\n    return Q.free(), E.free(), i.free(), D.free(), o.free(), G;\n  }\n  castRayAndGetNormal(A, I, g, C, B) {\n    let Q = wA.intoRaw(I),\n      E = kA.intoRaw(g),\n      i = wA.intoRaw(A.origin),\n      D = wA.intoRaw(A.dir),\n      o = this.intoRaw(),\n      G = iI.fromRaw(o.castRayAndGetNormal(Q, E, i, D, C, B));\n    return Q.free(), E.free(), i.free(), D.free(), o.free(), G;\n  }\n}\n!function (A) {\n  A[A.Ball = 0] = \"Ball\", A[A.Cuboid = 1] = \"Cuboid\", A[A.Capsule = 2] = \"Capsule\", A[A.Segment = 3] = \"Segment\", A[A.Polyline = 4] = \"Polyline\", A[A.Triangle = 5] = \"Triangle\", A[A.TriMesh = 6] = \"TriMesh\", A[A.HeightField = 7] = \"HeightField\", A[A.ConvexPolyhedron = 9] = \"ConvexPolyhedron\", A[A.Cylinder = 10] = \"Cylinder\", A[A.Cone = 11] = \"Cone\", A[A.RoundCuboid = 12] = \"RoundCuboid\", A[A.RoundTriangle = 13] = \"RoundTriangle\", A[A.RoundCylinder = 14] = \"RoundCylinder\", A[A.RoundCone = 15] = \"RoundCone\", A[A.RoundConvexPolyhedron = 16] = \"RoundConvexPolyhedron\", A[A.HalfSpace = 17] = \"HalfSpace\";\n}(FA || (FA = {}));\nclass kI extends SI {\n  constructor(A) {\n    super(), this.type = FA.Ball, this.radius = A;\n  }\n  intoRaw() {\n    return BA.ball(this.radius);\n  }\n}\nclass aI extends SI {\n  constructor(A) {\n    super(), this.type = FA.HalfSpace, this.normal = A;\n  }\n  intoRaw() {\n    let A = wA.intoRaw(this.normal),\n      I = BA.halfspace(A);\n    return A.free(), I;\n  }\n}\nclass hI extends SI {\n  constructor(A, I, g) {\n    super(), this.type = FA.Cuboid, this.halfExtents = wA.new(A, I, g);\n  }\n  intoRaw() {\n    return BA.cuboid(this.halfExtents.x, this.halfExtents.y, this.halfExtents.z);\n  }\n}\nclass KI extends SI {\n  constructor(A, I, g, C) {\n    super(), this.type = FA.RoundCuboid, this.halfExtents = wA.new(A, I, g), this.borderRadius = C;\n  }\n  intoRaw() {\n    return BA.roundCuboid(this.halfExtents.x, this.halfExtents.y, this.halfExtents.z, this.borderRadius);\n  }\n}\nclass UI extends SI {\n  constructor(A, I) {\n    super(), this.type = FA.Capsule, this.halfHeight = A, this.radius = I;\n  }\n  intoRaw() {\n    return BA.capsule(this.halfHeight, this.radius);\n  }\n}\nclass JI extends SI {\n  constructor(A, I) {\n    super(), this.type = FA.Segment, this.a = A, this.b = I;\n  }\n  intoRaw() {\n    let A = wA.intoRaw(this.a),\n      I = wA.intoRaw(this.b),\n      g = BA.segment(A, I);\n    return A.free(), I.free(), g;\n  }\n}\nclass NI extends SI {\n  constructor(A, I, g) {\n    super(), this.type = FA.Triangle, this.a = A, this.b = I, this.c = g;\n  }\n  intoRaw() {\n    let A = wA.intoRaw(this.a),\n      I = wA.intoRaw(this.b),\n      g = wA.intoRaw(this.c),\n      C = BA.triangle(A, I, g);\n    return A.free(), I.free(), g.free(), C;\n  }\n}\nclass yI extends SI {\n  constructor(A, I, g, C) {\n    super(), this.type = FA.RoundTriangle, this.a = A, this.b = I, this.c = g, this.borderRadius = C;\n  }\n  intoRaw() {\n    let A = wA.intoRaw(this.a),\n      I = wA.intoRaw(this.b),\n      g = wA.intoRaw(this.c),\n      C = BA.roundTriangle(A, I, g, this.borderRadius);\n    return A.free(), I.free(), g.free(), C;\n  }\n}\nclass MI extends SI {\n  constructor(A, I) {\n    super(), this.type = FA.Polyline, this.vertices = A, this.indices = null != I ? I : new Uint32Array(0);\n  }\n  intoRaw() {\n    return BA.polyline(this.vertices, this.indices);\n  }\n}\nclass FI extends SI {\n  constructor(A, I) {\n    super(), this.type = FA.TriMesh, this.vertices = A, this.indices = I;\n  }\n  intoRaw() {\n    return BA.trimesh(this.vertices, this.indices);\n  }\n}\nclass qI extends SI {\n  constructor(A, I) {\n    super(), this.type = FA.ConvexPolyhedron, this.vertices = A, this.indices = I;\n  }\n  intoRaw() {\n    return this.indices ? BA.convexMesh(this.vertices, this.indices) : BA.convexHull(this.vertices);\n  }\n}\nclass RI extends SI {\n  constructor(A, I, g) {\n    super(), this.type = FA.RoundConvexPolyhedron, this.vertices = A, this.indices = I, this.borderRadius = g;\n  }\n  intoRaw() {\n    return this.indices ? BA.roundConvexMesh(this.vertices, this.indices, this.borderRadius) : BA.roundConvexHull(this.vertices, this.borderRadius);\n  }\n}\nclass sI extends SI {\n  constructor(A, I, g, C) {\n    super(), this.type = FA.HeightField, this.nrows = A, this.ncols = I, this.heights = g, this.scale = C;\n  }\n  intoRaw() {\n    let A = wA.intoRaw(this.scale),\n      I = BA.heightfield(this.nrows, this.ncols, this.heights, A);\n    return A.free(), I;\n  }\n}\nclass cI extends SI {\n  constructor(A, I) {\n    super(), this.type = FA.Cylinder, this.halfHeight = A, this.radius = I;\n  }\n  intoRaw() {\n    return BA.cylinder(this.halfHeight, this.radius);\n  }\n}\nclass YI extends SI {\n  constructor(A, I, g) {\n    super(), this.type = FA.RoundCylinder, this.borderRadius = g, this.halfHeight = A, this.radius = I;\n  }\n  intoRaw() {\n    return BA.roundCylinder(this.halfHeight, this.radius, this.borderRadius);\n  }\n}\nclass HI extends SI {\n  constructor(A, I) {\n    super(), this.type = FA.Cone, this.halfHeight = A, this.radius = I;\n  }\n  intoRaw() {\n    return BA.cone(this.halfHeight, this.radius);\n  }\n}\nclass lI extends SI {\n  constructor(A, I, g) {\n    super(), this.type = FA.RoundCone, this.halfHeight = A, this.radius = I, this.borderRadius = g;\n  }\n  intoRaw() {\n    return BA.roundCone(this.halfHeight, this.radius, this.borderRadius);\n  }\n}\nclass LI {\n  constructor(A) {\n    this.raw = A || new V();\n  }\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0;\n  }\n  step(A, I, g, C, B, Q, E, i, D, o, G, w) {\n    let S = wA.intoRaw(A);\n    G ? this.raw.stepWithEvents(S, I.raw, g.raw, C.raw, B.raw, Q.raw, E.raw, i.raw, D.raw, o.raw, G.raw, w, w ? w.filterContactPair : null, w ? w.filterIntersectionPair : null) : this.raw.step(S, I.raw, g.raw, C.raw, B.raw, Q.raw, E.raw, i.raw, D.raw, o.raw), S.free();\n  }\n}\n!function (A) {\n  A[A.EXCLUDE_FIXED = 1] = \"EXCLUDE_FIXED\", A[A.EXCLUDE_KINEMATIC = 2] = \"EXCLUDE_KINEMATIC\", A[A.EXCLUDE_DYNAMIC = 4] = \"EXCLUDE_DYNAMIC\", A[A.EXCLUDE_SENSORS = 8] = \"EXCLUDE_SENSORS\", A[A.EXCLUDE_SOLIDS = 16] = \"EXCLUDE_SOLIDS\", A[A.ONLY_DYNAMIC = 3] = \"ONLY_DYNAMIC\", A[A.ONLY_KINEMATIC = 5] = \"ONLY_KINEMATIC\", A[A.ONLY_FIXED = 6] = \"ONLY_FIXED\";\n}(qA || (qA = {}));\nclass tI {\n  constructor(A) {\n    this.raw = A || new z();\n  }\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0;\n  }\n  update(A, I) {\n    this.raw.update(A.raw, I.raw);\n  }\n  castRay(A, I, g, C, B, Q, E, i, D, o) {\n    let G = wA.intoRaw(g.origin),\n      w = wA.intoRaw(g.dir),\n      S = oI.fromRaw(I, this.raw.castRay(A.raw, I.raw, G, w, C, B, Q, E, i, D, o));\n    return G.free(), w.free(), S;\n  }\n  castRayAndGetNormal(A, I, g, C, B, Q, E, i, D, o) {\n    let G = wA.intoRaw(g.origin),\n      w = wA.intoRaw(g.dir),\n      S = DI.fromRaw(I, this.raw.castRayAndGetNormal(A.raw, I.raw, G, w, C, B, Q, E, i, D, o));\n    return G.free(), w.free(), S;\n  }\n  intersectionsWithRay(A, I, g, C, B, Q, E, i, D, o, G) {\n    let w = wA.intoRaw(g.origin),\n      S = wA.intoRaw(g.dir);\n    this.raw.intersectionsWithRay(A.raw, I.raw, w, S, C, B, A => Q(DI.fromRaw(I, A)), E, i, D, o, G), w.free(), S.free();\n  }\n  intersectionWithShape(A, I, g, C, B, Q, E, i, D, o) {\n    let G = wA.intoRaw(g),\n      w = kA.intoRaw(C),\n      S = B.intoRaw(),\n      k = this.raw.intersectionWithShape(A.raw, I.raw, G, w, S, Q, E, i, D, o);\n    return G.free(), w.free(), S.free(), k;\n  }\n  projectPoint(A, I, g, C, B, Q, E, i, D) {\n    let o = wA.intoRaw(g),\n      G = QI.fromRaw(I, this.raw.projectPoint(A.raw, I.raw, o, C, B, Q, E, i, D));\n    return o.free(), G;\n  }\n  projectPointAndGetFeature(A, I, g, C, B, Q, E, i) {\n    let D = wA.intoRaw(g),\n      o = QI.fromRaw(I, this.raw.projectPointAndGetFeature(A.raw, I.raw, D, C, B, Q, E, i));\n    return D.free(), o;\n  }\n  intersectionsWithPoint(A, I, g, C, B, Q, E, i, D) {\n    let o = wA.intoRaw(g);\n    this.raw.intersectionsWithPoint(A.raw, I.raw, o, C, B, Q, E, i, D), o.free();\n  }\n  castShape(A, I, g, C, B, Q, E, i, D, o, G, w, S) {\n    let k = wA.intoRaw(g),\n      a = kA.intoRaw(C),\n      h = wA.intoRaw(B),\n      K = Q.intoRaw(),\n      U = wI.fromRaw(I, this.raw.castShape(A.raw, I.raw, k, a, h, K, E, i, D, o, G, w, S));\n    return k.free(), a.free(), h.free(), K.free(), U;\n  }\n  intersectionsWithShape(A, I, g, C, B, Q, E, i, D, o, G) {\n    let w = wA.intoRaw(g),\n      S = kA.intoRaw(C),\n      k = B.intoRaw();\n    this.raw.intersectionsWithShape(A.raw, I.raw, w, S, k, Q, E, i, D, o, G), w.free(), S.free(), k.free();\n  }\n  collidersWithAabbIntersectingAabb(A, I, g) {\n    let C = wA.intoRaw(A),\n      B = wA.intoRaw(I);\n    this.raw.collidersWithAabbIntersectingAabb(C, B, g), C.free(), B.free();\n  }\n}\nclass pI {\n  constructor(A) {\n    this.raw = A || new CA();\n  }\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0;\n  }\n  serializeAll(A, I, g, C, B, Q, E, i, D) {\n    let o = wA.intoRaw(A);\n    const G = this.raw.serializeAll(o, I.raw, g.raw, C.raw, B.raw, Q.raw, E.raw, i.raw, D.raw);\n    return o.free(), G;\n  }\n  deserializeAll(A) {\n    return OI.fromRaw(this.raw.deserializeAll(A));\n  }\n}\nclass eI {\n  constructor(A, I) {\n    this.vertices = A, this.colors = I;\n  }\n}\nclass rI {\n  constructor(A) {\n    this.raw = A || new T();\n  }\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0, this.vertices = void 0, this.colors = void 0;\n  }\n  render(A, I, g, C, B) {\n    this.raw.render(A.raw, I.raw, g.raw, C.raw, B.raw), this.vertices = this.raw.vertices(), this.colors = this.raw.colors();\n  }\n}\nclass dI {}\nclass TI {\n  constructor(A, I, g, C, B) {\n    this.params = I, this.bodies = g, this.colliders = C, this.queries = B, this.raw = new j(A), this.rawCharacterCollision = new t(), this._applyImpulsesToDynamicBodies = !1, this._characterMass = null;\n  }\n  free() {\n    this.raw && (this.raw.free(), this.rawCharacterCollision.free()), this.raw = void 0, this.rawCharacterCollision = void 0;\n  }\n  up() {\n    return this.raw.up();\n  }\n  setUp(A) {\n    let I = wA.intoRaw(A);\n    return this.raw.setUp(I);\n  }\n  applyImpulsesToDynamicBodies() {\n    return this._applyImpulsesToDynamicBodies;\n  }\n  setApplyImpulsesToDynamicBodies(A) {\n    this._applyImpulsesToDynamicBodies = A;\n  }\n  characterMass() {\n    return this._characterMass;\n  }\n  setCharacterMass(A) {\n    this._characterMass = A;\n  }\n  offset() {\n    return this.raw.offset();\n  }\n  setOffset(A) {\n    this.raw.setOffset(A);\n  }\n  slideEnabled() {\n    return this.raw.slideEnabled();\n  }\n  setSlideEnabled(A) {\n    this.raw.setSlideEnabled(A);\n  }\n  autostepMaxHeight() {\n    return this.raw.autostepMaxHeight();\n  }\n  autostepMinWidth() {\n    return this.raw.autostepMinWidth();\n  }\n  autostepIncludesDynamicBodies() {\n    return this.raw.autostepIncludesDynamicBodies();\n  }\n  autostepEnabled() {\n    return this.raw.autostepEnabled();\n  }\n  enableAutostep(A, I, g) {\n    this.raw.enableAutostep(A, I, g);\n  }\n  disableAutostep() {\n    return this.raw.disableAutostep();\n  }\n  maxSlopeClimbAngle() {\n    return this.raw.maxSlopeClimbAngle();\n  }\n  setMaxSlopeClimbAngle(A) {\n    this.raw.setMaxSlopeClimbAngle(A);\n  }\n  minSlopeSlideAngle() {\n    return this.raw.minSlopeSlideAngle();\n  }\n  setMinSlopeSlideAngle(A) {\n    this.raw.setMinSlopeSlideAngle(A);\n  }\n  snapToGroundDistance() {\n    return this.raw.snapToGroundDistance();\n  }\n  enableSnapToGround(A) {\n    this.raw.enableSnapToGround(A);\n  }\n  disableSnapToGround() {\n    this.raw.disableSnapToGround();\n  }\n  snapToGroundEnabled() {\n    return this.raw.snapToGroundEnabled();\n  }\n  computeColliderMovement(A, I, g, C, B) {\n    let Q = wA.intoRaw(I);\n    this.raw.computeColliderMovement(this.params.dt, this.bodies.raw, this.colliders.raw, this.queries.raw, A.handle, Q, this._applyImpulsesToDynamicBodies, this._characterMass, g, C, this.colliders.castClosure(B)), Q.free();\n  }\n  computedMovement() {\n    return wA.fromRaw(this.raw.computedMovement());\n  }\n  computedGrounded() {\n    return this.raw.computedGrounded();\n  }\n  numComputedCollisions() {\n    return this.raw.numComputedCollisions();\n  }\n  computedCollision(A, I) {\n    if (this.raw.computedCollision(A, this.rawCharacterCollision)) {\n      let A = this.rawCharacterCollision;\n      return (I = null != I ? I : new dI()).translationDeltaApplied = wA.fromRaw(A.translationDeltaApplied()), I.translationDeltaRemaining = wA.fromRaw(A.translationDeltaRemaining()), I.toi = A.toi(), I.witness1 = wA.fromRaw(A.worldWitness1()), I.witness2 = wA.fromRaw(A.worldWitness2()), I.normal1 = wA.fromRaw(A.worldNormal1()), I.normal2 = wA.fromRaw(A.worldNormal2()), I.collider = this.colliders.get(A.handle()), I;\n    }\n    return null;\n  }\n}\nclass nI {\n  constructor(A, I, g, C) {\n    this.raw = new O(A.handle), this.bodies = I, this.colliders = g, this.queries = C, this._chassis = A;\n  }\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0;\n  }\n  updateVehicle(A, I, g, C) {\n    this.raw.update_vehicle(A, this.bodies.raw, this.colliders.raw, this.queries.raw, I, g, this.colliders.castClosure(C));\n  }\n  currentVehicleSpeed() {\n    return this.raw.current_vehicle_speed();\n  }\n  chassis() {\n    return this._chassis;\n  }\n  get indexUpAxis() {\n    return this.raw.index_up_axis();\n  }\n  set indexUpAxis(A) {\n    this.raw.set_index_up_axis(A);\n  }\n  get indexForwardAxis() {\n    return this.raw.index_forward_axis();\n  }\n  set setIndexForwardAxis(A) {\n    this.raw.set_index_forward_axis(A);\n  }\n  addWheel(A, I, g, C, B) {\n    let Q = wA.intoRaw(A),\n      E = wA.intoRaw(I),\n      i = wA.intoRaw(g);\n    this.raw.add_wheel(Q, E, i, C, B), Q.free(), E.free(), i.free();\n  }\n  numWheels() {\n    return this.raw.num_wheels();\n  }\n  wheelChassisConnectionPointCs(A) {\n    return wA.fromRaw(this.raw.wheel_chassis_connection_point_cs(A));\n  }\n  setWheelChassisConnectionPointCs(A, I) {\n    let g = wA.intoRaw(I);\n    this.raw.set_wheel_chassis_connection_point_cs(A, g), g.free();\n  }\n  wheelSuspensionRestLength(A) {\n    return this.raw.wheel_suspension_rest_length(A);\n  }\n  setWheelSuspensionRestLength(A, I) {\n    this.raw.set_wheel_suspension_rest_length(A, I);\n  }\n  wheelMaxSuspensionTravel(A) {\n    return this.raw.wheel_max_suspension_travel(A);\n  }\n  setWheelMaxSuspensionTravel(A, I) {\n    this.raw.set_wheel_max_suspension_travel(A, I);\n  }\n  wheelRadius(A) {\n    return this.raw.wheel_radius(A);\n  }\n  setWheelRadius(A, I) {\n    this.raw.set_wheel_radius(A, I);\n  }\n  wheelSuspensionStiffness(A) {\n    return this.raw.wheel_suspension_stiffness(A);\n  }\n  setWheelSuspensionStiffness(A, I) {\n    this.raw.set_wheel_suspension_stiffness(A, I);\n  }\n  wheelSuspensionCompression(A) {\n    return this.raw.wheel_suspension_compression(A);\n  }\n  setWheelSuspensionCompression(A, I) {\n    this.raw.set_wheel_suspension_compression(A, I);\n  }\n  wheelSuspensionRelaxation(A) {\n    return this.raw.wheel_suspension_relaxation(A);\n  }\n  setWheelSuspensionRelaxation(A, I) {\n    this.raw.set_wheel_suspension_relaxation(A, I);\n  }\n  wheelMaxSuspensionForce(A) {\n    return this.raw.wheel_max_suspension_force(A);\n  }\n  setWheelMaxSuspensionForce(A, I) {\n    this.raw.set_wheel_max_suspension_force(A, I);\n  }\n  wheelBrake(A) {\n    return this.raw.wheel_brake(A);\n  }\n  setWheelBrake(A, I) {\n    this.raw.set_wheel_brake(A, I);\n  }\n  wheelSteering(A) {\n    return this.raw.wheel_steering(A);\n  }\n  setWheelSteering(A, I) {\n    this.raw.set_wheel_steering(A, I);\n  }\n  wheelEngineForce(A) {\n    return this.raw.wheel_engine_force(A);\n  }\n  setWheelEngineForce(A, I) {\n    this.raw.set_wheel_engine_force(A, I);\n  }\n  wheelDirectionCs(A) {\n    return wA.fromRaw(this.raw.wheel_direction_cs(A));\n  }\n  setWheelDirectionCs(A, I) {\n    let g = wA.intoRaw(I);\n    this.raw.set_wheel_direction_cs(A, g), g.free();\n  }\n  wheelAxleCs(A) {\n    return wA.fromRaw(this.raw.wheel_axle_cs(A));\n  }\n  setWheelAxleCs(A, I) {\n    let g = wA.intoRaw(I);\n    this.raw.set_wheel_axle_cs(A, g), g.free();\n  }\n  wheelFrictionSlip(A) {\n    return this.raw.wheel_friction_slip(A);\n  }\n  setWheelFrictionSlip(A, I) {\n    this.raw.set_wheel_friction_slip(A, I);\n  }\n  wheelSideFrictionStiffness(A) {\n    return this.raw.wheel_side_friction_stiffness(A);\n  }\n  setWheelSideFrictionStiffness(A, I) {\n    this.raw.set_wheel_side_friction_stiffness(A, I);\n  }\n  wheelRotation(A) {\n    return this.raw.wheel_rotation(A);\n  }\n  wheelForwardImpulse(A) {\n    return this.raw.wheel_forward_impulse(A);\n  }\n  wheelSideImpulse(A) {\n    return this.raw.wheel_side_impulse(A);\n  }\n  wheelSuspensionForce(A) {\n    return this.raw.wheel_suspension_force(A);\n  }\n  wheelContactNormal(A) {\n    return wA.fromRaw(this.raw.wheel_contact_normal_ws(A));\n  }\n  wheelContactPoint(A) {\n    return wA.fromRaw(this.raw.wheel_contact_point_ws(A));\n  }\n  wheelSuspensionLength(A) {\n    return this.raw.wheel_suspension_length(A);\n  }\n  wheelHardPoint(A) {\n    return wA.fromRaw(this.raw.wheel_hard_point_ws(A));\n  }\n  wheelIsInContact(A) {\n    return this.raw.wheel_is_in_contact(A);\n  }\n  wheelGroundObject(A) {\n    return this.colliders.get(this.raw.wheel_ground_object(A));\n  }\n}\nclass OI {\n  constructor(A, I, g, C, B, Q, E, i, D, o, G, w, S, k) {\n    this.gravity = A, this.integrationParameters = new eA(I), this.islands = new $A(g), this.broadPhase = new AI(C), this.narrowPhase = new II(B), this.bodies = new pA(Q), this.colliders = new mI(E), this.impulseJoints = new jA(i), this.multibodyJoints = new vA(D), this.ccdSolver = new _A(o), this.queryPipeline = new tI(G), this.physicsPipeline = new LI(w), this.serializationPipeline = new pI(S), this.debugRenderPipeline = new rI(k), this.characterControllers = new Set(), this.vehicleControllers = new Set(), this.impulseJoints.finalizeDeserialization(this.bodies), this.bodies.finalizeDeserialization(this.colliders), this.colliders.finalizeDeserialization(this.bodies);\n  }\n  free() {\n    this.integrationParameters.free(), this.islands.free(), this.broadPhase.free(), this.narrowPhase.free(), this.bodies.free(), this.colliders.free(), this.impulseJoints.free(), this.multibodyJoints.free(), this.ccdSolver.free(), this.queryPipeline.free(), this.physicsPipeline.free(), this.serializationPipeline.free(), this.debugRenderPipeline.free(), this.characterControllers.forEach(A => A.free()), this.vehicleControllers.forEach(A => A.free()), this.integrationParameters = void 0, this.islands = void 0, this.broadPhase = void 0, this.narrowPhase = void 0, this.bodies = void 0, this.colliders = void 0, this.ccdSolver = void 0, this.impulseJoints = void 0, this.multibodyJoints = void 0, this.queryPipeline = void 0, this.physicsPipeline = void 0, this.serializationPipeline = void 0, this.debugRenderPipeline = void 0, this.characterControllers = void 0, this.vehicleControllers = void 0;\n  }\n  static fromRaw(A) {\n    return A ? new OI(wA.fromRaw(A.takeGravity()), A.takeIntegrationParameters(), A.takeIslandManager(), A.takeBroadPhase(), A.takeNarrowPhase(), A.takeBodies(), A.takeColliders(), A.takeImpulseJoints(), A.takeMultibodyJoints()) : null;\n  }\n  takeSnapshot() {\n    return this.serializationPipeline.serializeAll(this.gravity, this.integrationParameters, this.islands, this.broadPhase, this.narrowPhase, this.bodies, this.colliders, this.impulseJoints, this.multibodyJoints);\n  }\n  static restoreSnapshot(A) {\n    return new pI().deserializeAll(A);\n  }\n  debugRender() {\n    return this.debugRenderPipeline.render(this.bodies, this.colliders, this.impulseJoints, this.multibodyJoints, this.narrowPhase), new eI(this.debugRenderPipeline.vertices, this.debugRenderPipeline.colors);\n  }\n  step(A, I) {\n    this.physicsPipeline.step(this.gravity, this.integrationParameters, this.islands, this.broadPhase, this.narrowPhase, this.bodies, this.colliders, this.impulseJoints, this.multibodyJoints, this.ccdSolver, A, I), this.queryPipeline.update(this.bodies, this.colliders);\n  }\n  propagateModifiedBodyPositionsToColliders() {\n    this.bodies.raw.propagateModifiedBodyPositionsToColliders(this.colliders.raw);\n  }\n  updateSceneQueries() {\n    this.propagateModifiedBodyPositionsToColliders(), this.queryPipeline.update(this.bodies, this.colliders);\n  }\n  get timestep() {\n    return this.integrationParameters.dt;\n  }\n  set timestep(A) {\n    this.integrationParameters.dt = A;\n  }\n  get numSolverIterations() {\n    return this.integrationParameters.numSolverIterations;\n  }\n  set numSolverIterations(A) {\n    this.integrationParameters.numSolverIterations = A;\n  }\n  get numAdditionalFrictionIterations() {\n    return this.integrationParameters.numAdditionalFrictionIterations;\n  }\n  set numAdditionalFrictionIterations(A) {\n    this.integrationParameters.numAdditionalFrictionIterations = A;\n  }\n  get numInternalPgsIterations() {\n    return this.integrationParameters.numInternalPgsIterations;\n  }\n  set numInternalPgsIterations(A) {\n    this.integrationParameters.numInternalPgsIterations = A;\n  }\n  switchToStandardPgsSolver() {\n    this.integrationParameters.switchToStandardPgsSolver();\n  }\n  switchToSmallStepsPgsSolver() {\n    this.integrationParameters.switchToSmallStepsPgsSolver();\n  }\n  createRigidBody(A) {\n    return this.bodies.createRigidBody(this.colliders, A);\n  }\n  createCharacterController(A) {\n    let I = new TI(A, this.integrationParameters, this.bodies, this.colliders, this.queryPipeline);\n    return this.characterControllers.add(I), I;\n  }\n  removeCharacterController(A) {\n    this.characterControllers.delete(A), A.free();\n  }\n  createVehicleController(A) {\n    let I = new nI(A, this.bodies, this.colliders, this.queryPipeline);\n    return this.vehicleControllers.add(I), I;\n  }\n  removeVehicleController(A) {\n    this.vehicleControllers.delete(A), A.free();\n  }\n  createCollider(A, I) {\n    let g = I ? I.handle : void 0;\n    return this.colliders.createCollider(this.bodies, A, g);\n  }\n  createImpulseJoint(A, I, g, C) {\n    return this.impulseJoints.createJoint(this.bodies, A, I.handle, g.handle, C);\n  }\n  createMultibodyJoint(A, I, g, C) {\n    return this.multibodyJoints.createJoint(A, I.handle, g.handle, C);\n  }\n  getRigidBody(A) {\n    return this.bodies.get(A);\n  }\n  getCollider(A) {\n    return this.colliders.get(A);\n  }\n  getImpulseJoint(A) {\n    return this.impulseJoints.get(A);\n  }\n  getMultibodyJoint(A) {\n    return this.multibodyJoints.get(A);\n  }\n  removeRigidBody(A) {\n    this.bodies && this.bodies.remove(A.handle, this.islands, this.colliders, this.impulseJoints, this.multibodyJoints);\n  }\n  removeCollider(A, I) {\n    this.colliders && this.colliders.remove(A.handle, this.islands, this.bodies, I);\n  }\n  removeImpulseJoint(A, I) {\n    this.impulseJoints && this.impulseJoints.remove(A.handle, I);\n  }\n  removeMultibodyJoint(A, I) {\n    this.impulseJoints && this.multibodyJoints.remove(A.handle, I);\n  }\n  forEachCollider(A) {\n    this.colliders.forEach(A);\n  }\n  forEachRigidBody(A) {\n    this.bodies.forEach(A);\n  }\n  forEachActiveRigidBody(A) {\n    this.bodies.forEachActiveRigidBody(this.islands, A);\n  }\n  castRay(A, I, g, C, B, Q, E, i) {\n    return this.queryPipeline.castRay(this.bodies, this.colliders, A, I, g, C, B, Q ? Q.handle : null, E ? E.handle : null, this.colliders.castClosure(i));\n  }\n  castRayAndGetNormal(A, I, g, C, B, Q, E, i) {\n    return this.queryPipeline.castRayAndGetNormal(this.bodies, this.colliders, A, I, g, C, B, Q ? Q.handle : null, E ? E.handle : null, this.colliders.castClosure(i));\n  }\n  intersectionsWithRay(A, I, g, C, B, Q, E, i, D) {\n    this.queryPipeline.intersectionsWithRay(this.bodies, this.colliders, A, I, g, C, B, Q, E ? E.handle : null, i ? i.handle : null, this.colliders.castClosure(D));\n  }\n  intersectionWithShape(A, I, g, C, B, Q, E, i) {\n    let D = this.queryPipeline.intersectionWithShape(this.bodies, this.colliders, A, I, g, C, B, Q ? Q.handle : null, E ? E.handle : null, this.colliders.castClosure(i));\n    return null != D ? this.colliders.get(D) : null;\n  }\n  projectPoint(A, I, g, C, B, Q, E) {\n    return this.queryPipeline.projectPoint(this.bodies, this.colliders, A, I, g, C, B ? B.handle : null, Q ? Q.handle : null, this.colliders.castClosure(E));\n  }\n  projectPointAndGetFeature(A, I, g, C, B, Q) {\n    return this.queryPipeline.projectPointAndGetFeature(this.bodies, this.colliders, A, I, g, C ? C.handle : null, B ? B.handle : null, this.colliders.castClosure(Q));\n  }\n  intersectionsWithPoint(A, I, g, C, B, Q, E) {\n    this.queryPipeline.intersectionsWithPoint(this.bodies, this.colliders, A, this.colliders.castClosure(I), g, C, B ? B.handle : null, Q ? Q.handle : null, this.colliders.castClosure(E));\n  }\n  castShape(A, I, g, C, B, Q, E, i, D, o, G) {\n    return this.queryPipeline.castShape(this.bodies, this.colliders, A, I, g, C, B, Q, E, i, D ? D.handle : null, o ? o.handle : null, this.colliders.castClosure(G));\n  }\n  intersectionsWithShape(A, I, g, C, B, Q, E, i, D) {\n    this.queryPipeline.intersectionsWithShape(this.bodies, this.colliders, A, I, g, this.colliders.castClosure(C), B, Q, E ? E.handle : null, i ? i.handle : null, this.colliders.castClosure(D));\n  }\n  collidersWithAabbIntersectingAabb(A, I, g) {\n    this.queryPipeline.collidersWithAabbIntersectingAabb(A, I, this.colliders.castClosure(g));\n  }\n  contactPairsWith(A, I) {\n    this.narrowPhase.contactPairsWith(A.handle, this.colliders.castClosure(I));\n  }\n  intersectionPairsWith(A, I) {\n    this.narrowPhase.intersectionPairsWith(A.handle, this.colliders.castClosure(I));\n  }\n  contactPair(A, I, g) {\n    this.narrowPhase.contactPair(A.handle, I.handle, g);\n  }\n  intersectionPair(A, I) {\n    return this.narrowPhase.intersectionPair(A.handle, I.handle);\n  }\n}\n!function (A) {\n  A[A.NONE = 0] = \"NONE\", A[A.COLLISION_EVENTS = 1] = \"COLLISION_EVENTS\", A[A.CONTACT_FORCE_EVENTS = 2] = \"CONTACT_FORCE_EVENTS\";\n}(RA || (RA = {}));\nclass ZI {\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0;\n  }\n  collider1() {\n    return this.raw.collider1();\n  }\n  collider2() {\n    return this.raw.collider2();\n  }\n  totalForce() {\n    return wA.fromRaw(this.raw.total_force());\n  }\n  totalForceMagnitude() {\n    return this.raw.total_force_magnitude();\n  }\n  maxForceDirection() {\n    return wA.fromRaw(this.raw.max_force_direction());\n  }\n  maxForceMagnitude() {\n    return this.raw.max_force_magnitude();\n  }\n}\nclass bI {\n  constructor(A, I) {\n    this.raw = I || new Z(A);\n  }\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0;\n  }\n  drainCollisionEvents(A) {\n    this.raw.drainCollisionEvents(A);\n  }\n  drainContactForceEvents(A) {\n    let I = new ZI();\n    this.raw.drainContactForceEvents(g => {\n      I.raw = g, A(I), I.free();\n    });\n  }\n  clear() {\n    this.raw.clear();\n  }\n}\n!function (A) {\n  A[A.NONE = 0] = \"NONE\", A[A.FILTER_CONTACT_PAIRS = 1] = \"FILTER_CONTACT_PAIRS\", A[A.FILTER_INTERSECTION_PAIRS = 2] = \"FILTER_INTERSECTION_PAIRS\";\n}(sA || (sA = {})), function (A) {\n  A[A.EMPTY = 0] = \"EMPTY\", A[A.COMPUTE_IMPULSE = 1] = \"COMPUTE_IMPULSE\";\n}(cA || (cA = {})), function (A) {\n  A[A.DYNAMIC_DYNAMIC = 1] = \"DYNAMIC_DYNAMIC\", A[A.DYNAMIC_KINEMATIC = 12] = \"DYNAMIC_KINEMATIC\", A[A.DYNAMIC_FIXED = 2] = \"DYNAMIC_FIXED\", A[A.KINEMATIC_KINEMATIC = 52224] = \"KINEMATIC_KINEMATIC\", A[A.KINEMATIC_FIXED = 8704] = \"KINEMATIC_FIXED\", A[A.FIXED_FIXED = 32] = \"FIXED_FIXED\", A[A.DEFAULT = 15] = \"DEFAULT\", A[A.ALL = 60943] = \"ALL\";\n}(YA || (YA = {}));\nclass WI {\n  constructor(A, I, g, C) {\n    this.colliderSet = A, this.handle = I, this._parent = g, this._shape = C;\n  }\n  finalizeDeserialization(A) {\n    null != this.handle && (this._parent = A.get(this.colliderSet.raw.coParent(this.handle)));\n  }\n  ensureShapeIsCached() {\n    this._shape || (this._shape = SI.fromRaw(this.colliderSet.raw, this.handle));\n  }\n  get shape() {\n    return this.ensureShapeIsCached(), this._shape;\n  }\n  isValid() {\n    return this.colliderSet.raw.contains(this.handle);\n  }\n  translation() {\n    return wA.fromRaw(this.colliderSet.raw.coTranslation(this.handle));\n  }\n  rotation() {\n    return kA.fromRaw(this.colliderSet.raw.coRotation(this.handle));\n  }\n  isSensor() {\n    return this.colliderSet.raw.coIsSensor(this.handle);\n  }\n  setSensor(A) {\n    this.colliderSet.raw.coSetSensor(this.handle, A);\n  }\n  setShape(A) {\n    let I = A.intoRaw();\n    this.colliderSet.raw.coSetShape(this.handle, I), I.free(), this._shape = A;\n  }\n  setEnabled(A) {\n    this.colliderSet.raw.coSetEnabled(this.handle, A);\n  }\n  isEnabled() {\n    return this.colliderSet.raw.coIsEnabled(this.handle);\n  }\n  setRestitution(A) {\n    this.colliderSet.raw.coSetRestitution(this.handle, A);\n  }\n  setFriction(A) {\n    this.colliderSet.raw.coSetFriction(this.handle, A);\n  }\n  frictionCombineRule() {\n    return this.colliderSet.raw.coFrictionCombineRule(this.handle);\n  }\n  setFrictionCombineRule(A) {\n    this.colliderSet.raw.coSetFrictionCombineRule(this.handle, A);\n  }\n  restitutionCombineRule() {\n    return this.colliderSet.raw.coRestitutionCombineRule(this.handle);\n  }\n  setRestitutionCombineRule(A) {\n    this.colliderSet.raw.coSetRestitutionCombineRule(this.handle, A);\n  }\n  setCollisionGroups(A) {\n    this.colliderSet.raw.coSetCollisionGroups(this.handle, A);\n  }\n  setSolverGroups(A) {\n    this.colliderSet.raw.coSetSolverGroups(this.handle, A);\n  }\n  activeHooks() {\n    return this.colliderSet.raw.coActiveHooks(this.handle);\n  }\n  setActiveHooks(A) {\n    this.colliderSet.raw.coSetActiveHooks(this.handle, A);\n  }\n  activeEvents() {\n    return this.colliderSet.raw.coActiveEvents(this.handle);\n  }\n  setActiveEvents(A) {\n    this.colliderSet.raw.coSetActiveEvents(this.handle, A);\n  }\n  activeCollisionTypes() {\n    return this.colliderSet.raw.coActiveCollisionTypes(this.handle);\n  }\n  setContactForceEventThreshold(A) {\n    return this.colliderSet.raw.coSetContactForceEventThreshold(this.handle, A);\n  }\n  contactForceEventThreshold() {\n    return this.colliderSet.raw.coContactForceEventThreshold(this.handle);\n  }\n  setActiveCollisionTypes(A) {\n    this.colliderSet.raw.coSetActiveCollisionTypes(this.handle, A);\n  }\n  setDensity(A) {\n    this.colliderSet.raw.coSetDensity(this.handle, A);\n  }\n  setMass(A) {\n    this.colliderSet.raw.coSetMass(this.handle, A);\n  }\n  setMassProperties(A, I, g, C) {\n    let B = wA.intoRaw(I),\n      Q = wA.intoRaw(g),\n      E = kA.intoRaw(C);\n    this.colliderSet.raw.coSetMassProperties(this.handle, A, B, Q, E), B.free(), Q.free(), E.free();\n  }\n  setTranslation(A) {\n    this.colliderSet.raw.coSetTranslation(this.handle, A.x, A.y, A.z);\n  }\n  setTranslationWrtParent(A) {\n    this.colliderSet.raw.coSetTranslationWrtParent(this.handle, A.x, A.y, A.z);\n  }\n  setRotation(A) {\n    this.colliderSet.raw.coSetRotation(this.handle, A.x, A.y, A.z, A.w);\n  }\n  setRotationWrtParent(A) {\n    this.colliderSet.raw.coSetRotationWrtParent(this.handle, A.x, A.y, A.z, A.w);\n  }\n  shapeType() {\n    return this.colliderSet.raw.coShapeType(this.handle);\n  }\n  halfExtents() {\n    return wA.fromRaw(this.colliderSet.raw.coHalfExtents(this.handle));\n  }\n  setHalfExtents(A) {\n    const I = wA.intoRaw(A);\n    this.colliderSet.raw.coSetHalfExtents(this.handle, I);\n  }\n  radius() {\n    return this.colliderSet.raw.coRadius(this.handle);\n  }\n  setRadius(A) {\n    this.colliderSet.raw.coSetRadius(this.handle, A);\n  }\n  roundRadius() {\n    return this.colliderSet.raw.coRoundRadius(this.handle);\n  }\n  setRoundRadius(A) {\n    this.colliderSet.raw.coSetRoundRadius(this.handle, A);\n  }\n  halfHeight() {\n    return this.colliderSet.raw.coHalfHeight(this.handle);\n  }\n  setHalfHeight(A) {\n    this.colliderSet.raw.coSetHalfHeight(this.handle, A);\n  }\n  vertices() {\n    return this.colliderSet.raw.coVertices(this.handle);\n  }\n  indices() {\n    return this.colliderSet.raw.coIndices(this.handle);\n  }\n  heightfieldHeights() {\n    return this.colliderSet.raw.coHeightfieldHeights(this.handle);\n  }\n  heightfieldScale() {\n    let A = this.colliderSet.raw.coHeightfieldScale(this.handle);\n    return wA.fromRaw(A);\n  }\n  heightfieldNRows() {\n    return this.colliderSet.raw.coHeightfieldNRows(this.handle);\n  }\n  heightfieldNCols() {\n    return this.colliderSet.raw.coHeightfieldNCols(this.handle);\n  }\n  parent() {\n    return this._parent;\n  }\n  friction() {\n    return this.colliderSet.raw.coFriction(this.handle);\n  }\n  restitution() {\n    return this.colliderSet.raw.coRestitution(this.handle);\n  }\n  density() {\n    return this.colliderSet.raw.coDensity(this.handle);\n  }\n  mass() {\n    return this.colliderSet.raw.coMass(this.handle);\n  }\n  volume() {\n    return this.colliderSet.raw.coVolume(this.handle);\n  }\n  collisionGroups() {\n    return this.colliderSet.raw.coCollisionGroups(this.handle);\n  }\n  solverGroups() {\n    return this.colliderSet.raw.coSolverGroups(this.handle);\n  }\n  containsPoint(A) {\n    let I = wA.intoRaw(A),\n      g = this.colliderSet.raw.coContainsPoint(this.handle, I);\n    return I.free(), g;\n  }\n  projectPoint(A, I) {\n    let g = wA.intoRaw(A),\n      C = BI.fromRaw(this.colliderSet.raw.coProjectPoint(this.handle, g, I));\n    return g.free(), C;\n  }\n  intersectsRay(A, I) {\n    let g = wA.intoRaw(A.origin),\n      C = wA.intoRaw(A.dir),\n      B = this.colliderSet.raw.coIntersectsRay(this.handle, g, C, I);\n    return g.free(), C.free(), B;\n  }\n  castShape(A, I, g, C, B, Q, E) {\n    let i = wA.intoRaw(A),\n      D = wA.intoRaw(g),\n      o = kA.intoRaw(C),\n      G = wA.intoRaw(B),\n      w = I.intoRaw(),\n      S = GI.fromRaw(this.colliderSet, this.colliderSet.raw.coCastShape(this.handle, i, w, D, o, G, Q, E));\n    return i.free(), D.free(), o.free(), G.free(), w.free(), S;\n  }\n  castCollider(A, I, g, C, B) {\n    let Q = wA.intoRaw(A),\n      E = wA.intoRaw(g),\n      i = wI.fromRaw(this.colliderSet, this.colliderSet.raw.coCastCollider(this.handle, Q, I.handle, E, C, B));\n    return Q.free(), E.free(), i;\n  }\n  intersectsShape(A, I, g) {\n    let C = wA.intoRaw(I),\n      B = kA.intoRaw(g),\n      Q = A.intoRaw(),\n      E = this.colliderSet.raw.coIntersectsShape(this.handle, Q, C, B);\n    return C.free(), B.free(), Q.free(), E;\n  }\n  contactShape(A, I, g, C) {\n    let B = wA.intoRaw(I),\n      Q = kA.intoRaw(g),\n      E = A.intoRaw(),\n      i = CI.fromRaw(this.colliderSet.raw.coContactShape(this.handle, E, B, Q, C));\n    return B.free(), Q.free(), E.free(), i;\n  }\n  contactCollider(A, I) {\n    return CI.fromRaw(this.colliderSet.raw.coContactCollider(this.handle, A.handle, I));\n  }\n  castRay(A, I, g) {\n    let C = wA.intoRaw(A.origin),\n      B = wA.intoRaw(A.dir),\n      Q = this.colliderSet.raw.coCastRay(this.handle, C, B, I, g);\n    return C.free(), B.free(), Q;\n  }\n  castRayAndGetNormal(A, I, g) {\n    let C = wA.intoRaw(A.origin),\n      B = wA.intoRaw(A.dir),\n      Q = iI.fromRaw(this.colliderSet.raw.coCastRayAndGetNormal(this.handle, C, B, I, g));\n    return C.free(), B.free(), Q;\n  }\n}\n!function (A) {\n  A[A.Density = 0] = \"Density\", A[A.Mass = 1] = \"Mass\", A[A.MassProps = 2] = \"MassProps\";\n}(HA || (HA = {}));\nclass xI {\n  constructor(A) {\n    this.enabled = !0, this.shape = A, this.massPropsMode = HA.Density, this.density = 1, this.friction = .5, this.restitution = 0, this.rotation = kA.identity(), this.translation = wA.zeros(), this.isSensor = !1, this.collisionGroups = 4294967295, this.solverGroups = 4294967295, this.frictionCombineRule = yA.Average, this.restitutionCombineRule = yA.Average, this.activeCollisionTypes = YA.DEFAULT, this.activeEvents = RA.NONE, this.activeHooks = sA.NONE, this.mass = 0, this.centerOfMass = wA.zeros(), this.contactForceEventThreshold = 0, this.principalAngularInertia = wA.zeros(), this.angularInertiaLocalFrame = kA.identity();\n  }\n  static ball(A) {\n    const I = new kI(A);\n    return new xI(I);\n  }\n  static capsule(A, I) {\n    const g = new UI(A, I);\n    return new xI(g);\n  }\n  static segment(A, I) {\n    const g = new JI(A, I);\n    return new xI(g);\n  }\n  static triangle(A, I, g) {\n    const C = new NI(A, I, g);\n    return new xI(C);\n  }\n  static roundTriangle(A, I, g, C) {\n    const B = new yI(A, I, g, C);\n    return new xI(B);\n  }\n  static polyline(A, I) {\n    const g = new MI(A, I);\n    return new xI(g);\n  }\n  static trimesh(A, I) {\n    const g = new FI(A, I);\n    return new xI(g);\n  }\n  static cuboid(A, I, g) {\n    const C = new hI(A, I, g);\n    return new xI(C);\n  }\n  static roundCuboid(A, I, g, C) {\n    const B = new KI(A, I, g, C);\n    return new xI(B);\n  }\n  static heightfield(A, I, g, C) {\n    const B = new sI(A, I, g, C);\n    return new xI(B);\n  }\n  static cylinder(A, I) {\n    const g = new cI(A, I);\n    return new xI(g);\n  }\n  static roundCylinder(A, I, g) {\n    const C = new YI(A, I, g);\n    return new xI(C);\n  }\n  static cone(A, I) {\n    const g = new HI(A, I);\n    return new xI(g);\n  }\n  static roundCone(A, I, g) {\n    const C = new lI(A, I, g);\n    return new xI(C);\n  }\n  static convexHull(A) {\n    const I = new qI(A, null);\n    return new xI(I);\n  }\n  static convexMesh(A, I) {\n    const g = new qI(A, I);\n    return new xI(g);\n  }\n  static roundConvexHull(A, I) {\n    const g = new RI(A, null, I);\n    return new xI(g);\n  }\n  static roundConvexMesh(A, I, g) {\n    const C = new RI(A, I, g);\n    return new xI(C);\n  }\n  setTranslation(A, I, g) {\n    if (\"number\" != typeof A || \"number\" != typeof I || \"number\" != typeof g) throw TypeError(\"The translation components must be numbers.\");\n    return this.translation = {\n      x: A,\n      y: I,\n      z: g\n    }, this;\n  }\n  setRotation(A) {\n    return kA.copy(this.rotation, A), this;\n  }\n  setSensor(A) {\n    return this.isSensor = A, this;\n  }\n  setEnabled(A) {\n    return this.enabled = A, this;\n  }\n  setDensity(A) {\n    return this.massPropsMode = HA.Density, this.density = A, this;\n  }\n  setMass(A) {\n    return this.massPropsMode = HA.Mass, this.mass = A, this;\n  }\n  setMassProperties(A, I, g, C) {\n    return this.massPropsMode = HA.MassProps, this.mass = A, wA.copy(this.centerOfMass, I), wA.copy(this.principalAngularInertia, g), kA.copy(this.angularInertiaLocalFrame, C), this;\n  }\n  setRestitution(A) {\n    return this.restitution = A, this;\n  }\n  setFriction(A) {\n    return this.friction = A, this;\n  }\n  setFrictionCombineRule(A) {\n    return this.frictionCombineRule = A, this;\n  }\n  setRestitutionCombineRule(A) {\n    return this.restitutionCombineRule = A, this;\n  }\n  setCollisionGroups(A) {\n    return this.collisionGroups = A, this;\n  }\n  setSolverGroups(A) {\n    return this.solverGroups = A, this;\n  }\n  setActiveHooks(A) {\n    return this.activeHooks = A, this;\n  }\n  setActiveEvents(A) {\n    return this.activeEvents = A, this;\n  }\n  setActiveCollisionTypes(A) {\n    return this.activeCollisionTypes = A, this;\n  }\n  setContactForceEventThreshold(A) {\n    return this.contactForceEventThreshold = A, this;\n  }\n}\nclass mI {\n  constructor(A) {\n    this.raw = A || new p(), this.map = new tA(), A && A.forEachColliderHandle(A => {\n      this.map.set(A, new WI(this, A, null));\n    });\n  }\n  free() {\n    this.raw && this.raw.free(), this.raw = void 0, this.map && this.map.clear(), this.map = void 0;\n  }\n  castClosure(A) {\n    return I => A ? A(this.get(I)) : void 0;\n  }\n  finalizeDeserialization(A) {\n    this.map.forEach(I => I.finalizeDeserialization(A));\n  }\n  createCollider(A, I, g) {\n    let C = null != g && null != g;\n    if (C && isNaN(g)) throw Error(\"Cannot create a collider with a parent rigid-body handle that is not a number.\");\n    let B = I.shape.intoRaw(),\n      Q = wA.intoRaw(I.translation),\n      E = kA.intoRaw(I.rotation),\n      i = wA.intoRaw(I.centerOfMass),\n      D = wA.intoRaw(I.principalAngularInertia),\n      o = kA.intoRaw(I.angularInertiaLocalFrame),\n      G = this.raw.createCollider(I.enabled, B, Q, E, I.massPropsMode, I.mass, i, D, o, I.density, I.friction, I.restitution, I.frictionCombineRule, I.restitutionCombineRule, I.isSensor, I.collisionGroups, I.solverGroups, I.activeCollisionTypes, I.activeHooks, I.activeEvents, I.contactForceEventThreshold, C, C ? g : 0, A.raw);\n    B.free(), Q.free(), E.free(), i.free(), D.free(), o.free();\n    let w = C ? A.get(g) : null,\n      S = new WI(this, G, w, I.shape);\n    return this.map.set(G, S), S;\n  }\n  remove(A, I, g, C) {\n    this.raw.remove(A, I.raw, g.raw, C), this.unmap(A);\n  }\n  unmap(A) {\n    this.map.delete(A);\n  }\n  get(A) {\n    return this.map.get(A);\n  }\n  len() {\n    return this.map.len();\n  }\n  contains(A) {\n    return null != this.get(A);\n  }\n  forEach(A) {\n    this.map.forEach(A);\n  }\n  getAll() {\n    return this.map.getAll();\n  }\n}\nfunction jI(A, I, g, C) {\n  return new (g || (g = Promise))(function (B, Q) {\n    function E(A) {\n      try {\n        D(C.next(A));\n      } catch (A) {\n        Q(A);\n      }\n    }\n    function i(A) {\n      try {\n        D(C.throw(A));\n      } catch (A) {\n        Q(A);\n      }\n    }\n    function D(A) {\n      var I;\n      A.done ? B(A.value) : (I = A.value, I instanceof g ? I : new g(function (A) {\n        A(I);\n      })).then(E, i);\n    }\n    D((C = C.apply(A, I || [])).next());\n  });\n}\nfor (var fI = {\n    byteLength: function (A) {\n      var I = _I(A),\n        g = I[0],\n        C = I[1];\n      return 3 * (g + C) / 4 - C;\n    },\n    toByteArray: function (A) {\n      var I,\n        g,\n        C = _I(A),\n        B = C[0],\n        Q = C[1],\n        E = new PI(function (A, I, g) {\n          return 3 * (I + g) / 4 - g;\n        }(0, B, Q)),\n        i = 0,\n        D = Q > 0 ? B - 4 : B;\n      for (g = 0; g < D; g += 4) I = VI[A.charCodeAt(g)] << 18 | VI[A.charCodeAt(g + 1)] << 12 | VI[A.charCodeAt(g + 2)] << 6 | VI[A.charCodeAt(g + 3)], E[i++] = I >> 16 & 255, E[i++] = I >> 8 & 255, E[i++] = 255 & I;\n      2 === Q && (I = VI[A.charCodeAt(g)] << 2 | VI[A.charCodeAt(g + 1)] >> 4, E[i++] = 255 & I);\n      1 === Q && (I = VI[A.charCodeAt(g)] << 10 | VI[A.charCodeAt(g + 1)] << 4 | VI[A.charCodeAt(g + 2)] >> 2, E[i++] = I >> 8 & 255, E[i++] = 255 & I);\n      return E;\n    },\n    fromByteArray: function (A) {\n      for (var I, g = A.length, C = g % 3, B = [], Q = 16383, E = 0, i = g - C; E < i; E += Q) B.push($I(A, E, E + Q > i ? i : E + Q));\n      1 === C ? (I = A[g - 1], B.push(XI[I >> 2] + XI[I << 4 & 63] + \"==\")) : 2 === C && (I = (A[g - 2] << 8) + A[g - 1], B.push(XI[I >> 10] + XI[I >> 4 & 63] + XI[I << 2 & 63] + \"=\"));\n      return B.join(\"\");\n    }\n  }, XI = [], VI = [], PI = \"undefined\" != typeof Uint8Array ? Uint8Array : Array, uI = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\", zI = 0, vI = uI.length; zI < vI; ++zI) XI[zI] = uI[zI], VI[uI.charCodeAt(zI)] = zI;\nfunction _I(A) {\n  var I = A.length;\n  if (I % 4 > 0) throw new Error(\"Invalid string. Length must be a multiple of 4\");\n  var g = A.indexOf(\"=\");\n  return -1 === g && (g = I), [g, g === I ? 0 : 4 - g % 4];\n}\nfunction $I(A, I, g) {\n  for (var C, B, Q = [], E = I; E < g; E += 3) C = (A[E] << 16 & 16711680) + (A[E + 1] << 8 & 65280) + (255 & A[E + 2]), Q.push(XI[(B = C) >> 18 & 63] + XI[B >> 12 & 63] + XI[B >> 6 & 63] + XI[63 & B]);\n  return Q.join(\"\");\n}\nfunction Ag() {\n  return jI(this, void 0, void 0, function* () {\n    yield oA(fI.toByteArray(\"\").buffer);\n  });\n}\nfunction Ig() {\n  return function () {\n    let I, g;\n    try {\n      const Q = A.__wbindgen_add_to_stack_pointer(-16);\n      A.version(Q);\n      var C = G()[Q / 4 + 0],\n        B = G()[Q / 4 + 1];\n      return I = C, g = B, k(C, B);\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16), A.__wbindgen_free(I, g, 1);\n    }\n  }();\n}\nVI[\"-\".charCodeAt(0)] = 62, VI[\"_\".charCodeAt(0)] = 63;\nvar gg = Object.freeze({\n  __proto__: null,\n  version: Ig,\n  Vector3: GA,\n  VectorOps: wA,\n  Quaternion: SA,\n  RotationOps: kA,\n  SdpMatrix3: aA,\n  SdpMatrix3Ops: hA,\n  get RigidBodyType() {\n    return KA;\n  },\n  RigidBody: lA,\n  RigidBodyDesc: LA,\n  RigidBodySet: pA,\n  IntegrationParameters: eA,\n  get JointType() {\n    return UA;\n  },\n  get MotorModel() {\n    return JA;\n  },\n  get JointAxesMask() {\n    return NA;\n  },\n  ImpulseJoint: rA,\n  UnitImpulseJoint: dA,\n  FixedImpulseJoint: TA,\n  RopeImpulseJoint: nA,\n  SpringImpulseJoint: OA,\n  PrismaticImpulseJoint: ZA,\n  RevoluteImpulseJoint: bA,\n  GenericImpulseJoint: WA,\n  SphericalImpulseJoint: xA,\n  JointData: mA,\n  ImpulseJointSet: jA,\n  MultibodyJoint: fA,\n  UnitMultibodyJoint: XA,\n  FixedMultibodyJoint: VA,\n  PrismaticMultibodyJoint: PA,\n  RevoluteMultibodyJoint: uA,\n  SphericalMultibodyJoint: zA,\n  MultibodyJointSet: vA,\n  get CoefficientCombineRule() {\n    return yA;\n  },\n  CCDSolver: _A,\n  IslandManager: $A,\n  BroadPhase: AI,\n  NarrowPhase: II,\n  TempContactManifold: gI,\n  Shape: SI,\n  get ShapeType() {\n    return FA;\n  },\n  Ball: kI,\n  HalfSpace: aI,\n  Cuboid: hI,\n  RoundCuboid: KI,\n  Capsule: UI,\n  Segment: JI,\n  Triangle: NI,\n  RoundTriangle: yI,\n  Polyline: MI,\n  TriMesh: FI,\n  ConvexPolyhedron: qI,\n  RoundConvexPolyhedron: RI,\n  Heightfield: sI,\n  Cylinder: cI,\n  RoundCylinder: YI,\n  Cone: HI,\n  RoundCone: lI,\n  get ActiveCollisionTypes() {\n    return YA;\n  },\n  Collider: WI,\n  get MassPropsMode() {\n    return HA;\n  },\n  ColliderDesc: xI,\n  ColliderSet: mI,\n  get FeatureType() {\n    return MA;\n  },\n  Ray: EI,\n  RayIntersection: iI,\n  RayColliderIntersection: DI,\n  RayColliderToi: oI,\n  PointProjection: BI,\n  PointColliderProjection: QI,\n  ShapeTOI: GI,\n  ShapeColliderTOI: wI,\n  ShapeContact: CI,\n  World: OI,\n  PhysicsPipeline: LI,\n  SerializationPipeline: pI,\n  get ActiveEvents() {\n    return RA;\n  },\n  TempContactForceEvent: ZI,\n  EventQueue: bI,\n  get ActiveHooks() {\n    return sA;\n  },\n  get SolverFlags() {\n    return cA;\n  },\n  DebugRenderBuffers: eI,\n  DebugRenderPipeline: rI,\n  get QueryFilterFlags() {\n    return qA;\n  },\n  QueryPipeline: tI,\n  init: Ag,\n  CharacterCollision: dI,\n  KinematicCharacterController: TI,\n  DynamicRayCastVehicleController: nI\n});\nexport { YA as ActiveCollisionTypes, RA as ActiveEvents, sA as ActiveHooks, kI as Ball, AI as BroadPhase, _A as CCDSolver, UI as Capsule, dI as CharacterCollision, yA as CoefficientCombineRule, WI as Collider, xI as ColliderDesc, mI as ColliderSet, HI as Cone, qI as ConvexPolyhedron, hI as Cuboid, cI as Cylinder, eI as DebugRenderBuffers, rI as DebugRenderPipeline, nI as DynamicRayCastVehicleController, bI as EventQueue, MA as FeatureType, TA as FixedImpulseJoint, VA as FixedMultibodyJoint, WA as GenericImpulseJoint, aI as HalfSpace, sI as Heightfield, rA as ImpulseJoint, jA as ImpulseJointSet, eA as IntegrationParameters, $A as IslandManager, NA as JointAxesMask, mA as JointData, UA as JointType, TI as KinematicCharacterController, HA as MassPropsMode, JA as MotorModel, fA as MultibodyJoint, vA as MultibodyJointSet, II as NarrowPhase, LI as PhysicsPipeline, QI as PointColliderProjection, BI as PointProjection, MI as Polyline, ZA as PrismaticImpulseJoint, PA as PrismaticMultibodyJoint, SA as Quaternion, qA as QueryFilterFlags, tI as QueryPipeline, EI as Ray, DI as RayColliderIntersection, oI as RayColliderToi, iI as RayIntersection, bA as RevoluteImpulseJoint, uA as RevoluteMultibodyJoint, lA as RigidBody, LA as RigidBodyDesc, pA as RigidBodySet, KA as RigidBodyType, nA as RopeImpulseJoint, kA as RotationOps, lI as RoundCone, RI as RoundConvexPolyhedron, KI as RoundCuboid, YI as RoundCylinder, yI as RoundTriangle, aA as SdpMatrix3, hA as SdpMatrix3Ops, JI as Segment, pI as SerializationPipeline, SI as Shape, wI as ShapeColliderTOI, CI as ShapeContact, GI as ShapeTOI, FA as ShapeType, cA as SolverFlags, xA as SphericalImpulseJoint, zA as SphericalMultibodyJoint, OA as SpringImpulseJoint, ZI as TempContactForceEvent, gI as TempContactManifold, FI as TriMesh, NI as Triangle, dA as UnitImpulseJoint, XA as UnitMultibodyJoint, GA as Vector3, wA as VectorOps, OI as World, gg as default, Ag as init, Ig as version };","map":{"version":3,"names":["A","I","Array","fill","push","g","length","C","B","Q","E","i","D","byteLength","Float64Array","memory","buffer","o","G","Int32Array","w","TextDecoder","ignoreBOM","fatal","decode","Error","S","k","Uint8Array","subarray","a","name","ptr","h","K","Float32Array","U","J","N","y","M","Uint32Array","F","q","set","R","s","apply","__wbindgen_exn_store","Object","freeze","Dynamic","Fixed","KinematicPositionBased","KinematicVelocityBased","Vertex","Edge","Face","Unknown","AccelerationBased","ForceBased","c","Ball","Cuboid","Capsule","Segment","Polyline","Triangle","TriMesh","HeightField","Compound","ConvexPolyhedron","Cylinder","Cone","RoundCuboid","RoundTriangle","RoundCylinder","RoundCone","RoundConvexPolyhedron","HalfSpace","Y","X","Z","AngX","AngY","AngZ","H","Revolute","Prismatic","Rope","Spring","Spherical","Generic","l","__wrap","create","prototype","__wbg_ptr","__destroy_into_raw","free","__wbg_rawbroadphase_free","constructor","rawbroadphase_new","L","__wbg_rawccdsolver_free","rawccdsolver_new","t","__wbg_rawcharactercollision_free","rawcharactercollision_new","handle","rawcharactercollision_handle","translationDeltaApplied","rawcharactercollision_translationDeltaApplied","DA","translationDeltaRemaining","rawcharactercollision_translationDeltaRemaining","toi","rawcharactercollision_toi","worldWitness1","rawcharactercollision_worldWitness1","worldWitness2","rawcharactercollision_worldWitness2","worldNormal1","rawcharactercollision_worldNormal1","worldNormal2","rawcharactercollision_worldNormal2","p","__wbg_rawcolliderset_free","coTranslation","rawcolliderset_coTranslation","coRotation","rawcolliderset_coRotation","IA","coSetTranslation","rawcolliderset_coSetTranslation","coSetTranslationWrtParent","rawcolliderset_coSetTranslationWrtParent","coSetRotation","rawcolliderset_coSetRotation","coSetRotationWrtParent","rawcolliderset_coSetRotationWrtParent","coIsSensor","rawcolliderset_coIsSensor","coShapeType","rawcolliderset_coShapeType","coHalfspaceNormal","rawcolliderset_coHalfspaceNormal","coHalfExtents","rawcolliderset_coHalfExtents","coSetHalfExtents","rawcolliderset_coSetHalfExtents","coRadius","__wbindgen_add_to_stack_pointer","rawcolliderset_coRadius","coSetRadius","rawcolliderset_coSetRadius","coHalfHeight","rawcolliderset_coHalfHeight","coSetHalfHeight","rawcolliderset_coSetHalfHeight","coRoundRadius","rawcolliderset_coRoundRadius","coSetRoundRadius","rawcolliderset_coSetRoundRadius","coVertices","rawcolliderset_coVertices","slice","__wbindgen_free","coIndices","rawcolliderset_coIndices","coHeightfieldHeights","rawcolliderset_coHeightfieldHeights","coHeightfieldScale","rawcolliderset_coHeightfieldScale","coHeightfieldNRows","rawcolliderset_coHeightfieldNRows","coHeightfieldNCols","rawcolliderset_coHeightfieldNCols","coParent","rawcolliderset_coParent","coSetEnabled","rawcolliderset_coSetEnabled","coIsEnabled","rawcolliderset_coIsEnabled","coFriction","rawcolliderset_coFriction","coRestitution","rawcolliderset_coRestitution","coDensity","rawcolliderset_coDensity","coMass","rawcolliderset_coMass","coVolume","rawcolliderset_coVolume","coCollisionGroups","rawcolliderset_coCollisionGroups","coSolverGroups","rawcolliderset_coSolverGroups","coActiveHooks","rawcolliderset_coActiveHooks","coActiveCollisionTypes","rawcolliderset_coActiveCollisionTypes","coActiveEvents","rawcolliderset_coActiveEvents","coContactForceEventThreshold","rawcolliderset_coContactForceEventThreshold","coContainsPoint","rawcolliderset_coContainsPoint","coCastShape","BA","rawcolliderset_coCastShape","iA","coCastCollider","rawcolliderset_coCastCollider","QA","coIntersectsShape","rawcolliderset_coIntersectsShape","coContactShape","rawcolliderset_coContactShape","EA","coContactCollider","rawcolliderset_coContactCollider","coProjectPoint","rawcolliderset_coProjectPoint","u","coIntersectsRay","rawcolliderset_coIntersectsRay","coCastRay","rawcolliderset_coCastRay","coCastRayAndGetNormal","rawcolliderset_coCastRayAndGetNormal","$","coSetSensor","rawcolliderset_coSetSensor","coSetRestitution","rawcolliderset_coSetRestitution","coSetFriction","rawcolliderset_coSetFriction","coFrictionCombineRule","rawcolliderset_coFrictionCombineRule","coSetFrictionCombineRule","rawcolliderset_coSetFrictionCombineRule","coRestitutionCombineRule","rawcolliderset_coRestitutionCombineRule","coSetRestitutionCombineRule","rawcolliderset_coSetRestitutionCombineRule","coSetCollisionGroups","rawcolliderset_coSetCollisionGroups","coSetSolverGroups","rawcolliderset_coSetSolverGroups","coSetActiveHooks","rawcolliderset_coSetActiveHooks","coSetActiveEvents","rawcolliderset_coSetActiveEvents","coSetActiveCollisionTypes","rawcolliderset_coSetActiveCollisionTypes","coSetShape","rawcolliderset_coSetShape","coSetContactForceEventThreshold","rawcolliderset_coSetContactForceEventThreshold","coSetDensity","rawcolliderset_coSetDensity","coSetMass","rawcolliderset_coSetMass","coSetMassProperties","rawcolliderset_coSetMassProperties","rawcolliderset_new","len","rawcolliderset_len","contains","rawcolliderset_contains","createCollider","AA","rawcolliderset_createCollider","remove","m","rawcolliderset_remove","isHandleValid","forEachColliderHandle","rawcolliderset_forEachColliderHandle","e","__wbg_rawcontactforceevent_free","collider1","collider2","rawcontactforceevent_collider2","total_force","rawcontactforceevent_total_force","total_force_magnitude","rawcontactforceevent_total_force_magnitude","max_force_direction","rawcontactforceevent_max_force_direction","max_force_magnitude","rawcontactforceevent_max_force_magnitude","r","__wbg_rawcontactmanifold_free","normal","rawcontactmanifold_normal","local_n1","rawcontactmanifold_local_n1","local_n2","rawcontactmanifold_local_n2","subshape1","rawcontactmanifold_subshape1","subshape2","rawcontactmanifold_subshape2","num_contacts","rawcontactmanifold_num_contacts","contact_local_p1","rawcontactmanifold_contact_local_p1","contact_local_p2","rawcontactmanifold_contact_local_p2","contact_dist","rawcontactmanifold_contact_dist","contact_fid1","rawcontactmanifold_contact_fid1","contact_fid2","rawcontactmanifold_contact_fid2","contact_impulse","rawcontactmanifold_contact_impulse","contact_tangent_impulse_x","rawcontactmanifold_contact_tangent_impulse_x","contact_tangent_impulse_y","rawcontactmanifold_contact_tangent_impulse_y","num_solver_contacts","rawcontactmanifold_num_solver_contacts","solver_contact_point","rawcontactmanifold_solver_contact_point","solver_contact_dist","rawcontactmanifold_solver_contact_dist","solver_contact_friction","rawcontactmanifold_solver_contact_friction","solver_contact_restitution","rawcontactmanifold_solver_contact_restitution","solver_contact_tangent_velocity","rawcontactmanifold_solver_contact_tangent_velocity","d","__wbg_rawcontactpair_free","rawcontactpair_collider1","rawcontactpair_collider2","numContactManifolds","rawcontactpair_numContactManifolds","contactManifold","rawcontactpair_contactManifold","T","__wbg_rawdebugrenderpipeline_free","rawdebugrenderpipeline_new","vertices","rawdebugrenderpipeline_vertices","colors","rawdebugrenderpipeline_colors","render","W","f","rawdebugrenderpipeline_render","n","__wbg_rawdeserializedworld_free","takeGravity","rawdeserializedworld_takeGravity","takeIntegrationParameters","rawdeserializedworld_takeIntegrationParameters","x","takeIslandManager","rawdeserializedworld_takeIslandManager","takeBroadPhase","rawdeserializedworld_takeBroadPhase","takeNarrowPhase","rawdeserializedworld_takeNarrowPhase","takeBodies","rawdeserializedworld_takeBodies","takeColliders","rawdeserializedworld_takeColliders","takeImpulseJoints","rawdeserializedworld_takeImpulseJoints","takeMultibodyJoints","rawdeserializedworld_takeMultibodyJoints","O","__wbg_rawdynamicraycastvehiclecontroller_free","rawdynamicraycastvehiclecontroller_new","current_vehicle_speed","rawdynamicraycastvehiclecontroller_current_vehicle_speed","chassis","rawdynamicraycastvehiclecontroller_chassis","index_up_axis","rawdynamicraycastvehiclecontroller_index_up_axis","set_index_up_axis","rawdynamicraycastvehiclecontroller_set_index_up_axis","index_forward_axis","rawdynamicraycastvehiclecontroller_index_forward_axis","set_index_forward_axis","rawdynamicraycastvehiclecontroller_set_index_forward_axis","add_wheel","rawdynamicraycastvehiclecontroller_add_wheel","num_wheels","rawdynamicraycastvehiclecontroller_num_wheels","update_vehicle","z","rawdynamicraycastvehiclecontroller_update_vehicle","wheel_chassis_connection_point_cs","rawdynamicraycastvehiclecontroller_wheel_chassis_connection_point_cs","set_wheel_chassis_connection_point_cs","rawdynamicraycastvehiclecontroller_set_wheel_chassis_connection_point_cs","wheel_suspension_rest_length","rawdynamicraycastvehiclecontroller_wheel_suspension_rest_length","set_wheel_suspension_rest_length","rawdynamicraycastvehiclecontroller_set_wheel_suspension_rest_length","wheel_max_suspension_travel","rawdynamicraycastvehiclecontroller_wheel_max_suspension_travel","set_wheel_max_suspension_travel","rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_travel","wheel_radius","rawdynamicraycastvehiclecontroller_wheel_radius","set_wheel_radius","rawdynamicraycastvehiclecontroller_set_wheel_radius","wheel_suspension_stiffness","rawdynamicraycastvehiclecontroller_wheel_suspension_stiffness","set_wheel_suspension_stiffness","rawdynamicraycastvehiclecontroller_set_wheel_suspension_stiffness","wheel_suspension_compression","rawdynamicraycastvehiclecontroller_wheel_suspension_compression","set_wheel_suspension_compression","rawdynamicraycastvehiclecontroller_set_wheel_suspension_compression","wheel_suspension_relaxation","rawdynamicraycastvehiclecontroller_wheel_suspension_relaxation","set_wheel_suspension_relaxation","rawdynamicraycastvehiclecontroller_set_wheel_suspension_relaxation","wheel_max_suspension_force","rawdynamicraycastvehiclecontroller_wheel_max_suspension_force","set_wheel_max_suspension_force","rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_force","wheel_brake","rawdynamicraycastvehiclecontroller_wheel_brake","set_wheel_brake","rawdynamicraycastvehiclecontroller_set_wheel_brake","wheel_steering","rawdynamicraycastvehiclecontroller_wheel_steering","set_wheel_steering","rawdynamicraycastvehiclecontroller_set_wheel_steering","wheel_engine_force","rawdynamicraycastvehiclecontroller_wheel_engine_force","set_wheel_engine_force","rawdynamicraycastvehiclecontroller_set_wheel_engine_force","wheel_direction_cs","rawdynamicraycastvehiclecontroller_wheel_direction_cs","set_wheel_direction_cs","rawdynamicraycastvehiclecontroller_set_wheel_direction_cs","wheel_axle_cs","rawdynamicraycastvehiclecontroller_wheel_axle_cs","set_wheel_axle_cs","rawdynamicraycastvehiclecontroller_set_wheel_axle_cs","wheel_friction_slip","rawdynamicraycastvehiclecontroller_wheel_friction_slip","set_wheel_friction_slip","rawdynamicraycastvehiclecontroller_set_wheel_friction_slip","wheel_side_friction_stiffness","rawdynamicraycastvehiclecontroller_wheel_side_friction_stiffness","set_wheel_side_friction_stiffness","rawdynamicraycastvehiclecontroller_set_wheel_side_friction_stiffness","wheel_rotation","rawdynamicraycastvehiclecontroller_wheel_rotation","wheel_forward_impulse","rawdynamicraycastvehiclecontroller_wheel_forward_impulse","wheel_side_impulse","rawdynamicraycastvehiclecontroller_wheel_side_impulse","wheel_suspension_force","rawdynamicraycastvehiclecontroller_wheel_suspension_force","wheel_contact_normal_ws","rawdynamicraycastvehiclecontroller_wheel_contact_normal_ws","wheel_contact_point_ws","rawdynamicraycastvehiclecontroller_wheel_contact_point_ws","wheel_suspension_length","rawdynamicraycastvehiclecontroller_wheel_suspension_length","wheel_hard_point_ws","rawdynamicraycastvehiclecontroller_wheel_hard_point_ws","wheel_is_in_contact","rawdynamicraycastvehiclecontroller_wheel_is_in_contact","wheel_ground_object","rawdynamicraycastvehiclecontroller_wheel_ground_object","__wbg_raweventqueue_free","raweventqueue_new","drainCollisionEvents","raweventqueue_drainCollisionEvents","drainContactForceEvents","raweventqueue_drainContactForceEvents","clear","raweventqueue_clear","b","__wbg_rawgenericjoint_free","generic","rawgenericjoint_generic","spring","rawgenericjoint_spring","rope","rawgenericjoint_rope","spherical","rawgenericjoint_spherical","prismatic","rawgenericjoint_prismatic","fixed","rawgenericjoint_fixed","revolute","rawgenericjoint_revolute","__wbg_rawimpulsejointset_free","jointType","rawimpulsejointset_jointType","jointBodyHandle1","rawimpulsejointset_jointBodyHandle1","jointBodyHandle2","rawimpulsejointset_jointBodyHandle2","jointFrameX1","rawimpulsejointset_jointFrameX1","jointFrameX2","rawimpulsejointset_jointFrameX2","jointAnchor1","rawimpulsejointset_jointAnchor1","jointAnchor2","rawimpulsejointset_jointAnchor2","jointSetAnchor1","rawimpulsejointset_jointSetAnchor1","jointSetAnchor2","rawimpulsejointset_jointSetAnchor2","jointContactsEnabled","rawimpulsejointset_jointContactsEnabled","jointSetContactsEnabled","rawimpulsejointset_jointSetContactsEnabled","jointLimitsEnabled","rawimpulsejointset_jointLimitsEnabled","jointLimitsMin","rawimpulsejointset_jointLimitsMin","jointLimitsMax","rawimpulsejointset_jointLimitsMax","jointSetLimits","rawimpulsejointset_jointSetLimits","jointConfigureMotorModel","rawimpulsejointset_jointConfigureMotorModel","jointConfigureMotorVelocity","rawimpulsejointset_jointConfigureMotorVelocity","jointConfigureMotorPosition","rawimpulsejointset_jointConfigureMotorPosition","jointConfigureMotor","rawimpulsejointset_jointConfigureMotor","rawimpulsejointset_new","createJoint","rawimpulsejointset_createJoint","rawimpulsejointset_remove","rawimpulsejointset_len","rawimpulsejointset_contains","forEachJointHandle","rawimpulsejointset_forEachJointHandle","forEachJointAttachedToRigidBody","rawimpulsejointset_forEachJointAttachedToRigidBody","__wbg_rawintegrationparameters_free","rawintegrationparameters_new","dt","rawintegrationparameters_dt","erp","rawintegrationparameters_erp","allowedLinearError","predictionDistance","numSolverIterations","rawintegrationparameters_numSolverIterations","numAdditionalFrictionIterations","rawintegrationparameters_numAdditionalFrictionIterations","numInternalPgsIterations","rawintegrationparameters_numInternalPgsIterations","minIslandSize","maxCcdSubsteps","rawintegrationparameters_set_dt","rawintegrationparameters_set_erp","rawintegrationparameters_set_allowedLinearError","rawintegrationparameters_set_predictionDistance","rawintegrationparameters_set_numSolverIterations","rawintegrationparameters_set_numAdditionalFrictionIterations","rawintegrationparameters_set_numInternalPgsIterations","switchToStandardPgsSolver","rawintegrationparameters_switchToStandardPgsSolver","switchToSmallStepsPgsSolver","rawintegrationparameters_switchToSmallStepsPgsSolver","__wbg_rawislandmanager_free","rawislandmanager_new","forEachActiveRigidBodyHandle","rawislandmanager_forEachActiveRigidBodyHandle","j","__wbg_rawkinematiccharactercontroller_free","rawkinematiccharactercontroller_new","up","setUp","rawkinematiccharactercontroller_setUp","offset","setOffset","rawkinematiccharactercontroller_setOffset","slideEnabled","rawkinematiccharactercontroller_slideEnabled","setSlideEnabled","rawkinematiccharactercontroller_setSlideEnabled","autostepMaxHeight","rawkinematiccharactercontroller_autostepMaxHeight","autostepMinWidth","rawkinematiccharactercontroller_autostepMinWidth","autostepIncludesDynamicBodies","rawkinematiccharactercontroller_autostepIncludesDynamicBodies","autostepEnabled","rawkinematiccharactercontroller_autostepEnabled","enableAutostep","rawkinematiccharactercontroller_enableAutostep","disableAutostep","rawkinematiccharactercontroller_disableAutostep","maxSlopeClimbAngle","rawkinematiccharactercontroller_maxSlopeClimbAngle","setMaxSlopeClimbAngle","rawkinematiccharactercontroller_setMaxSlopeClimbAngle","minSlopeSlideAngle","rawkinematiccharactercontroller_minSlopeSlideAngle","setMinSlopeSlideAngle","rawkinematiccharactercontroller_setMinSlopeSlideAngle","snapToGroundDistance","rawkinematiccharactercontroller_snapToGroundDistance","enableSnapToGround","rawkinematiccharactercontroller_enableSnapToGround","disableSnapToGround","rawkinematiccharactercontroller_disableSnapToGround","snapToGroundEnabled","rawkinematiccharactercontroller_snapToGroundEnabled","computeColliderMovement","rawkinematiccharactercontroller_computeColliderMovement","computedMovement","rawkinematiccharactercontroller_computedMovement","computedGrounded","rawkinematiccharactercontroller_computedGrounded","numComputedCollisions","rawkinematiccharactercontroller_numComputedCollisions","computedCollision","rawkinematiccharactercontroller_computedCollision","__wbg_rawmultibodyjointset_free","rawmultibodyjointset_jointType","rawmultibodyjointset_jointFrameX1","rawmultibodyjointset_jointFrameX2","rawmultibodyjointset_jointAnchor1","rawmultibodyjointset_jointAnchor2","rawmultibodyjointset_jointContactsEnabled","rawmultibodyjointset_jointSetContactsEnabled","rawmultibodyjointset_jointLimitsEnabled","rawmultibodyjointset_jointLimitsMin","rawmultibodyjointset_jointLimitsMax","rawmultibodyjointset_new","rawmultibodyjointset_createJoint","rawmultibodyjointset_remove","rawmultibodyjointset_contains","rawmultibodyjointset_forEachJointHandle","rawmultibodyjointset_forEachJointAttachedToRigidBody","__wbg_rawnarrowphase_free","rawnarrowphase_new","contact_pairs_with","rawnarrowphase_contact_pairs_with","contact_pair","rawnarrowphase_contact_pair","intersection_pairs_with","rawnarrowphase_intersection_pairs_with","intersection_pair","rawnarrowphase_intersection_pair","V","__wbg_rawphysicspipeline_free","rawphysicspipeline_new","step","rawphysicspipeline_step","stepWithEvents","rawphysicspipeline_stepWithEvents","P","__wbg_rawpointcolliderprojection_free","colliderHandle","rawpointcolliderprojection_colliderHandle","point","rawpointcolliderprojection_point","isInside","rawpointcolliderprojection_isInside","featureType","rawpointcolliderprojection_featureType","featureId","rawpointcolliderprojection_featureId","__wbg_rawpointprojection_free","rawpointprojection_point","rawpointprojection_isInside","__wbg_rawquerypipeline_free","rawquerypipeline_new","update","rawquerypipeline_update","castRay","rawquerypipeline_castRay","_","castRayAndGetNormal","rawquerypipeline_castRayAndGetNormal","v","intersectionsWithRay","rawquerypipeline_intersectionsWithRay","intersectionWithShape","rawquerypipeline_intersectionWithShape","projectPoint","rawquerypipeline_projectPoint","projectPointAndGetFeature","rawquerypipeline_projectPointAndGetFeature","intersectionsWithPoint","rawquerypipeline_intersectionsWithPoint","castShape","rawquerypipeline_castShape","intersectionsWithShape","rawquerypipeline_intersectionsWithShape","collidersWithAabbIntersectingAabb","rawquerypipeline_collidersWithAabbIntersectingAabb","__wbg_rawraycolliderintersection_free","rawraycolliderintersection_normal","rawraycolliderintersection_toi","__wbg_rawraycollidertoi_free","__wbg_rawrayintersection_free","__wbg_rawrigidbodyset_free","rbTranslation","rawrigidbodyset_rbTranslation","rbRotation","rawrigidbodyset_rbRotation","rbSleep","rawrigidbodyset_rbSleep","rbIsSleeping","rawrigidbodyset_rbIsSleeping","rbIsMoving","rawrigidbodyset_rbIsMoving","rbNextTranslation","rawrigidbodyset_rbNextTranslation","rbNextRotation","rawrigidbodyset_rbNextRotation","rbSetTranslation","rawrigidbodyset_rbSetTranslation","rbSetRotation","rawrigidbodyset_rbSetRotation","rbSetLinvel","rawrigidbodyset_rbSetLinvel","rbSetAngvel","rawrigidbodyset_rbSetAngvel","rbSetNextKinematicTranslation","rawrigidbodyset_rbSetNextKinematicTranslation","rbSetNextKinematicRotation","rawrigidbodyset_rbSetNextKinematicRotation","rbRecomputeMassPropertiesFromColliders","rawrigidbodyset_rbRecomputeMassPropertiesFromColliders","rbSetAdditionalMass","rawrigidbodyset_rbSetAdditionalMass","rbSetAdditionalMassProperties","rawrigidbodyset_rbSetAdditionalMassProperties","rbLinvel","rawrigidbodyset_rbLinvel","rbAngvel","rawrigidbodyset_rbAngvel","rbLockTranslations","rawrigidbodyset_rbLockTranslations","rbSetEnabledTranslations","rawrigidbodyset_rbSetEnabledTranslations","rbLockRotations","rawrigidbodyset_rbLockRotations","rbSetEnabledRotations","rawrigidbodyset_rbSetEnabledRotations","rbDominanceGroup","rawrigidbodyset_rbDominanceGroup","rbSetDominanceGroup","rawrigidbodyset_rbSetDominanceGroup","rbEnableCcd","rawrigidbodyset_rbEnableCcd","rbMass","rawrigidbodyset_rbMass","rbInvMass","rawrigidbodyset_rbInvMass","rbEffectiveInvMass","rawrigidbodyset_rbEffectiveInvMass","rbLocalCom","rawrigidbodyset_rbLocalCom","rbWorldCom","rawrigidbodyset_rbWorldCom","rbInvPrincipalInertiaSqrt","rawrigidbodyset_rbInvPrincipalInertiaSqrt","rbPrincipalInertiaLocalFrame","rawrigidbodyset_rbPrincipalInertiaLocalFrame","rbPrincipalInertia","rawrigidbodyset_rbPrincipalInertia","rbEffectiveWorldInvInertiaSqrt","rawrigidbodyset_rbEffectiveWorldInvInertiaSqrt","gA","rbEffectiveAngularInertia","rawrigidbodyset_rbEffectiveAngularInertia","rbWakeUp","rawrigidbodyset_rbWakeUp","rbIsCcdEnabled","rawrigidbodyset_rbIsCcdEnabled","rbNumColliders","rawrigidbodyset_rbNumColliders","rbCollider","rawrigidbodyset_rbCollider","rbBodyType","rawrigidbodyset_rbBodyType","rbSetBodyType","rawrigidbodyset_rbSetBodyType","rbIsFixed","rawrigidbodyset_rbIsFixed","rbIsKinematic","rawrigidbodyset_rbIsKinematic","rbIsDynamic","rawrigidbodyset_rbIsDynamic","rbLinearDamping","rawrigidbodyset_rbLinearDamping","rbAngularDamping","rawrigidbodyset_rbAngularDamping","rbSetLinearDamping","rawrigidbodyset_rbSetLinearDamping","rbSetAngularDamping","rawrigidbodyset_rbSetAngularDamping","rbSetEnabled","rawrigidbodyset_rbSetEnabled","rbIsEnabled","rawrigidbodyset_rbIsEnabled","rbGravityScale","rawrigidbodyset_rbGravityScale","rbSetGravityScale","rawrigidbodyset_rbSetGravityScale","rbResetForces","rawrigidbodyset_rbResetForces","rbResetTorques","rawrigidbodyset_rbResetTorques","rbAddForce","rawrigidbodyset_rbAddForce","rbApplyImpulse","rawrigidbodyset_rbApplyImpulse","rbAddTorque","rawrigidbodyset_rbAddTorque","rbApplyTorqueImpulse","rawrigidbodyset_rbApplyTorqueImpulse","rbAddForceAtPoint","rawrigidbodyset_rbAddForceAtPoint","rbApplyImpulseAtPoint","rawrigidbodyset_rbApplyImpulseAtPoint","rbAdditionalSolverIterations","rawrigidbodyset_rbAdditionalSolverIterations","rbSetAdditionalSolverIterations","rawrigidbodyset_rbSetAdditionalSolverIterations","rbUserData","rawrigidbodyset_rbUserData","rbSetUserData","rawrigidbodyset_rbSetUserData","rawrigidbodyset_new","createRigidBody","rawrigidbodyset_createRigidBody","rawrigidbodyset_remove","rawrigidbodyset_contains","forEachRigidBodyHandle","rawrigidbodyset_forEachRigidBodyHandle","propagateModifiedBodyPositionsToColliders","rawrigidbodyset_propagateModifiedBodyPositionsToColliders","__wbg_rawrotation_free","rawrotation_new","identity","rawrotation_identity","rawrotation_x","__wbg_rawsdpmatrix3_free","elements","rawsdpmatrix3_elements","CA","__wbg_rawserializationpipeline_free","rawserializationpipeline_new","serializeAll","rawserializationpipeline_serializeAll","deserializeAll","rawserializationpipeline_deserializeAll","__wbg_rawshape_free","cuboid","rawshape_cuboid","roundCuboid","rawshape_roundCuboid","ball","rawshape_ball","halfspace","rawshape_halfspace","capsule","rawshape_capsule","cylinder","rawshape_cylinder","roundCylinder","rawshape_roundCylinder","cone","rawshape_cone","roundCone","rawshape_roundCone","polyline","__wbindgen_malloc","rawshape_polyline","trimesh","rawshape_trimesh","heightfield","rawshape_heightfield","segment","rawshape_segment","triangle","rawshape_triangle","roundTriangle","rawshape_roundTriangle","convexHull","rawshape_convexHull","roundConvexHull","rawshape_roundConvexHull","convexMesh","rawshape_convexMesh","roundConvexMesh","rawshape_roundConvexMesh","rawshape_castShape","intersectsShape","rawshape_intersectsShape","contactShape","rawshape_contactShape","containsPoint","rawshape_containsPoint","rawshape_projectPoint","intersectsRay","rawshape_intersectsRay","rawshape_castRay","rawshape_castRayAndGetNormal","__wbg_rawshapecollidertoi_free","witness1","witness2","rawshapecollidertoi_witness2","normal1","normal2","__wbg_rawshapecontact_free","distance","point1","point2","__wbg_rawshapetoi_free","rawshapetoi_witness1","rawshapetoi_normal1","rawshapetoi_normal2","__wbg_rawvector_free","zero","rawvector_zero","rawvector_new","rawvector_set_x","rawvector_set_z","xyz","rawvector_xyz","yxz","rawvector_yxz","zxy","rawvector_zxy","xzy","rawvector_xzy","yzx","rawvector_yzx","zyx","rawvector_zyx","oA","URL","wbg","__wbindgen_number_new","__wbindgen_boolean_get","__wbindgen_object_drop_ref","__wbindgen_number_get","__wbindgen_is_function","__wbg_rawraycolliderintersection_new","__wbg_rawcontactforceevent_new","__wbg_call_01734de55d61e11d","call","arguments","__wbg_call_4c92f6aec1e1d6e6","__wbg_call_776890ca77946e2f","__wbg_bind_60a9a80cada2f33c","bind","__wbg_buffer_085ec1f694018c4f","__wbg_newwithbyteoffsetandlength_6da8e527659b86aa","__wbg_new_8125e318e6245eed","__wbg_set_5cf90238115182c3","__wbg_length_72e2208bbc0efc61","__wbg_newwithbyteoffsetandlength_69193e31c844b792","__wbg_set_6146c51d49a2c0df","__wbg_length_d7327c75a759af37","__wbg_newwithlength_68d29ab115d0099c","__wbindgen_throw","__wbindgen_memory","Request","fetch","instance","module","Response","WebAssembly","instantiateStreaming","headers","get","console","warn","arrayBuffer","instantiate","Instance","exports","__wbindgen_wasm_module","GA","wA","new","intoRaw","zeros","fromRaw","copy","SA","kA","aA","m11","m12","m21","m13","m31","m22","m23","m32","m33","hA","KA","UA","JA","NA","yA","MA","FA","qA","RA","sA","cA","YA","HA","lA","rawSet","colliderSet","finalizeDeserialization","isValid","lockTranslations","lockRotations","setEnabledTranslations","restrictTranslations","setEnabledRotations","restrictRotations","dominanceGroup","setDominanceGroup","additionalSolverIterations","setAdditionalSolverIterations","enableCcd","translation","rotation","nextTranslation","nextRotation","setTranslation","setLinvel","gravityScale","setGravityScale","setRotation","setAngvel","setNextKinematicTranslation","setNextKinematicRotation","linvel","angvel","mass","effectiveInvMass","invMass","localCom","worldCom","invPrincipalInertiaSqrt","principalInertia","principalInertiaLocalFrame","effectiveWorldInvInertiaSqrt","effectiveAngularInertia","sleep","wakeUp","isCcdEnabled","numColliders","collider","setEnabled","isEnabled","bodyType","setBodyType","isSleeping","isMoving","isFixed","isKinematic","isDynamic","linearDamping","angularDamping","setLinearDamping","recomputeMassPropertiesFromColliders","raw","setAdditionalMass","setAdditionalMassProperties","setAngularDamping","resetForces","resetTorques","addForce","applyImpulse","addTorque","applyTorqueImpulse","addForceAtPoint","applyImpulseAtPoint","LA","enabled","status","massOnly","centerOfMass","translationsEnabledX","translationsEnabledY","principalAngularInertia","angularInertiaLocalFrame","translationsEnabledZ","rotationsEnabledX","rotationsEnabledY","rotationsEnabledZ","canSleep","sleeping","ccdEnabled","dynamic","kinematicPositionBased","kinematicVelocityBased","newDynamic","newKinematicPositionBased","newKinematicVelocityBased","newStatic","TypeError","enabledTranslations","enabledRotations","setCanSleep","setSleeping","setCcdEnabled","setUserData","userData","tA","fconv","uconv","data","size","index","delete","forEach","getAll","filter","pA","map","unmap","forEachJointHandleAttachedToRigidBody","forEachActiveRigidBody","eA","rA","bodySet","newTyped","bA","ZA","TA","OA","nA","xA","WA","body1","body2","type","frameX1","frameX2","anchor1","anchor2","setAnchor1","setAnchor2","setContactsEnabled","contactsEnabled","dA","limitsEnabled","rawAxis","limitsMin","limitsMax","setLimits","configureMotorModel","configureMotorVelocity","configureMotorPosition","configureMotor","mA","frame1","frame2","stiffness","damping","axis","axesMask","limits","jA","fA","uA","PA","VA","zA","XA","vA","Average","Min","Multiply","Max","_A","$A","AI","II","tempManifold","gI","contactPairsWith","intersectionPairsWith","contactPair","intersectionPair","localNormal1","localNormal2","numContacts","localContactPoint1","localContactPoint2","contactDist","contactFid1","contactFid2","contactImpulse","contactTangentImpulseX","contactTangentImpulseY","numSolverContacts","solverContactPoint","solverContactDist","solverContactFriction","solverContactRestitution","solverContactTangentVelocity","CI","BI","QI","EI","origin","dir","pointAt","iI","DI","oI","GI","wI","SI","kI","hI","KI","UI","JI","MI","NI","yI","aI","FI","sI","qI","RI","cI","YI","HI","lI","radius","halfExtents","borderRadius","halfHeight","indices","nrows","ncols","heights","scale","LI","filterContactPair","filterIntersectionPair","EXCLUDE_FIXED","EXCLUDE_KINEMATIC","EXCLUDE_DYNAMIC","EXCLUDE_SENSORS","EXCLUDE_SOLIDS","ONLY_DYNAMIC","ONLY_KINEMATIC","ONLY_FIXED","tI","pI","OI","eI","rI","dI","TI","params","bodies","colliders","queries","rawCharacterCollision","_applyImpulsesToDynamicBodies","_characterMass","applyImpulsesToDynamicBodies","setApplyImpulsesToDynamicBodies","characterMass","setCharacterMass","castClosure","nI","_chassis","updateVehicle","currentVehicleSpeed","indexUpAxis","indexForwardAxis","setIndexForwardAxis","addWheel","numWheels","wheelChassisConnectionPointCs","setWheelChassisConnectionPointCs","wheelSuspensionRestLength","setWheelSuspensionRestLength","wheelMaxSuspensionTravel","setWheelMaxSuspensionTravel","wheelRadius","setWheelRadius","wheelSuspensionStiffness","setWheelSuspensionStiffness","wheelSuspensionCompression","setWheelSuspensionCompression","wheelSuspensionRelaxation","setWheelSuspensionRelaxation","wheelMaxSuspensionForce","setWheelMaxSuspensionForce","wheelBrake","setWheelBrake","wheelSteering","setWheelSteering","wheelEngineForce","setWheelEngineForce","wheelDirectionCs","setWheelDirectionCs","wheelAxleCs","setWheelAxleCs","wheelFrictionSlip","setWheelFrictionSlip","wheelSideFrictionStiffness","setWheelSideFrictionStiffness","wheelRotation","wheelForwardImpulse","wheelSideImpulse","wheelSuspensionForce","wheelContactNormal","wheelContactPoint","wheelSuspensionLength","wheelHardPoint","wheelIsInContact","wheelGroundObject","gravity","integrationParameters","islands","broadPhase","narrowPhase","mI","impulseJoints","multibodyJoints","ccdSolver","queryPipeline","physicsPipeline","serializationPipeline","debugRenderPipeline","characterControllers","Set","vehicleControllers","takeSnapshot","restoreSnapshot","debugRender","updateSceneQueries","timestep","createCharacterController","add","removeCharacterController","createVehicleController","removeVehicleController","createImpulseJoint","createMultibodyJoint","getRigidBody","getCollider","getImpulseJoint","getMultibodyJoint","removeRigidBody","removeCollider","removeImpulseJoint","removeMultibodyJoint","forEachCollider","forEachRigidBody","NONE","COLLISION_EVENTS","CONTACT_FORCE_EVENTS","ZI","totalForce","totalForceMagnitude","maxForceDirection","maxForceMagnitude","bI","FILTER_CONTACT_PAIRS","FILTER_INTERSECTION_PAIRS","EMPTY","COMPUTE_IMPULSE","DYNAMIC_DYNAMIC","DYNAMIC_KINEMATIC","DYNAMIC_FIXED","KINEMATIC_KINEMATIC","KINEMATIC_FIXED","FIXED_FIXED","DEFAULT","ALL","WI","_parent","_shape","ensureShapeIsCached","shape","isSensor","setSensor","setShape","setRestitution","setFriction","frictionCombineRule","setFrictionCombineRule","restitutionCombineRule","setRestitutionCombineRule","setCollisionGroups","setSolverGroups","activeHooks","setActiveHooks","activeEvents","setActiveEvents","activeCollisionTypes","setContactForceEventThreshold","contactForceEventThreshold","setActiveCollisionTypes","setDensity","setMass","setMassProperties","setTranslationWrtParent","setRotationWrtParent","shapeType","setHalfExtents","setRadius","roundRadius","setRoundRadius","setHalfHeight","heightfieldHeights","heightfieldScale","heightfieldNRows","heightfieldNCols","parent","friction","restitution","density","volume","collisionGroups","solverGroups","castCollider","contactCollider","Density","Mass","MassProps","xI","massPropsMode","isNaN","jI","Promise","next","throw","done","value","then","fI","base64Js","_I","toByteArray","PI","VI","charCodeAt","fromByteArray","$I","XI","join","uI","zI","vI","indexOf","Ag","Ig","version","gg","__proto__","Vector3","VectorOps","Quaternion","RotationOps","SdpMatrix3","SdpMatrix3Ops","RigidBodyType","RigidBody","RigidBodyDesc","RigidBodySet","IntegrationParameters","JointType","MotorModel","JointAxesMask","ImpulseJoint","UnitImpulseJoint","FixedImpulseJoint","RopeImpulseJoint","SpringImpulseJoint","PrismaticImpulseJoint","RevoluteImpulseJoint","GenericImpulseJoint","SphericalImpulseJoint","JointData","ImpulseJointSet","MultibodyJoint","UnitMultibodyJoint","FixedMultibodyJoint","PrismaticMultibodyJoint","RevoluteMultibodyJoint","SphericalMultibodyJoint","MultibodyJointSet","CoefficientCombineRule","CCDSolver","IslandManager","BroadPhase","NarrowPhase","TempContactManifold","Shape","ShapeType","Heightfield","ActiveCollisionTypes","Collider","MassPropsMode","ColliderDesc","ColliderSet","FeatureType","Ray","RayIntersection","RayColliderIntersection","RayColliderToi","PointProjection","PointColliderProjection","ShapeTOI","ShapeColliderTOI","ShapeContact","World","PhysicsPipeline","SerializationPipeline","ActiveEvents","TempContactForceEvent","EventQueue","ActiveHooks","SolverFlags","DebugRenderBuffers","DebugRenderPipeline","QueryFilterFlags","QueryPipeline","init","CharacterCollision","KinematicCharacterController","DynamicRayCastVehicleController","default"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/rapier3d-compat/rapier_wasm3d.js","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/math.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/dynamics/rigid_body.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/dynamics/impulse_joint.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/dynamics/coefficient_combine_rule.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/geometry/feature.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/geometry/shape.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/pipeline/query_pipeline.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/pipeline/event_queue.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/pipeline/physics_hooks.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/geometry/collider.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/coarena.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/dynamics/rigid_body_set.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/dynamics/integration_parameters.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/dynamics/impulse_joint_set.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/dynamics/multibody_joint.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/dynamics/multibody_joint_set.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/dynamics/ccd_solver.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/dynamics/island_manager.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/geometry/broad_phase.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/geometry/narrow_phase.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/geometry/contact.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/geometry/point.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/geometry/ray.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/geometry/toi.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/pipeline/physics_pipeline.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/pipeline/serialization_pipeline.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/pipeline/debug_render_pipeline.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/control/character_controller.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/control/ray_cast_vehicle_controller.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/pipeline/world.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/geometry/collider_set.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/node_modules/tslib/tslib.es6.js","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/node_modules/base64-js/index.js","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/init.ts","/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/@dimforge/gen3d/gen3d/exports.ts"],"sourcesContent":["let wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedFloat64Memory0 = null;\n\nfunction getFloat64Memory0() {\n    if (cachedFloat64Memory0 === null || cachedFloat64Memory0.byteLength === 0) {\n        cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachedFloat64Memory0;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n* @returns {string}\n*/\nexport function version() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.version(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        deferred1_0 = r0;\n        deferred1_1 = r1;\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n    }\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nlet cachedFloat32Memory0 = null;\n\nfunction getFloat32Memory0() {\n    if (cachedFloat32Memory0 === null || cachedFloat32Memory0.byteLength === 0) {\n        cachedFloat32Memory0 = new Float32Array(wasm.memory.buffer);\n    }\n    return cachedFloat32Memory0;\n}\n\nlet stack_pointer = 128;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n\nfunction getArrayF32FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getFloat32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n\nlet cachedUint32Memory0 = null;\n\nfunction getUint32Memory0() {\n    if (cachedUint32Memory0 === null || cachedUint32Memory0.byteLength === 0) {\n        cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachedUint32Memory0;\n}\n\nfunction getArrayU32FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArrayF32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4, 4) >>> 0;\n    getFloat32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4, 4) >>> 0;\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n/**\n*/\nexport const RawRigidBodyType = Object.freeze({ Dynamic:0,\"0\":\"Dynamic\",Fixed:1,\"1\":\"Fixed\",KinematicPositionBased:2,\"2\":\"KinematicPositionBased\",KinematicVelocityBased:3,\"3\":\"KinematicVelocityBased\", });\n/**\n*/\nexport const RawFeatureType = Object.freeze({ Vertex:0,\"0\":\"Vertex\",Edge:1,\"1\":\"Edge\",Face:2,\"2\":\"Face\",Unknown:3,\"3\":\"Unknown\", });\n/**\n*/\nexport const RawMotorModel = Object.freeze({ AccelerationBased:0,\"0\":\"AccelerationBased\",ForceBased:1,\"1\":\"ForceBased\", });\n/**\n*/\nexport const RawShapeType = Object.freeze({ Ball:0,\"0\":\"Ball\",Cuboid:1,\"1\":\"Cuboid\",Capsule:2,\"2\":\"Capsule\",Segment:3,\"3\":\"Segment\",Polyline:4,\"4\":\"Polyline\",Triangle:5,\"5\":\"Triangle\",TriMesh:6,\"6\":\"TriMesh\",HeightField:7,\"7\":\"HeightField\",Compound:8,\"8\":\"Compound\",ConvexPolyhedron:9,\"9\":\"ConvexPolyhedron\",Cylinder:10,\"10\":\"Cylinder\",Cone:11,\"11\":\"Cone\",RoundCuboid:12,\"12\":\"RoundCuboid\",RoundTriangle:13,\"13\":\"RoundTriangle\",RoundCylinder:14,\"14\":\"RoundCylinder\",RoundCone:15,\"15\":\"RoundCone\",RoundConvexPolyhedron:16,\"16\":\"RoundConvexPolyhedron\",HalfSpace:17,\"17\":\"HalfSpace\", });\n/**\n*/\nexport const RawJointAxis = Object.freeze({ X:0,\"0\":\"X\",Y:1,\"1\":\"Y\",Z:2,\"2\":\"Z\",AngX:3,\"3\":\"AngX\",AngY:4,\"4\":\"AngY\",AngZ:5,\"5\":\"AngZ\", });\n/**\n*/\nexport const RawJointType = Object.freeze({ Revolute:0,\"0\":\"Revolute\",Fixed:1,\"1\":\"Fixed\",Prismatic:2,\"2\":\"Prismatic\",Rope:3,\"3\":\"Rope\",Spring:4,\"4\":\"Spring\",Spherical:5,\"5\":\"Spherical\",Generic:6,\"6\":\"Generic\", });\n/**\n*/\nexport class RawBroadPhase {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawBroadPhase.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawbroadphase_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawbroadphase_new();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n}\n/**\n*/\nexport class RawCCDSolver {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawccdsolver_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawccdsolver_new();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n}\n/**\n*/\nexport class RawCharacterCollision {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawcharactercollision_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawcharactercollision_new();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @returns {number}\n    */\n    handle() {\n        const ret = wasm.rawcharactercollision_handle(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {RawVector}\n    */\n    translationDeltaApplied() {\n        const ret = wasm.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    translationDeltaRemaining() {\n        const ret = wasm.rawcharactercollision_translationDeltaRemaining(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    toi() {\n        const ret = wasm.rawcharactercollision_toi(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {RawVector}\n    */\n    worldWitness1() {\n        const ret = wasm.rawcharactercollision_worldWitness1(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    worldWitness2() {\n        const ret = wasm.rawcharactercollision_worldWitness2(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    worldNormal1() {\n        const ret = wasm.rawcharactercollision_worldNormal1(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    worldNormal2() {\n        const ret = wasm.rawcharactercollision_worldNormal2(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawColliderSet {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawColliderSet.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawcolliderset_free(ptr);\n    }\n    /**\n    * The world-space translation of this collider.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    coTranslation(handle) {\n        const ret = wasm.rawcolliderset_coTranslation(this.__wbg_ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The world-space orientation of this collider.\n    * @param {number} handle\n    * @returns {RawRotation}\n    */\n    coRotation(handle) {\n        const ret = wasm.rawcolliderset_coRotation(this.__wbg_ptr, handle);\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * Sets the translation of this collider.\n    *\n    * # Parameters\n    * - `x`: the world-space position of the collider along the `x` axis.\n    * - `y`: the world-space position of the collider along the `y` axis.\n    * - `z`: the world-space position of the collider along the `z` axis.\n    * - `wakeUp`: forces the collider to wake-up so it is properly affected by forces if it\n    * wasn't moving before modifying its position.\n    * @param {number} handle\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    */\n    coSetTranslation(handle, x, y, z) {\n        wasm.rawcolliderset_coSetTranslation(this.__wbg_ptr, handle, x, y, z);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    */\n    coSetTranslationWrtParent(handle, x, y, z) {\n        wasm.rawcolliderset_coSetTranslationWrtParent(this.__wbg_ptr, handle, x, y, z);\n    }\n    /**\n    * Sets the rotation quaternion of this collider.\n    *\n    * This does nothing if a zero quaternion is provided.\n    *\n    * # Parameters\n    * - `x`: the first vector component of the quaternion.\n    * - `y`: the second vector component of the quaternion.\n    * - `z`: the third vector component of the quaternion.\n    * - `w`: the scalar component of the quaternion.\n    * - `wakeUp`: forces the collider to wake-up so it is properly affected by forces if it\n    * wasn't moving before modifying its position.\n    * @param {number} handle\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    * @param {number} w\n    */\n    coSetRotation(handle, x, y, z, w) {\n        wasm.rawcolliderset_coSetRotation(this.__wbg_ptr, handle, x, y, z, w);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    * @param {number} w\n    */\n    coSetRotationWrtParent(handle, x, y, z, w) {\n        wasm.rawcolliderset_coSetRotationWrtParent(this.__wbg_ptr, handle, x, y, z, w);\n    }\n    /**\n    * Is this collider a sensor?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    coIsSensor(handle) {\n        const ret = wasm.rawcolliderset_coIsSensor(this.__wbg_ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * The type of the shape of this collider.\n    * @param {number} handle\n    * @returns {RawShapeType}\n    */\n    coShapeType(handle) {\n        const ret = wasm.rawcolliderset_coShapeType(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @returns {RawVector | undefined}\n    */\n    coHalfspaceNormal(handle) {\n        const ret = wasm.rawcolliderset_coHalfspaceNormal(this.__wbg_ptr, handle);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * The half-extents of this collider if it is has a cuboid shape.\n    * @param {number} handle\n    * @returns {RawVector | undefined}\n    */\n    coHalfExtents(handle) {\n        const ret = wasm.rawcolliderset_coHalfExtents(this.__wbg_ptr, handle);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * Set the half-extents of this collider if it has a cuboid shape.\n    * @param {number} handle\n    * @param {RawVector} newHalfExtents\n    */\n    coSetHalfExtents(handle, newHalfExtents) {\n        _assertClass(newHalfExtents, RawVector);\n        wasm.rawcolliderset_coSetHalfExtents(this.__wbg_ptr, handle, newHalfExtents.__wbg_ptr);\n    }\n    /**\n    * The radius of this collider if it is a ball, capsule, cylinder, or cone shape.\n    * @param {number} handle\n    * @returns {number | undefined}\n    */\n    coRadius(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coRadius(retptr, this.__wbg_ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Set the radius of this collider if it is a ball, capsule, cylinder, or cone shape.\n    * @param {number} handle\n    * @param {number} newRadius\n    */\n    coSetRadius(handle, newRadius) {\n        wasm.rawcolliderset_coSetRadius(this.__wbg_ptr, handle, newRadius);\n    }\n    /**\n    * The half height of this collider if it is a capsule, cylinder, or cone shape.\n    * @param {number} handle\n    * @returns {number | undefined}\n    */\n    coHalfHeight(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coHalfHeight(retptr, this.__wbg_ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Set the half height of this collider if it is a capsule, cylinder, or cone shape.\n    * @param {number} handle\n    * @param {number} newHalfheight\n    */\n    coSetHalfHeight(handle, newHalfheight) {\n        wasm.rawcolliderset_coSetHalfHeight(this.__wbg_ptr, handle, newHalfheight);\n    }\n    /**\n    * The radius of the round edges of this collider.\n    * @param {number} handle\n    * @returns {number | undefined}\n    */\n    coRoundRadius(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coRoundRadius(retptr, this.__wbg_ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Set the radius of the round edges of this collider.\n    * @param {number} handle\n    * @param {number} newBorderRadius\n    */\n    coSetRoundRadius(handle, newBorderRadius) {\n        wasm.rawcolliderset_coSetRoundRadius(this.__wbg_ptr, handle, newBorderRadius);\n    }\n    /**\n    * The vertices of this triangle mesh, polyline, convex polyhedron, segment, triangle or convex polyhedron, if it is one.\n    * @param {number} handle\n    * @returns {Float32Array | undefined}\n    */\n    coVertices(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coVertices(retptr, this.__wbg_ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v1;\n            if (r0 !== 0) {\n                v1 = getArrayF32FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 4, 4);\n            }\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * The indices of this triangle mesh, polyline, or convex polyhedron, if it is one.\n    * @param {number} handle\n    * @returns {Uint32Array | undefined}\n    */\n    coIndices(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coIndices(retptr, this.__wbg_ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v1;\n            if (r0 !== 0) {\n                v1 = getArrayU32FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 4, 4);\n            }\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * The height of this heightfield if it is one.\n    * @param {number} handle\n    * @returns {Float32Array | undefined}\n    */\n    coHeightfieldHeights(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coHeightfieldHeights(retptr, this.__wbg_ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v1;\n            if (r0 !== 0) {\n                v1 = getArrayF32FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 4, 4);\n            }\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * The scaling factor applied of this heightfield if it is one.\n    * @param {number} handle\n    * @returns {RawVector | undefined}\n    */\n    coHeightfieldScale(handle) {\n        const ret = wasm.rawcolliderset_coHeightfieldScale(this.__wbg_ptr, handle);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * The number of rows on this heightfield's height matrix, if it is one.\n    * @param {number} handle\n    * @returns {number | undefined}\n    */\n    coHeightfieldNRows(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coHeightfieldNRows(retptr, this.__wbg_ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1 >>> 0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * The number of columns on this heightfield's height matrix, if it is one.\n    * @param {number} handle\n    * @returns {number | undefined}\n    */\n    coHeightfieldNCols(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coHeightfieldNCols(retptr, this.__wbg_ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1 >>> 0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * The unique integer identifier of the collider this collider is attached to.\n    * @param {number} handle\n    * @returns {number | undefined}\n    */\n    coParent(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coParent(retptr, this.__wbg_ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r2 = getFloat64Memory0()[retptr / 8 + 1];\n            return r0 === 0 ? undefined : r2;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} enabled\n    */\n    coSetEnabled(handle, enabled) {\n        wasm.rawcolliderset_coSetEnabled(this.__wbg_ptr, handle, enabled);\n    }\n    /**\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    coIsEnabled(handle) {\n        const ret = wasm.rawcolliderset_coIsEnabled(this.__wbg_ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * The friction coefficient of this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coFriction(handle) {\n        const ret = wasm.rawcolliderset_coFriction(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * The restitution coefficient of this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coRestitution(handle) {\n        const ret = wasm.rawcolliderset_coRestitution(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * The density of this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coDensity(handle) {\n        const ret = wasm.rawcolliderset_coDensity(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * The mass of this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coMass(handle) {\n        const ret = wasm.rawcolliderset_coMass(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * The volume of this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coVolume(handle) {\n        const ret = wasm.rawcolliderset_coVolume(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * The collision groups of this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coCollisionGroups(handle) {\n        const ret = wasm.rawcolliderset_coCollisionGroups(this.__wbg_ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * The solver groups of this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coSolverGroups(handle) {\n        const ret = wasm.rawcolliderset_coSolverGroups(this.__wbg_ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * The physics hooks enabled for this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coActiveHooks(handle) {\n        const ret = wasm.rawcolliderset_coActiveHooks(this.__wbg_ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * The collision types enabled for this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coActiveCollisionTypes(handle) {\n        const ret = wasm.rawcolliderset_coActiveCollisionTypes(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * The events enabled for this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coActiveEvents(handle) {\n        const ret = wasm.rawcolliderset_coActiveEvents(this.__wbg_ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * The total force magnitude beyond which a contact force event can be emitted.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coContactForceEventThreshold(handle) {\n        const ret = wasm.rawcolliderset_coContactForceEventThreshold(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @param {RawVector} point\n    * @returns {boolean}\n    */\n    coContainsPoint(handle, point) {\n        _assertClass(point, RawVector);\n        const ret = wasm.rawcolliderset_coContainsPoint(this.__wbg_ptr, handle, point.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {number} handle\n    * @param {RawVector} colliderVel\n    * @param {RawShape} shape2\n    * @param {RawVector} shape2Pos\n    * @param {RawRotation} shape2Rot\n    * @param {RawVector} shape2Vel\n    * @param {number} maxToi\n    * @param {boolean} stop_at_penetration\n    * @returns {RawShapeTOI | undefined}\n    */\n    coCastShape(handle, colliderVel, shape2, shape2Pos, shape2Rot, shape2Vel, maxToi, stop_at_penetration) {\n        _assertClass(colliderVel, RawVector);\n        _assertClass(shape2, RawShape);\n        _assertClass(shape2Pos, RawVector);\n        _assertClass(shape2Rot, RawRotation);\n        _assertClass(shape2Vel, RawVector);\n        const ret = wasm.rawcolliderset_coCastShape(this.__wbg_ptr, handle, colliderVel.__wbg_ptr, shape2.__wbg_ptr, shape2Pos.__wbg_ptr, shape2Rot.__wbg_ptr, shape2Vel.__wbg_ptr, maxToi, stop_at_penetration);\n        return ret === 0 ? undefined : RawShapeTOI.__wrap(ret);\n    }\n    /**\n    * @param {number} handle\n    * @param {RawVector} collider1Vel\n    * @param {number} collider2handle\n    * @param {RawVector} collider2Vel\n    * @param {number} max_toi\n    * @param {boolean} stop_at_penetration\n    * @returns {RawShapeColliderTOI | undefined}\n    */\n    coCastCollider(handle, collider1Vel, collider2handle, collider2Vel, max_toi, stop_at_penetration) {\n        _assertClass(collider1Vel, RawVector);\n        _assertClass(collider2Vel, RawVector);\n        const ret = wasm.rawcolliderset_coCastCollider(this.__wbg_ptr, handle, collider1Vel.__wbg_ptr, collider2handle, collider2Vel.__wbg_ptr, max_toi, stop_at_penetration);\n        return ret === 0 ? undefined : RawShapeColliderTOI.__wrap(ret);\n    }\n    /**\n    * @param {number} handle\n    * @param {RawShape} shape2\n    * @param {RawVector} shapePos2\n    * @param {RawRotation} shapeRot2\n    * @returns {boolean}\n    */\n    coIntersectsShape(handle, shape2, shapePos2, shapeRot2) {\n        _assertClass(shape2, RawShape);\n        _assertClass(shapePos2, RawVector);\n        _assertClass(shapeRot2, RawRotation);\n        const ret = wasm.rawcolliderset_coIntersectsShape(this.__wbg_ptr, handle, shape2.__wbg_ptr, shapePos2.__wbg_ptr, shapeRot2.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {number} handle\n    * @param {RawShape} shape2\n    * @param {RawVector} shapePos2\n    * @param {RawRotation} shapeRot2\n    * @param {number} prediction\n    * @returns {RawShapeContact | undefined}\n    */\n    coContactShape(handle, shape2, shapePos2, shapeRot2, prediction) {\n        _assertClass(shape2, RawShape);\n        _assertClass(shapePos2, RawVector);\n        _assertClass(shapeRot2, RawRotation);\n        const ret = wasm.rawcolliderset_coContactShape(this.__wbg_ptr, handle, shape2.__wbg_ptr, shapePos2.__wbg_ptr, shapeRot2.__wbg_ptr, prediction);\n        return ret === 0 ? undefined : RawShapeContact.__wrap(ret);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} collider2handle\n    * @param {number} prediction\n    * @returns {RawShapeContact | undefined}\n    */\n    coContactCollider(handle, collider2handle, prediction) {\n        const ret = wasm.rawcolliderset_coContactCollider(this.__wbg_ptr, handle, collider2handle, prediction);\n        return ret === 0 ? undefined : RawShapeContact.__wrap(ret);\n    }\n    /**\n    * @param {number} handle\n    * @param {RawVector} point\n    * @param {boolean} solid\n    * @returns {RawPointProjection}\n    */\n    coProjectPoint(handle, point, solid) {\n        _assertClass(point, RawVector);\n        const ret = wasm.rawcolliderset_coProjectPoint(this.__wbg_ptr, handle, point.__wbg_ptr, solid);\n        return RawPointProjection.__wrap(ret);\n    }\n    /**\n    * @param {number} handle\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @returns {boolean}\n    */\n    coIntersectsRay(handle, rayOrig, rayDir, maxToi) {\n        _assertClass(rayOrig, RawVector);\n        _assertClass(rayDir, RawVector);\n        const ret = wasm.rawcolliderset_coIntersectsRay(this.__wbg_ptr, handle, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi);\n        return ret !== 0;\n    }\n    /**\n    * @param {number} handle\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @param {boolean} solid\n    * @returns {number}\n    */\n    coCastRay(handle, rayOrig, rayDir, maxToi, solid) {\n        _assertClass(rayOrig, RawVector);\n        _assertClass(rayDir, RawVector);\n        const ret = wasm.rawcolliderset_coCastRay(this.__wbg_ptr, handle, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi, solid);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @param {boolean} solid\n    * @returns {RawRayIntersection | undefined}\n    */\n    coCastRayAndGetNormal(handle, rayOrig, rayDir, maxToi, solid) {\n        _assertClass(rayOrig, RawVector);\n        _assertClass(rayDir, RawVector);\n        const ret = wasm.rawcolliderset_coCastRayAndGetNormal(this.__wbg_ptr, handle, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi, solid);\n        return ret === 0 ? undefined : RawRayIntersection.__wrap(ret);\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} is_sensor\n    */\n    coSetSensor(handle, is_sensor) {\n        wasm.rawcolliderset_coSetSensor(this.__wbg_ptr, handle, is_sensor);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} restitution\n    */\n    coSetRestitution(handle, restitution) {\n        wasm.rawcolliderset_coSetRestitution(this.__wbg_ptr, handle, restitution);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} friction\n    */\n    coSetFriction(handle, friction) {\n        wasm.rawcolliderset_coSetFriction(this.__wbg_ptr, handle, friction);\n    }\n    /**\n    * @param {number} handle\n    * @returns {number}\n    */\n    coFrictionCombineRule(handle) {\n        const ret = wasm.rawcolliderset_coFrictionCombineRule(this.__wbg_ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} handle\n    * @param {number} rule\n    */\n    coSetFrictionCombineRule(handle, rule) {\n        wasm.rawcolliderset_coSetFrictionCombineRule(this.__wbg_ptr, handle, rule);\n    }\n    /**\n    * @param {number} handle\n    * @returns {number}\n    */\n    coRestitutionCombineRule(handle) {\n        const ret = wasm.rawcolliderset_coRestitutionCombineRule(this.__wbg_ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} handle\n    * @param {number} rule\n    */\n    coSetRestitutionCombineRule(handle, rule) {\n        wasm.rawcolliderset_coSetRestitutionCombineRule(this.__wbg_ptr, handle, rule);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} groups\n    */\n    coSetCollisionGroups(handle, groups) {\n        wasm.rawcolliderset_coSetCollisionGroups(this.__wbg_ptr, handle, groups);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} groups\n    */\n    coSetSolverGroups(handle, groups) {\n        wasm.rawcolliderset_coSetSolverGroups(this.__wbg_ptr, handle, groups);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} hooks\n    */\n    coSetActiveHooks(handle, hooks) {\n        wasm.rawcolliderset_coSetActiveHooks(this.__wbg_ptr, handle, hooks);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} events\n    */\n    coSetActiveEvents(handle, events) {\n        wasm.rawcolliderset_coSetActiveEvents(this.__wbg_ptr, handle, events);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} types\n    */\n    coSetActiveCollisionTypes(handle, types) {\n        wasm.rawcolliderset_coSetActiveCollisionTypes(this.__wbg_ptr, handle, types);\n    }\n    /**\n    * @param {number} handle\n    * @param {RawShape} shape\n    */\n    coSetShape(handle, shape) {\n        _assertClass(shape, RawShape);\n        wasm.rawcolliderset_coSetShape(this.__wbg_ptr, handle, shape.__wbg_ptr);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} threshold\n    */\n    coSetContactForceEventThreshold(handle, threshold) {\n        wasm.rawcolliderset_coSetContactForceEventThreshold(this.__wbg_ptr, handle, threshold);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} density\n    */\n    coSetDensity(handle, density) {\n        wasm.rawcolliderset_coSetDensity(this.__wbg_ptr, handle, density);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} mass\n    */\n    coSetMass(handle, mass) {\n        wasm.rawcolliderset_coSetMass(this.__wbg_ptr, handle, mass);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} mass\n    * @param {RawVector} centerOfMass\n    * @param {RawVector} principalAngularInertia\n    * @param {RawRotation} angularInertiaFrame\n    */\n    coSetMassProperties(handle, mass, centerOfMass, principalAngularInertia, angularInertiaFrame) {\n        _assertClass(centerOfMass, RawVector);\n        _assertClass(principalAngularInertia, RawVector);\n        _assertClass(angularInertiaFrame, RawRotation);\n        wasm.rawcolliderset_coSetMassProperties(this.__wbg_ptr, handle, mass, centerOfMass.__wbg_ptr, principalAngularInertia.__wbg_ptr, angularInertiaFrame.__wbg_ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawcolliderset_new();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @returns {number}\n    */\n    len() {\n        const ret = wasm.rawcolliderset_len(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    contains(handle) {\n        const ret = wasm.rawcolliderset_contains(this.__wbg_ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * @param {boolean} enabled\n    * @param {RawShape} shape\n    * @param {RawVector} translation\n    * @param {RawRotation} rotation\n    * @param {number} massPropsMode\n    * @param {number} mass\n    * @param {RawVector} centerOfMass\n    * @param {RawVector} principalAngularInertia\n    * @param {RawRotation} angularInertiaFrame\n    * @param {number} density\n    * @param {number} friction\n    * @param {number} restitution\n    * @param {number} frictionCombineRule\n    * @param {number} restitutionCombineRule\n    * @param {boolean} isSensor\n    * @param {number} collisionGroups\n    * @param {number} solverGroups\n    * @param {number} activeCollisionTypes\n    * @param {number} activeHooks\n    * @param {number} activeEvents\n    * @param {number} contactForceEventThreshold\n    * @param {boolean} hasParent\n    * @param {number} parent\n    * @param {RawRigidBodySet} bodies\n    * @returns {number | undefined}\n    */\n    createCollider(enabled, shape, translation, rotation, massPropsMode, mass, centerOfMass, principalAngularInertia, angularInertiaFrame, density, friction, restitution, frictionCombineRule, restitutionCombineRule, isSensor, collisionGroups, solverGroups, activeCollisionTypes, activeHooks, activeEvents, contactForceEventThreshold, hasParent, parent, bodies) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(shape, RawShape);\n            _assertClass(translation, RawVector);\n            _assertClass(rotation, RawRotation);\n            _assertClass(centerOfMass, RawVector);\n            _assertClass(principalAngularInertia, RawVector);\n            _assertClass(angularInertiaFrame, RawRotation);\n            _assertClass(bodies, RawRigidBodySet);\n            wasm.rawcolliderset_createCollider(retptr, this.__wbg_ptr, enabled, shape.__wbg_ptr, translation.__wbg_ptr, rotation.__wbg_ptr, massPropsMode, mass, centerOfMass.__wbg_ptr, principalAngularInertia.__wbg_ptr, angularInertiaFrame.__wbg_ptr, density, friction, restitution, frictionCombineRule, restitutionCombineRule, isSensor, collisionGroups, solverGroups, activeCollisionTypes, activeHooks, activeEvents, contactForceEventThreshold, hasParent, parent, bodies.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r2 = getFloat64Memory0()[retptr / 8 + 1];\n            return r0 === 0 ? undefined : r2;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Removes a collider from this set and wake-up the rigid-body it is attached to.\n    * @param {number} handle\n    * @param {RawIslandManager} islands\n    * @param {RawRigidBodySet} bodies\n    * @param {boolean} wakeUp\n    */\n    remove(handle, islands, bodies, wakeUp) {\n        _assertClass(islands, RawIslandManager);\n        _assertClass(bodies, RawRigidBodySet);\n        wasm.rawcolliderset_remove(this.__wbg_ptr, handle, islands.__wbg_ptr, bodies.__wbg_ptr, wakeUp);\n    }\n    /**\n    * Checks if a collider with the given integer handle exists.\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    isHandleValid(handle) {\n        const ret = wasm.rawcolliderset_contains(this.__wbg_ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Applies the given JavaScript function to the integer handle of each collider managed by this collider set.\n    *\n    * # Parameters\n    * - `f(handle)`: the function to apply to the integer handle of each collider managed by this collider set. Called as `f(handle)`.\n    * @param {Function} f\n    */\n    forEachColliderHandle(f) {\n        try {\n            wasm.rawcolliderset_forEachColliderHandle(this.__wbg_ptr, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n*/\nexport class RawContactForceEvent {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawContactForceEvent.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawcontactforceevent_free(ptr);\n    }\n    /**\n    * The first collider involved in the contact.\n    * @returns {number}\n    */\n    collider1() {\n        const ret = wasm.rawcharactercollision_handle(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * The second collider involved in the contact.\n    * @returns {number}\n    */\n    collider2() {\n        const ret = wasm.rawcontactforceevent_collider2(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * The sum of all the forces between the two colliders.\n    * @returns {RawVector}\n    */\n    total_force() {\n        const ret = wasm.rawcontactforceevent_total_force(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The sum of the magnitudes of each force between the two colliders.\n    *\n    * Note that this is **not** the same as the magnitude of `self.total_force`.\n    * Here we are summing the magnitude of all the forces, instead of taking\n    * the magnitude of their sum.\n    * @returns {number}\n    */\n    total_force_magnitude() {\n        const ret = wasm.rawcontactforceevent_total_force_magnitude(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * The world-space (unit) direction of the force with strongest magnitude.\n    * @returns {RawVector}\n    */\n    max_force_direction() {\n        const ret = wasm.rawcontactforceevent_max_force_direction(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The magnitude of the largest force at a contact point of this contact pair.\n    * @returns {number}\n    */\n    max_force_magnitude() {\n        const ret = wasm.rawcontactforceevent_max_force_magnitude(this.__wbg_ptr);\n        return ret;\n    }\n}\n/**\n*/\nexport class RawContactManifold {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawContactManifold.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawcontactmanifold_free(ptr);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal() {\n        const ret = wasm.rawcontactmanifold_normal(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    local_n1() {\n        const ret = wasm.rawcontactmanifold_local_n1(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    local_n2() {\n        const ret = wasm.rawcontactmanifold_local_n2(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    subshape1() {\n        const ret = wasm.rawcontactmanifold_subshape1(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    subshape2() {\n        const ret = wasm.rawcontactmanifold_subshape2(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    num_contacts() {\n        const ret = wasm.rawcontactmanifold_num_contacts(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} i\n    * @returns {RawVector | undefined}\n    */\n    contact_local_p1(i) {\n        const ret = wasm.rawcontactmanifold_contact_local_p1(this.__wbg_ptr, i);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * @param {number} i\n    * @returns {RawVector | undefined}\n    */\n    contact_local_p2(i) {\n        const ret = wasm.rawcontactmanifold_contact_local_p2(this.__wbg_ptr, i);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    contact_dist(i) {\n        const ret = wasm.rawcontactmanifold_contact_dist(this.__wbg_ptr, i);\n        return ret;\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    contact_fid1(i) {\n        const ret = wasm.rawcontactmanifold_contact_fid1(this.__wbg_ptr, i);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    contact_fid2(i) {\n        const ret = wasm.rawcontactmanifold_contact_fid2(this.__wbg_ptr, i);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    contact_impulse(i) {\n        const ret = wasm.rawcontactmanifold_contact_impulse(this.__wbg_ptr, i);\n        return ret;\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    contact_tangent_impulse_x(i) {\n        const ret = wasm.rawcontactmanifold_contact_tangent_impulse_x(this.__wbg_ptr, i);\n        return ret;\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    contact_tangent_impulse_y(i) {\n        const ret = wasm.rawcontactmanifold_contact_tangent_impulse_y(this.__wbg_ptr, i);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    num_solver_contacts() {\n        const ret = wasm.rawcontactmanifold_num_solver_contacts(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} i\n    * @returns {RawVector | undefined}\n    */\n    solver_contact_point(i) {\n        const ret = wasm.rawcontactmanifold_solver_contact_point(this.__wbg_ptr, i);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    solver_contact_dist(i) {\n        const ret = wasm.rawcontactmanifold_solver_contact_dist(this.__wbg_ptr, i);\n        return ret;\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    solver_contact_friction(i) {\n        const ret = wasm.rawcontactmanifold_solver_contact_friction(this.__wbg_ptr, i);\n        return ret;\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    solver_contact_restitution(i) {\n        const ret = wasm.rawcontactmanifold_solver_contact_restitution(this.__wbg_ptr, i);\n        return ret;\n    }\n    /**\n    * @param {number} i\n    * @returns {RawVector}\n    */\n    solver_contact_tangent_velocity(i) {\n        const ret = wasm.rawcontactmanifold_solver_contact_tangent_velocity(this.__wbg_ptr, i);\n        return RawVector.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawContactPair {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawContactPair.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawcontactpair_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    collider1() {\n        const ret = wasm.rawcontactpair_collider1(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    collider2() {\n        const ret = wasm.rawcontactpair_collider2(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    numContactManifolds() {\n        const ret = wasm.rawcontactpair_numContactManifolds(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} i\n    * @returns {RawContactManifold | undefined}\n    */\n    contactManifold(i) {\n        const ret = wasm.rawcontactpair_contactManifold(this.__wbg_ptr, i);\n        return ret === 0 ? undefined : RawContactManifold.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawDebugRenderPipeline {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawdebugrenderpipeline_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawdebugrenderpipeline_new();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @returns {Float32Array}\n    */\n    vertices() {\n        const ret = wasm.rawdebugrenderpipeline_vertices(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {Float32Array}\n    */\n    colors() {\n        const ret = wasm.rawdebugrenderpipeline_colors(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawImpulseJointSet} impulse_joints\n    * @param {RawMultibodyJointSet} multibody_joints\n    * @param {RawNarrowPhase} narrow_phase\n    */\n    render(bodies, colliders, impulse_joints, multibody_joints, narrow_phase) {\n        _assertClass(bodies, RawRigidBodySet);\n        _assertClass(colliders, RawColliderSet);\n        _assertClass(impulse_joints, RawImpulseJointSet);\n        _assertClass(multibody_joints, RawMultibodyJointSet);\n        _assertClass(narrow_phase, RawNarrowPhase);\n        wasm.rawdebugrenderpipeline_render(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, impulse_joints.__wbg_ptr, multibody_joints.__wbg_ptr, narrow_phase.__wbg_ptr);\n    }\n}\n/**\n*/\nexport class RawDeserializedWorld {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawDeserializedWorld.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawdeserializedworld_free(ptr);\n    }\n    /**\n    * @returns {RawVector | undefined}\n    */\n    takeGravity() {\n        const ret = wasm.rawdeserializedworld_takeGravity(this.__wbg_ptr);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawIntegrationParameters | undefined}\n    */\n    takeIntegrationParameters() {\n        const ret = wasm.rawdeserializedworld_takeIntegrationParameters(this.__wbg_ptr);\n        return ret === 0 ? undefined : RawIntegrationParameters.__wrap(ret);\n    }\n    /**\n    * @returns {RawIslandManager | undefined}\n    */\n    takeIslandManager() {\n        const ret = wasm.rawdeserializedworld_takeIslandManager(this.__wbg_ptr);\n        return ret === 0 ? undefined : RawIslandManager.__wrap(ret);\n    }\n    /**\n    * @returns {RawBroadPhase | undefined}\n    */\n    takeBroadPhase() {\n        const ret = wasm.rawdeserializedworld_takeBroadPhase(this.__wbg_ptr);\n        return ret === 0 ? undefined : RawBroadPhase.__wrap(ret);\n    }\n    /**\n    * @returns {RawNarrowPhase | undefined}\n    */\n    takeNarrowPhase() {\n        const ret = wasm.rawdeserializedworld_takeNarrowPhase(this.__wbg_ptr);\n        return ret === 0 ? undefined : RawNarrowPhase.__wrap(ret);\n    }\n    /**\n    * @returns {RawRigidBodySet | undefined}\n    */\n    takeBodies() {\n        const ret = wasm.rawdeserializedworld_takeBodies(this.__wbg_ptr);\n        return ret === 0 ? undefined : RawRigidBodySet.__wrap(ret);\n    }\n    /**\n    * @returns {RawColliderSet | undefined}\n    */\n    takeColliders() {\n        const ret = wasm.rawdeserializedworld_takeColliders(this.__wbg_ptr);\n        return ret === 0 ? undefined : RawColliderSet.__wrap(ret);\n    }\n    /**\n    * @returns {RawImpulseJointSet | undefined}\n    */\n    takeImpulseJoints() {\n        const ret = wasm.rawdeserializedworld_takeImpulseJoints(this.__wbg_ptr);\n        return ret === 0 ? undefined : RawImpulseJointSet.__wrap(ret);\n    }\n    /**\n    * @returns {RawMultibodyJointSet | undefined}\n    */\n    takeMultibodyJoints() {\n        const ret = wasm.rawdeserializedworld_takeMultibodyJoints(this.__wbg_ptr);\n        return ret === 0 ? undefined : RawMultibodyJointSet.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawDynamicRayCastVehicleController {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawdynamicraycastvehiclecontroller_free(ptr);\n    }\n    /**\n    * @param {number} chassis\n    */\n    constructor(chassis) {\n        const ret = wasm.rawdynamicraycastvehiclecontroller_new(chassis);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @returns {number}\n    */\n    current_vehicle_speed() {\n        const ret = wasm.rawdynamicraycastvehiclecontroller_current_vehicle_speed(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    chassis() {\n        const ret = wasm.rawdynamicraycastvehiclecontroller_chassis(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    index_up_axis() {\n        const ret = wasm.rawdynamicraycastvehiclecontroller_index_up_axis(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} axis\n    */\n    set_index_up_axis(axis) {\n        wasm.rawdynamicraycastvehiclecontroller_set_index_up_axis(this.__wbg_ptr, axis);\n    }\n    /**\n    * @returns {number}\n    */\n    index_forward_axis() {\n        const ret = wasm.rawdynamicraycastvehiclecontroller_index_forward_axis(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} axis\n    */\n    set_index_forward_axis(axis) {\n        wasm.rawdynamicraycastvehiclecontroller_set_index_forward_axis(this.__wbg_ptr, axis);\n    }\n    /**\n    * @param {RawVector} chassis_connection_cs\n    * @param {RawVector} direction_cs\n    * @param {RawVector} axle_cs\n    * @param {number} suspension_rest_length\n    * @param {number} radius\n    */\n    add_wheel(chassis_connection_cs, direction_cs, axle_cs, suspension_rest_length, radius) {\n        _assertClass(chassis_connection_cs, RawVector);\n        _assertClass(direction_cs, RawVector);\n        _assertClass(axle_cs, RawVector);\n        wasm.rawdynamicraycastvehiclecontroller_add_wheel(this.__wbg_ptr, chassis_connection_cs.__wbg_ptr, direction_cs.__wbg_ptr, axle_cs.__wbg_ptr, suspension_rest_length, radius);\n    }\n    /**\n    * @returns {number}\n    */\n    num_wheels() {\n        const ret = wasm.rawdynamicraycastvehiclecontroller_num_wheels(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} dt\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawQueryPipeline} queries\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {Function} filter_predicate\n    */\n    update_vehicle(dt, bodies, colliders, queries, filter_flags, filter_groups, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(queries, RawQueryPipeline);\n            wasm.rawdynamicraycastvehiclecontroller_update_vehicle(this.__wbg_ptr, dt, bodies.__wbg_ptr, colliders.__wbg_ptr, queries.__wbg_ptr, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, addBorrowedObject(filter_predicate));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {number} i\n    * @returns {RawVector | undefined}\n    */\n    wheel_chassis_connection_point_cs(i) {\n        const ret = wasm.rawdynamicraycastvehiclecontroller_wheel_chassis_connection_point_cs(this.__wbg_ptr, i);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * @param {number} i\n    * @param {RawVector} value\n    */\n    set_wheel_chassis_connection_point_cs(i, value) {\n        _assertClass(value, RawVector);\n        wasm.rawdynamicraycastvehiclecontroller_set_wheel_chassis_connection_point_cs(this.__wbg_ptr, i, value.__wbg_ptr);\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_suspension_rest_length(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_suspension_rest_length(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @param {number} value\n    */\n    set_wheel_suspension_rest_length(i, value) {\n        wasm.rawdynamicraycastvehiclecontroller_set_wheel_suspension_rest_length(this.__wbg_ptr, i, value);\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_max_suspension_travel(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_max_suspension_travel(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @param {number} value\n    */\n    set_wheel_max_suspension_travel(i, value) {\n        wasm.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_travel(this.__wbg_ptr, i, value);\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_radius(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_radius(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @param {number} value\n    */\n    set_wheel_radius(i, value) {\n        wasm.rawdynamicraycastvehiclecontroller_set_wheel_radius(this.__wbg_ptr, i, value);\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_suspension_stiffness(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_suspension_stiffness(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @param {number} value\n    */\n    set_wheel_suspension_stiffness(i, value) {\n        wasm.rawdynamicraycastvehiclecontroller_set_wheel_suspension_stiffness(this.__wbg_ptr, i, value);\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_suspension_compression(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_suspension_compression(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @param {number} value\n    */\n    set_wheel_suspension_compression(i, value) {\n        wasm.rawdynamicraycastvehiclecontroller_set_wheel_suspension_compression(this.__wbg_ptr, i, value);\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_suspension_relaxation(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_suspension_relaxation(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @param {number} value\n    */\n    set_wheel_suspension_relaxation(i, value) {\n        wasm.rawdynamicraycastvehiclecontroller_set_wheel_suspension_relaxation(this.__wbg_ptr, i, value);\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_max_suspension_force(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_max_suspension_force(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @param {number} value\n    */\n    set_wheel_max_suspension_force(i, value) {\n        wasm.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_force(this.__wbg_ptr, i, value);\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_brake(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_brake(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @param {number} value\n    */\n    set_wheel_brake(i, value) {\n        wasm.rawdynamicraycastvehiclecontroller_set_wheel_brake(this.__wbg_ptr, i, value);\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_steering(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_steering(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @param {number} value\n    */\n    set_wheel_steering(i, value) {\n        wasm.rawdynamicraycastvehiclecontroller_set_wheel_steering(this.__wbg_ptr, i, value);\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_engine_force(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_engine_force(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @param {number} value\n    */\n    set_wheel_engine_force(i, value) {\n        wasm.rawdynamicraycastvehiclecontroller_set_wheel_engine_force(this.__wbg_ptr, i, value);\n    }\n    /**\n    * @param {number} i\n    * @returns {RawVector | undefined}\n    */\n    wheel_direction_cs(i) {\n        const ret = wasm.rawdynamicraycastvehiclecontroller_wheel_direction_cs(this.__wbg_ptr, i);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * @param {number} i\n    * @param {RawVector} value\n    */\n    set_wheel_direction_cs(i, value) {\n        _assertClass(value, RawVector);\n        wasm.rawdynamicraycastvehiclecontroller_set_wheel_direction_cs(this.__wbg_ptr, i, value.__wbg_ptr);\n    }\n    /**\n    * @param {number} i\n    * @returns {RawVector | undefined}\n    */\n    wheel_axle_cs(i) {\n        const ret = wasm.rawdynamicraycastvehiclecontroller_wheel_axle_cs(this.__wbg_ptr, i);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * @param {number} i\n    * @param {RawVector} value\n    */\n    set_wheel_axle_cs(i, value) {\n        _assertClass(value, RawVector);\n        wasm.rawdynamicraycastvehiclecontroller_set_wheel_axle_cs(this.__wbg_ptr, i, value.__wbg_ptr);\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_friction_slip(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_friction_slip(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @param {number} value\n    */\n    set_wheel_friction_slip(i, value) {\n        wasm.rawdynamicraycastvehiclecontroller_set_wheel_friction_slip(this.__wbg_ptr, i, value);\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_side_friction_stiffness(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_side_friction_stiffness(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @param {number} stiffness\n    */\n    set_wheel_side_friction_stiffness(i, stiffness) {\n        wasm.rawdynamicraycastvehiclecontroller_set_wheel_side_friction_stiffness(this.__wbg_ptr, i, stiffness);\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_rotation(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_rotation(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_forward_impulse(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_forward_impulse(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_side_impulse(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_side_impulse(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_suspension_force(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_suspension_force(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @returns {RawVector | undefined}\n    */\n    wheel_contact_normal_ws(i) {\n        const ret = wasm.rawdynamicraycastvehiclecontroller_wheel_contact_normal_ws(this.__wbg_ptr, i);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * @param {number} i\n    * @returns {RawVector | undefined}\n    */\n    wheel_contact_point_ws(i) {\n        const ret = wasm.rawdynamicraycastvehiclecontroller_wheel_contact_point_ws(this.__wbg_ptr, i);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_suspension_length(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_suspension_length(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} i\n    * @returns {RawVector | undefined}\n    */\n    wheel_hard_point_ws(i) {\n        const ret = wasm.rawdynamicraycastvehiclecontroller_wheel_hard_point_ws(this.__wbg_ptr, i);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * @param {number} i\n    * @returns {boolean}\n    */\n    wheel_is_in_contact(i) {\n        const ret = wasm.rawdynamicraycastvehiclecontroller_wheel_is_in_contact(this.__wbg_ptr, i);\n        return ret !== 0;\n    }\n    /**\n    * @param {number} i\n    * @returns {number | undefined}\n    */\n    wheel_ground_object(i) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawdynamicraycastvehiclecontroller_wheel_ground_object(retptr, this.__wbg_ptr, i);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r2 = getFloat64Memory0()[retptr / 8 + 1];\n            return r0 === 0 ? undefined : r2;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n* A structure responsible for collecting events generated\n* by the physics engine.\n*/\nexport class RawEventQueue {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_raweventqueue_free(ptr);\n    }\n    /**\n    * Creates a new event collector.\n    *\n    * # Parameters\n    * - `autoDrain`: setting this to `true` is strongly recommended. If true, the collector will\n    * be automatically drained before each `world.step(collector)`. If false, the collector will\n    * keep all events in memory unless it is manually drained/cleared; this may lead to unbounded use of\n    * RAM if no drain is performed.\n    * @param {boolean} autoDrain\n    */\n    constructor(autoDrain) {\n        const ret = wasm.raweventqueue_new(autoDrain);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Applies the given javascript closure on each collision event of this collector, then clear\n    * the internal collision event buffer.\n    *\n    * # Parameters\n    * - `f(handle1, handle2, started)`:  JavaScript closure applied to each collision event. The\n    * closure should take three arguments: two integers representing the handles of the colliders\n    * involved in the collision, and a boolean indicating if the collision started (true) or stopped\n    * (false).\n    * @param {Function} f\n    */\n    drainCollisionEvents(f) {\n        try {\n            wasm.raweventqueue_drainCollisionEvents(this.__wbg_ptr, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {Function} f\n    */\n    drainContactForceEvents(f) {\n        try {\n            wasm.raweventqueue_drainContactForceEvents(this.__wbg_ptr, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Removes all events contained by this collector.\n    */\n    clear() {\n        wasm.raweventqueue_clear(this.__wbg_ptr);\n    }\n}\n/**\n*/\nexport class RawGenericJoint {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawGenericJoint.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawgenericjoint_free(ptr);\n    }\n    /**\n    * Creates a new joint descriptor that builds generic joints.\n    *\n    * Generic joints allow arbitrary axes of freedom to be selected\n    * for the joint from the available 6 degrees of freedom.\n    * @param {RawVector} anchor1\n    * @param {RawVector} anchor2\n    * @param {RawVector} axis\n    * @param {number} lockedAxes\n    * @returns {RawGenericJoint | undefined}\n    */\n    static generic(anchor1, anchor2, axis, lockedAxes) {\n        _assertClass(anchor1, RawVector);\n        _assertClass(anchor2, RawVector);\n        _assertClass(axis, RawVector);\n        const ret = wasm.rawgenericjoint_generic(anchor1.__wbg_ptr, anchor2.__wbg_ptr, axis.__wbg_ptr, lockedAxes);\n        return ret === 0 ? undefined : RawGenericJoint.__wrap(ret);\n    }\n    /**\n    * @param {number} rest_length\n    * @param {number} stiffness\n    * @param {number} damping\n    * @param {RawVector} anchor1\n    * @param {RawVector} anchor2\n    * @returns {RawGenericJoint}\n    */\n    static spring(rest_length, stiffness, damping, anchor1, anchor2) {\n        _assertClass(anchor1, RawVector);\n        _assertClass(anchor2, RawVector);\n        const ret = wasm.rawgenericjoint_spring(rest_length, stiffness, damping, anchor1.__wbg_ptr, anchor2.__wbg_ptr);\n        return RawGenericJoint.__wrap(ret);\n    }\n    /**\n    * @param {number} length\n    * @param {RawVector} anchor1\n    * @param {RawVector} anchor2\n    * @returns {RawGenericJoint}\n    */\n    static rope(length, anchor1, anchor2) {\n        _assertClass(anchor1, RawVector);\n        _assertClass(anchor2, RawVector);\n        const ret = wasm.rawgenericjoint_rope(length, anchor1.__wbg_ptr, anchor2.__wbg_ptr);\n        return RawGenericJoint.__wrap(ret);\n    }\n    /**\n    * Create a new joint descriptor that builds spherical joints.\n    *\n    * A spherical joints allows three relative rotational degrees of freedom\n    * by preventing any relative translation between the anchors of the\n    * two attached rigid-bodies.\n    * @param {RawVector} anchor1\n    * @param {RawVector} anchor2\n    * @returns {RawGenericJoint}\n    */\n    static spherical(anchor1, anchor2) {\n        _assertClass(anchor1, RawVector);\n        _assertClass(anchor2, RawVector);\n        const ret = wasm.rawgenericjoint_spherical(anchor1.__wbg_ptr, anchor2.__wbg_ptr);\n        return RawGenericJoint.__wrap(ret);\n    }\n    /**\n    * Creates a new joint descriptor that builds a Prismatic joint.\n    *\n    * A prismatic joint removes all the degrees of freedom between the\n    * affected bodies, except for the translation along one axis.\n    *\n    * Returns `None` if any of the provided axes cannot be normalized.\n    * @param {RawVector} anchor1\n    * @param {RawVector} anchor2\n    * @param {RawVector} axis\n    * @param {boolean} limitsEnabled\n    * @param {number} limitsMin\n    * @param {number} limitsMax\n    * @returns {RawGenericJoint | undefined}\n    */\n    static prismatic(anchor1, anchor2, axis, limitsEnabled, limitsMin, limitsMax) {\n        _assertClass(anchor1, RawVector);\n        _assertClass(anchor2, RawVector);\n        _assertClass(axis, RawVector);\n        const ret = wasm.rawgenericjoint_prismatic(anchor1.__wbg_ptr, anchor2.__wbg_ptr, axis.__wbg_ptr, limitsEnabled, limitsMin, limitsMax);\n        return ret === 0 ? undefined : RawGenericJoint.__wrap(ret);\n    }\n    /**\n    * Creates a new joint descriptor that builds a Fixed joint.\n    *\n    * A fixed joint removes all the degrees of freedom between the affected bodies.\n    * @param {RawVector} anchor1\n    * @param {RawRotation} axes1\n    * @param {RawVector} anchor2\n    * @param {RawRotation} axes2\n    * @returns {RawGenericJoint}\n    */\n    static fixed(anchor1, axes1, anchor2, axes2) {\n        _assertClass(anchor1, RawVector);\n        _assertClass(axes1, RawRotation);\n        _assertClass(anchor2, RawVector);\n        _assertClass(axes2, RawRotation);\n        const ret = wasm.rawgenericjoint_fixed(anchor1.__wbg_ptr, axes1.__wbg_ptr, anchor2.__wbg_ptr, axes2.__wbg_ptr);\n        return RawGenericJoint.__wrap(ret);\n    }\n    /**\n    * Create a new joint descriptor that builds Revolute joints.\n    *\n    * A revolute joint removes all degrees of freedom between the affected\n    * bodies except for the rotation along one axis.\n    * @param {RawVector} anchor1\n    * @param {RawVector} anchor2\n    * @param {RawVector} axis\n    * @returns {RawGenericJoint | undefined}\n    */\n    static revolute(anchor1, anchor2, axis) {\n        _assertClass(anchor1, RawVector);\n        _assertClass(anchor2, RawVector);\n        _assertClass(axis, RawVector);\n        const ret = wasm.rawgenericjoint_revolute(anchor1.__wbg_ptr, anchor2.__wbg_ptr, axis.__wbg_ptr);\n        return ret === 0 ? undefined : RawGenericJoint.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawImpulseJointSet {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawImpulseJointSet.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawimpulsejointset_free(ptr);\n    }\n    /**\n    * The type of this joint.\n    * @param {number} handle\n    * @returns {RawJointType}\n    */\n    jointType(handle) {\n        const ret = wasm.rawimpulsejointset_jointType(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * The unique integer identifier of the first rigid-body this joint it attached to.\n    * @param {number} handle\n    * @returns {number}\n    */\n    jointBodyHandle1(handle) {\n        const ret = wasm.rawimpulsejointset_jointBodyHandle1(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * The unique integer identifier of the second rigid-body this joint is attached to.\n    * @param {number} handle\n    * @returns {number}\n    */\n    jointBodyHandle2(handle) {\n        const ret = wasm.rawimpulsejointset_jointBodyHandle2(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * The angular part of the joint’s local frame relative to the first rigid-body it is attached to.\n    * @param {number} handle\n    * @returns {RawRotation}\n    */\n    jointFrameX1(handle) {\n        const ret = wasm.rawimpulsejointset_jointFrameX1(this.__wbg_ptr, handle);\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * The angular part of the joint’s local frame relative to the second rigid-body it is attached to.\n    * @param {number} handle\n    * @returns {RawRotation}\n    */\n    jointFrameX2(handle) {\n        const ret = wasm.rawimpulsejointset_jointFrameX2(this.__wbg_ptr, handle);\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * The position of the first anchor of this joint.\n    *\n    * The first anchor gives the position of the points application point on the\n    * local frame of the first rigid-body it is attached to.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    jointAnchor1(handle) {\n        const ret = wasm.rawimpulsejointset_jointAnchor1(this.__wbg_ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The position of the second anchor of this joint.\n    *\n    * The second anchor gives the position of the points application point on the\n    * local frame of the second rigid-body it is attached to.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    jointAnchor2(handle) {\n        const ret = wasm.rawimpulsejointset_jointAnchor2(this.__wbg_ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * Sets the position of the first local anchor\n    * @param {number} handle\n    * @param {RawVector} newPos\n    */\n    jointSetAnchor1(handle, newPos) {\n        _assertClass(newPos, RawVector);\n        wasm.rawimpulsejointset_jointSetAnchor1(this.__wbg_ptr, handle, newPos.__wbg_ptr);\n    }\n    /**\n    * Sets the position of the second local anchor\n    * @param {number} handle\n    * @param {RawVector} newPos\n    */\n    jointSetAnchor2(handle, newPos) {\n        _assertClass(newPos, RawVector);\n        wasm.rawimpulsejointset_jointSetAnchor2(this.__wbg_ptr, handle, newPos.__wbg_ptr);\n    }\n    /**\n    * Are contacts between the rigid-bodies attached by this joint enabled?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    jointContactsEnabled(handle) {\n        const ret = wasm.rawimpulsejointset_jointContactsEnabled(this.__wbg_ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Sets whether contacts are enabled between the rigid-bodies attached by this joint.\n    * @param {number} handle\n    * @param {boolean} enabled\n    */\n    jointSetContactsEnabled(handle, enabled) {\n        wasm.rawimpulsejointset_jointSetContactsEnabled(this.__wbg_ptr, handle, enabled);\n    }\n    /**\n    * Are the limits for this joint enabled?\n    * @param {number} handle\n    * @param {RawJointAxis} axis\n    * @returns {boolean}\n    */\n    jointLimitsEnabled(handle, axis) {\n        const ret = wasm.rawimpulsejointset_jointLimitsEnabled(this.__wbg_ptr, handle, axis);\n        return ret !== 0;\n    }\n    /**\n    * Return the lower limit along the given joint axis.\n    * @param {number} handle\n    * @param {RawJointAxis} axis\n    * @returns {number}\n    */\n    jointLimitsMin(handle, axis) {\n        const ret = wasm.rawimpulsejointset_jointLimitsMin(this.__wbg_ptr, handle, axis);\n        return ret;\n    }\n    /**\n    * If this is a prismatic joint, returns its upper limit.\n    * @param {number} handle\n    * @param {RawJointAxis} axis\n    * @returns {number}\n    */\n    jointLimitsMax(handle, axis) {\n        const ret = wasm.rawimpulsejointset_jointLimitsMax(this.__wbg_ptr, handle, axis);\n        return ret;\n    }\n    /**\n    * Enables and sets the joint limits\n    * @param {number} handle\n    * @param {RawJointAxis} axis\n    * @param {number} min\n    * @param {number} max\n    */\n    jointSetLimits(handle, axis, min, max) {\n        wasm.rawimpulsejointset_jointSetLimits(this.__wbg_ptr, handle, axis, min, max);\n    }\n    /**\n    * @param {number} handle\n    * @param {RawJointAxis} axis\n    * @param {RawMotorModel} model\n    */\n    jointConfigureMotorModel(handle, axis, model) {\n        wasm.rawimpulsejointset_jointConfigureMotorModel(this.__wbg_ptr, handle, axis, model);\n    }\n    /**\n    * @param {number} handle\n    * @param {RawJointAxis} axis\n    * @param {number} targetVel\n    * @param {number} factor\n    */\n    jointConfigureMotorVelocity(handle, axis, targetVel, factor) {\n        wasm.rawimpulsejointset_jointConfigureMotorVelocity(this.__wbg_ptr, handle, axis, targetVel, factor);\n    }\n    /**\n    * @param {number} handle\n    * @param {RawJointAxis} axis\n    * @param {number} targetPos\n    * @param {number} stiffness\n    * @param {number} damping\n    */\n    jointConfigureMotorPosition(handle, axis, targetPos, stiffness, damping) {\n        wasm.rawimpulsejointset_jointConfigureMotorPosition(this.__wbg_ptr, handle, axis, targetPos, stiffness, damping);\n    }\n    /**\n    * @param {number} handle\n    * @param {RawJointAxis} axis\n    * @param {number} targetPos\n    * @param {number} targetVel\n    * @param {number} stiffness\n    * @param {number} damping\n    */\n    jointConfigureMotor(handle, axis, targetPos, targetVel, stiffness, damping) {\n        wasm.rawimpulsejointset_jointConfigureMotor(this.__wbg_ptr, handle, axis, targetPos, targetVel, stiffness, damping);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawimpulsejointset_new();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @param {RawGenericJoint} params\n    * @param {number} parent1\n    * @param {number} parent2\n    * @param {boolean} wake_up\n    * @returns {number}\n    */\n    createJoint(params, parent1, parent2, wake_up) {\n        _assertClass(params, RawGenericJoint);\n        const ret = wasm.rawimpulsejointset_createJoint(this.__wbg_ptr, params.__wbg_ptr, parent1, parent2, wake_up);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} wakeUp\n    */\n    remove(handle, wakeUp) {\n        wasm.rawimpulsejointset_remove(this.__wbg_ptr, handle, wakeUp);\n    }\n    /**\n    * @returns {number}\n    */\n    len() {\n        const ret = wasm.rawimpulsejointset_len(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    contains(handle) {\n        const ret = wasm.rawimpulsejointset_contains(this.__wbg_ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Applies the given JavaScript function to the integer handle of each joint managed by this physics world.\n    *\n    * # Parameters\n    * - `f(handle)`: the function to apply to the integer handle of each joint managed by this set. Called as `f(collider)`.\n    * @param {Function} f\n    */\n    forEachJointHandle(f) {\n        try {\n            wasm.rawimpulsejointset_forEachJointHandle(this.__wbg_ptr, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Applies the given JavaScript function to the integer handle of each joint attached to the given rigid-body.\n    *\n    * # Parameters\n    * - `f(handle)`: the function to apply to the integer handle of each joint attached to the rigid-body. Called as `f(collider)`.\n    * @param {number} body\n    * @param {Function} f\n    */\n    forEachJointAttachedToRigidBody(body, f) {\n        try {\n            wasm.rawimpulsejointset_forEachJointAttachedToRigidBody(this.__wbg_ptr, body, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n*/\nexport class RawIntegrationParameters {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawIntegrationParameters.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawintegrationparameters_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawintegrationparameters_new();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @returns {number}\n    */\n    get dt() {\n        const ret = wasm.rawintegrationparameters_dt(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get erp() {\n        const ret = wasm.rawintegrationparameters_erp(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get allowedLinearError() {\n        const ret = wasm.rawcontactforceevent_total_force_magnitude(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get predictionDistance() {\n        const ret = wasm.rawdynamicraycastvehiclecontroller_current_vehicle_speed(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get numSolverIterations() {\n        const ret = wasm.rawintegrationparameters_numSolverIterations(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get numAdditionalFrictionIterations() {\n        const ret = wasm.rawintegrationparameters_numAdditionalFrictionIterations(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get numInternalPgsIterations() {\n        const ret = wasm.rawintegrationparameters_numInternalPgsIterations(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get minIslandSize() {\n        const ret = wasm.rawdynamicraycastvehiclecontroller_index_up_axis(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get maxCcdSubsteps() {\n        const ret = wasm.rawdynamicraycastvehiclecontroller_index_forward_axis(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} value\n    */\n    set dt(value) {\n        wasm.rawintegrationparameters_set_dt(this.__wbg_ptr, value);\n    }\n    /**\n    * @param {number} value\n    */\n    set erp(value) {\n        wasm.rawintegrationparameters_set_erp(this.__wbg_ptr, value);\n    }\n    /**\n    * @param {number} value\n    */\n    set allowedLinearError(value) {\n        wasm.rawintegrationparameters_set_allowedLinearError(this.__wbg_ptr, value);\n    }\n    /**\n    * @param {number} value\n    */\n    set predictionDistance(value) {\n        wasm.rawintegrationparameters_set_predictionDistance(this.__wbg_ptr, value);\n    }\n    /**\n    * @param {number} value\n    */\n    set numSolverIterations(value) {\n        wasm.rawintegrationparameters_set_numSolverIterations(this.__wbg_ptr, value);\n    }\n    /**\n    * @param {number} value\n    */\n    set numAdditionalFrictionIterations(value) {\n        wasm.rawintegrationparameters_set_numAdditionalFrictionIterations(this.__wbg_ptr, value);\n    }\n    /**\n    * @param {number} value\n    */\n    set numInternalPgsIterations(value) {\n        wasm.rawintegrationparameters_set_numInternalPgsIterations(this.__wbg_ptr, value);\n    }\n    /**\n    * @param {number} value\n    */\n    set minIslandSize(value) {\n        wasm.rawdynamicraycastvehiclecontroller_set_index_up_axis(this.__wbg_ptr, value);\n    }\n    /**\n    * @param {number} value\n    */\n    set maxCcdSubsteps(value) {\n        wasm.rawdynamicraycastvehiclecontroller_set_index_forward_axis(this.__wbg_ptr, value);\n    }\n    /**\n    */\n    switchToStandardPgsSolver() {\n        wasm.rawintegrationparameters_switchToStandardPgsSolver(this.__wbg_ptr);\n    }\n    /**\n    */\n    switchToSmallStepsPgsSolver() {\n        wasm.rawintegrationparameters_switchToSmallStepsPgsSolver(this.__wbg_ptr);\n    }\n}\n/**\n*/\nexport class RawIslandManager {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawIslandManager.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawislandmanager_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawislandmanager_new();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Applies the given JavaScript function to the integer handle of each active rigid-body\n    * managed by this island manager.\n    *\n    * After a short time of inactivity, a rigid-body is automatically deactivated (\"asleep\") by\n    * the physics engine in order to save computational power. A sleeping rigid-body never moves\n    * unless it is moved manually by the user.\n    *\n    * # Parameters\n    * - `f(handle)`: the function to apply to the integer handle of each active rigid-body managed by this\n    *   set. Called as `f(collider)`.\n    * @param {Function} f\n    */\n    forEachActiveRigidBodyHandle(f) {\n        try {\n            wasm.rawislandmanager_forEachActiveRigidBodyHandle(this.__wbg_ptr, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n*/\nexport class RawKinematicCharacterController {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawkinematiccharactercontroller_free(ptr);\n    }\n    /**\n    * @param {number} offset\n    */\n    constructor(offset) {\n        const ret = wasm.rawkinematiccharactercontroller_new(offset);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @returns {RawVector}\n    */\n    up() {\n        const ret = wasm.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} vector\n    */\n    setUp(vector) {\n        _assertClass(vector, RawVector);\n        wasm.rawkinematiccharactercontroller_setUp(this.__wbg_ptr, vector.__wbg_ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    offset() {\n        const ret = wasm.rawintegrationparameters_dt(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @param {number} value\n    */\n    setOffset(value) {\n        wasm.rawkinematiccharactercontroller_setOffset(this.__wbg_ptr, value);\n    }\n    /**\n    * @returns {boolean}\n    */\n    slideEnabled() {\n        const ret = wasm.rawkinematiccharactercontroller_slideEnabled(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {boolean} enabled\n    */\n    setSlideEnabled(enabled) {\n        wasm.rawkinematiccharactercontroller_setSlideEnabled(this.__wbg_ptr, enabled);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    autostepMaxHeight() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawkinematiccharactercontroller_autostepMaxHeight(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    autostepMinWidth() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawkinematiccharactercontroller_autostepMinWidth(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {boolean | undefined}\n    */\n    autostepIncludesDynamicBodies() {\n        const ret = wasm.rawkinematiccharactercontroller_autostepIncludesDynamicBodies(this.__wbg_ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    * @returns {boolean}\n    */\n    autostepEnabled() {\n        const ret = wasm.rawkinematiccharactercontroller_autostepEnabled(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {number} maxHeight\n    * @param {number} minWidth\n    * @param {boolean} includeDynamicBodies\n    */\n    enableAutostep(maxHeight, minWidth, includeDynamicBodies) {\n        wasm.rawkinematiccharactercontroller_enableAutostep(this.__wbg_ptr, maxHeight, minWidth, includeDynamicBodies);\n    }\n    /**\n    */\n    disableAutostep() {\n        wasm.rawkinematiccharactercontroller_disableAutostep(this.__wbg_ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    maxSlopeClimbAngle() {\n        const ret = wasm.rawkinematiccharactercontroller_maxSlopeClimbAngle(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @param {number} angle\n    */\n    setMaxSlopeClimbAngle(angle) {\n        wasm.rawkinematiccharactercontroller_setMaxSlopeClimbAngle(this.__wbg_ptr, angle);\n    }\n    /**\n    * @returns {number}\n    */\n    minSlopeSlideAngle() {\n        const ret = wasm.rawkinematiccharactercontroller_minSlopeSlideAngle(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @param {number} angle\n    */\n    setMinSlopeSlideAngle(angle) {\n        wasm.rawkinematiccharactercontroller_setMinSlopeSlideAngle(this.__wbg_ptr, angle);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    snapToGroundDistance() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawkinematiccharactercontroller_snapToGroundDistance(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} distance\n    */\n    enableSnapToGround(distance) {\n        wasm.rawkinematiccharactercontroller_enableSnapToGround(this.__wbg_ptr, distance);\n    }\n    /**\n    */\n    disableSnapToGround() {\n        wasm.rawkinematiccharactercontroller_disableSnapToGround(this.__wbg_ptr);\n    }\n    /**\n    * @returns {boolean}\n    */\n    snapToGroundEnabled() {\n        const ret = wasm.rawkinematiccharactercontroller_snapToGroundEnabled(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {number} dt\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawQueryPipeline} queries\n    * @param {number} collider_handle\n    * @param {RawVector} desired_translation_delta\n    * @param {boolean} apply_impulses_to_dynamic_bodies\n    * @param {number | undefined} character_mass\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {Function} filter_predicate\n    */\n    computeColliderMovement(dt, bodies, colliders, queries, collider_handle, desired_translation_delta, apply_impulses_to_dynamic_bodies, character_mass, filter_flags, filter_groups, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(queries, RawQueryPipeline);\n            _assertClass(desired_translation_delta, RawVector);\n            wasm.rawkinematiccharactercontroller_computeColliderMovement(this.__wbg_ptr, dt, bodies.__wbg_ptr, colliders.__wbg_ptr, queries.__wbg_ptr, collider_handle, desired_translation_delta.__wbg_ptr, apply_impulses_to_dynamic_bodies, !isLikeNone(character_mass), isLikeNone(character_mass) ? 0 : character_mass, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, addBorrowedObject(filter_predicate));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @returns {RawVector}\n    */\n    computedMovement() {\n        const ret = wasm.rawkinematiccharactercontroller_computedMovement(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {boolean}\n    */\n    computedGrounded() {\n        const ret = wasm.rawkinematiccharactercontroller_computedGrounded(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @returns {number}\n    */\n    numComputedCollisions() {\n        const ret = wasm.rawkinematiccharactercontroller_numComputedCollisions(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} i\n    * @param {RawCharacterCollision} collision\n    * @returns {boolean}\n    */\n    computedCollision(i, collision) {\n        _assertClass(collision, RawCharacterCollision);\n        const ret = wasm.rawkinematiccharactercontroller_computedCollision(this.__wbg_ptr, i, collision.__wbg_ptr);\n        return ret !== 0;\n    }\n}\n/**\n*/\nexport class RawMultibodyJointSet {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawMultibodyJointSet.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawmultibodyjointset_free(ptr);\n    }\n    /**\n    * The type of this joint.\n    * @param {number} handle\n    * @returns {RawJointType}\n    */\n    jointType(handle) {\n        const ret = wasm.rawmultibodyjointset_jointType(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * The angular part of the joint’s local frame relative to the first rigid-body it is attached to.\n    * @param {number} handle\n    * @returns {RawRotation}\n    */\n    jointFrameX1(handle) {\n        const ret = wasm.rawmultibodyjointset_jointFrameX1(this.__wbg_ptr, handle);\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * The angular part of the joint’s local frame relative to the second rigid-body it is attached to.\n    * @param {number} handle\n    * @returns {RawRotation}\n    */\n    jointFrameX2(handle) {\n        const ret = wasm.rawmultibodyjointset_jointFrameX2(this.__wbg_ptr, handle);\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * The position of the first anchor of this joint.\n    *\n    * The first anchor gives the position of the points application point on the\n    * local frame of the first rigid-body it is attached to.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    jointAnchor1(handle) {\n        const ret = wasm.rawmultibodyjointset_jointAnchor1(this.__wbg_ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The position of the second anchor of this joint.\n    *\n    * The second anchor gives the position of the points application point on the\n    * local frame of the second rigid-body it is attached to.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    jointAnchor2(handle) {\n        const ret = wasm.rawmultibodyjointset_jointAnchor2(this.__wbg_ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * Are contacts between the rigid-bodies attached by this joint enabled?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    jointContactsEnabled(handle) {\n        const ret = wasm.rawmultibodyjointset_jointContactsEnabled(this.__wbg_ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Sets whether contacts are enabled between the rigid-bodies attached by this joint.\n    * @param {number} handle\n    * @param {boolean} enabled\n    */\n    jointSetContactsEnabled(handle, enabled) {\n        wasm.rawmultibodyjointset_jointSetContactsEnabled(this.__wbg_ptr, handle, enabled);\n    }\n    /**\n    * Are the limits for this joint enabled?\n    * @param {number} handle\n    * @param {RawJointAxis} axis\n    * @returns {boolean}\n    */\n    jointLimitsEnabled(handle, axis) {\n        const ret = wasm.rawmultibodyjointset_jointLimitsEnabled(this.__wbg_ptr, handle, axis);\n        return ret !== 0;\n    }\n    /**\n    * Return the lower limit along the given joint axis.\n    * @param {number} handle\n    * @param {RawJointAxis} axis\n    * @returns {number}\n    */\n    jointLimitsMin(handle, axis) {\n        const ret = wasm.rawmultibodyjointset_jointLimitsMin(this.__wbg_ptr, handle, axis);\n        return ret;\n    }\n    /**\n    * If this is a prismatic joint, returns its upper limit.\n    * @param {number} handle\n    * @param {RawJointAxis} axis\n    * @returns {number}\n    */\n    jointLimitsMax(handle, axis) {\n        const ret = wasm.rawmultibodyjointset_jointLimitsMax(this.__wbg_ptr, handle, axis);\n        return ret;\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawmultibodyjointset_new();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @param {RawGenericJoint} params\n    * @param {number} parent1\n    * @param {number} parent2\n    * @param {boolean} wakeUp\n    * @returns {number}\n    */\n    createJoint(params, parent1, parent2, wakeUp) {\n        _assertClass(params, RawGenericJoint);\n        const ret = wasm.rawmultibodyjointset_createJoint(this.__wbg_ptr, params.__wbg_ptr, parent1, parent2, wakeUp);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} wakeUp\n    */\n    remove(handle, wakeUp) {\n        wasm.rawmultibodyjointset_remove(this.__wbg_ptr, handle, wakeUp);\n    }\n    /**\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    contains(handle) {\n        const ret = wasm.rawmultibodyjointset_contains(this.__wbg_ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Applies the given JavaScript function to the integer handle of each joint managed by this physics world.\n    *\n    * # Parameters\n    * - `f(handle)`: the function to apply to the integer handle of each joint managed by this set. Called as `f(collider)`.\n    * @param {Function} f\n    */\n    forEachJointHandle(f) {\n        try {\n            wasm.rawmultibodyjointset_forEachJointHandle(this.__wbg_ptr, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Applies the given JavaScript function to the integer handle of each joint attached to the given rigid-body.\n    *\n    * # Parameters\n    * - `f(handle)`: the function to apply to the integer handle of each joint attached to the rigid-body. Called as `f(collider)`.\n    * @param {number} body\n    * @param {Function} f\n    */\n    forEachJointAttachedToRigidBody(body, f) {\n        try {\n            wasm.rawmultibodyjointset_forEachJointAttachedToRigidBody(this.__wbg_ptr, body, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n*/\nexport class RawNarrowPhase {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawNarrowPhase.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawnarrowphase_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawnarrowphase_new();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @param {number} handle1\n    * @param {Function} f\n    */\n    contact_pairs_with(handle1, f) {\n        wasm.rawnarrowphase_contact_pairs_with(this.__wbg_ptr, handle1, addHeapObject(f));\n    }\n    /**\n    * @param {number} handle1\n    * @param {number} handle2\n    * @returns {RawContactPair | undefined}\n    */\n    contact_pair(handle1, handle2) {\n        const ret = wasm.rawnarrowphase_contact_pair(this.__wbg_ptr, handle1, handle2);\n        return ret === 0 ? undefined : RawContactPair.__wrap(ret);\n    }\n    /**\n    * @param {number} handle1\n    * @param {Function} f\n    */\n    intersection_pairs_with(handle1, f) {\n        wasm.rawnarrowphase_intersection_pairs_with(this.__wbg_ptr, handle1, addHeapObject(f));\n    }\n    /**\n    * @param {number} handle1\n    * @param {number} handle2\n    * @returns {boolean}\n    */\n    intersection_pair(handle1, handle2) {\n        const ret = wasm.rawnarrowphase_intersection_pair(this.__wbg_ptr, handle1, handle2);\n        return ret !== 0;\n    }\n}\n/**\n*/\nexport class RawPhysicsPipeline {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawphysicspipeline_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawphysicspipeline_new();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @param {RawVector} gravity\n    * @param {RawIntegrationParameters} integrationParameters\n    * @param {RawIslandManager} islands\n    * @param {RawBroadPhase} broadPhase\n    * @param {RawNarrowPhase} narrowPhase\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawImpulseJointSet} joints\n    * @param {RawMultibodyJointSet} articulations\n    * @param {RawCCDSolver} ccd_solver\n    */\n    step(gravity, integrationParameters, islands, broadPhase, narrowPhase, bodies, colliders, joints, articulations, ccd_solver) {\n        _assertClass(gravity, RawVector);\n        _assertClass(integrationParameters, RawIntegrationParameters);\n        _assertClass(islands, RawIslandManager);\n        _assertClass(broadPhase, RawBroadPhase);\n        _assertClass(narrowPhase, RawNarrowPhase);\n        _assertClass(bodies, RawRigidBodySet);\n        _assertClass(colliders, RawColliderSet);\n        _assertClass(joints, RawImpulseJointSet);\n        _assertClass(articulations, RawMultibodyJointSet);\n        _assertClass(ccd_solver, RawCCDSolver);\n        wasm.rawphysicspipeline_step(this.__wbg_ptr, gravity.__wbg_ptr, integrationParameters.__wbg_ptr, islands.__wbg_ptr, broadPhase.__wbg_ptr, narrowPhase.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, joints.__wbg_ptr, articulations.__wbg_ptr, ccd_solver.__wbg_ptr);\n    }\n    /**\n    * @param {RawVector} gravity\n    * @param {RawIntegrationParameters} integrationParameters\n    * @param {RawIslandManager} islands\n    * @param {RawBroadPhase} broadPhase\n    * @param {RawNarrowPhase} narrowPhase\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawImpulseJointSet} joints\n    * @param {RawMultibodyJointSet} articulations\n    * @param {RawCCDSolver} ccd_solver\n    * @param {RawEventQueue} eventQueue\n    * @param {object} hookObject\n    * @param {Function} hookFilterContactPair\n    * @param {Function} hookFilterIntersectionPair\n    */\n    stepWithEvents(gravity, integrationParameters, islands, broadPhase, narrowPhase, bodies, colliders, joints, articulations, ccd_solver, eventQueue, hookObject, hookFilterContactPair, hookFilterIntersectionPair) {\n        _assertClass(gravity, RawVector);\n        _assertClass(integrationParameters, RawIntegrationParameters);\n        _assertClass(islands, RawIslandManager);\n        _assertClass(broadPhase, RawBroadPhase);\n        _assertClass(narrowPhase, RawNarrowPhase);\n        _assertClass(bodies, RawRigidBodySet);\n        _assertClass(colliders, RawColliderSet);\n        _assertClass(joints, RawImpulseJointSet);\n        _assertClass(articulations, RawMultibodyJointSet);\n        _assertClass(ccd_solver, RawCCDSolver);\n        _assertClass(eventQueue, RawEventQueue);\n        wasm.rawphysicspipeline_stepWithEvents(this.__wbg_ptr, gravity.__wbg_ptr, integrationParameters.__wbg_ptr, islands.__wbg_ptr, broadPhase.__wbg_ptr, narrowPhase.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, joints.__wbg_ptr, articulations.__wbg_ptr, ccd_solver.__wbg_ptr, eventQueue.__wbg_ptr, addHeapObject(hookObject), addHeapObject(hookFilterContactPair), addHeapObject(hookFilterIntersectionPair));\n    }\n}\n/**\n*/\nexport class RawPointColliderProjection {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawPointColliderProjection.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawpointcolliderprojection_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    colliderHandle() {\n        const ret = wasm.rawpointcolliderprojection_colliderHandle(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {RawVector}\n    */\n    point() {\n        const ret = wasm.rawpointcolliderprojection_point(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {boolean}\n    */\n    isInside() {\n        const ret = wasm.rawpointcolliderprojection_isInside(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @returns {RawFeatureType}\n    */\n    featureType() {\n        const ret = wasm.rawpointcolliderprojection_featureType(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    featureId() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawpointcolliderprojection_featureId(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1 >>> 0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class RawPointProjection {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawPointProjection.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawpointprojection_free(ptr);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    point() {\n        const ret = wasm.rawpointprojection_point(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {boolean}\n    */\n    isInside() {\n        const ret = wasm.rawpointprojection_isInside(this.__wbg_ptr);\n        return ret !== 0;\n    }\n}\n/**\n*/\nexport class RawQueryPipeline {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawquerypipeline_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawquerypipeline_new();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    */\n    update(bodies, colliders) {\n        _assertClass(bodies, RawRigidBodySet);\n        _assertClass(colliders, RawColliderSet);\n        wasm.rawquerypipeline_update(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr);\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @param {boolean} solid\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    * @returns {RawRayColliderToi | undefined}\n    */\n    castRay(bodies, colliders, rayOrig, rayDir, maxToi, solid, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(rayOrig, RawVector);\n            _assertClass(rayDir, RawVector);\n            const ret = wasm.rawquerypipeline_castRay(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi, solid, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n            return ret === 0 ? undefined : RawRayColliderToi.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @param {boolean} solid\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    * @returns {RawRayColliderIntersection | undefined}\n    */\n    castRayAndGetNormal(bodies, colliders, rayOrig, rayDir, maxToi, solid, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(rayOrig, RawVector);\n            _assertClass(rayDir, RawVector);\n            const ret = wasm.rawquerypipeline_castRayAndGetNormal(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi, solid, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n            return ret === 0 ? undefined : RawRayColliderIntersection.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @param {boolean} solid\n    * @param {Function} callback\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    */\n    intersectionsWithRay(bodies, colliders, rayOrig, rayDir, maxToi, solid, callback, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(rayOrig, RawVector);\n            _assertClass(rayDir, RawVector);\n            wasm.rawquerypipeline_intersectionsWithRay(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi, solid, addBorrowedObject(callback), filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n        } finally {\n            heap[stack_pointer++] = undefined;\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} shapePos\n    * @param {RawRotation} shapeRot\n    * @param {RawShape} shape\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    * @returns {number | undefined}\n    */\n    intersectionWithShape(bodies, colliders, shapePos, shapeRot, shape, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(shapePos, RawVector);\n            _assertClass(shapeRot, RawRotation);\n            _assertClass(shape, RawShape);\n            wasm.rawquerypipeline_intersectionWithShape(retptr, this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, shapePos.__wbg_ptr, shapeRot.__wbg_ptr, shape.__wbg_ptr, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r2 = getFloat64Memory0()[retptr / 8 + 1];\n            return r0 === 0 ? undefined : r2;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} point\n    * @param {boolean} solid\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    * @returns {RawPointColliderProjection | undefined}\n    */\n    projectPoint(bodies, colliders, point, solid, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(point, RawVector);\n            const ret = wasm.rawquerypipeline_projectPoint(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, point.__wbg_ptr, solid, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n            return ret === 0 ? undefined : RawPointColliderProjection.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} point\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    * @returns {RawPointColliderProjection | undefined}\n    */\n    projectPointAndGetFeature(bodies, colliders, point, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(point, RawVector);\n            const ret = wasm.rawquerypipeline_projectPointAndGetFeature(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, point.__wbg_ptr, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n            return ret === 0 ? undefined : RawPointColliderProjection.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} point\n    * @param {Function} callback\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    */\n    intersectionsWithPoint(bodies, colliders, point, callback, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(point, RawVector);\n            wasm.rawquerypipeline_intersectionsWithPoint(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, point.__wbg_ptr, addBorrowedObject(callback), filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n        } finally {\n            heap[stack_pointer++] = undefined;\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} shapePos\n    * @param {RawRotation} shapeRot\n    * @param {RawVector} shapeVel\n    * @param {RawShape} shape\n    * @param {number} maxToi\n    * @param {boolean} stop_at_penetration\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    * @returns {RawShapeColliderTOI | undefined}\n    */\n    castShape(bodies, colliders, shapePos, shapeRot, shapeVel, shape, maxToi, stop_at_penetration, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(shapePos, RawVector);\n            _assertClass(shapeRot, RawRotation);\n            _assertClass(shapeVel, RawVector);\n            _assertClass(shape, RawShape);\n            const ret = wasm.rawquerypipeline_castShape(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, shapePos.__wbg_ptr, shapeRot.__wbg_ptr, shapeVel.__wbg_ptr, shape.__wbg_ptr, maxToi, stop_at_penetration, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n            return ret === 0 ? undefined : RawShapeColliderTOI.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} shapePos\n    * @param {RawRotation} shapeRot\n    * @param {RawShape} shape\n    * @param {Function} callback\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    */\n    intersectionsWithShape(bodies, colliders, shapePos, shapeRot, shape, callback, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(shapePos, RawVector);\n            _assertClass(shapeRot, RawRotation);\n            _assertClass(shape, RawShape);\n            wasm.rawquerypipeline_intersectionsWithShape(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, shapePos.__wbg_ptr, shapeRot.__wbg_ptr, shape.__wbg_ptr, addBorrowedObject(callback), filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n        } finally {\n            heap[stack_pointer++] = undefined;\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawVector} aabbCenter\n    * @param {RawVector} aabbHalfExtents\n    * @param {Function} callback\n    */\n    collidersWithAabbIntersectingAabb(aabbCenter, aabbHalfExtents, callback) {\n        try {\n            _assertClass(aabbCenter, RawVector);\n            _assertClass(aabbHalfExtents, RawVector);\n            wasm.rawquerypipeline_collidersWithAabbIntersectingAabb(this.__wbg_ptr, aabbCenter.__wbg_ptr, aabbHalfExtents.__wbg_ptr, addBorrowedObject(callback));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n*/\nexport class RawRayColliderIntersection {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawRayColliderIntersection.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawraycolliderintersection_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    colliderHandle() {\n        const ret = wasm.rawpointcolliderprojection_colliderHandle(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal() {\n        const ret = wasm.rawraycolliderintersection_normal(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    toi() {\n        const ret = wasm.rawraycolliderintersection_toi(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {RawFeatureType}\n    */\n    featureType() {\n        const ret = wasm.rawpointcolliderprojection_featureType(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    featureId() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawpointcolliderprojection_featureId(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1 >>> 0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class RawRayColliderToi {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawRayColliderToi.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawraycollidertoi_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    colliderHandle() {\n        const ret = wasm.rawcharactercollision_handle(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    toi() {\n        const ret = wasm.rawraycolliderintersection_toi(this.__wbg_ptr);\n        return ret;\n    }\n}\n/**\n*/\nexport class RawRayIntersection {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawRayIntersection.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawrayintersection_free(ptr);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal() {\n        const ret = wasm.rawraycolliderintersection_normal(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    toi() {\n        const ret = wasm.rawraycolliderintersection_toi(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {RawFeatureType}\n    */\n    featureType() {\n        const ret = wasm.rawpointcolliderprojection_featureType(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    featureId() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawpointcolliderprojection_featureId(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1 >>> 0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class RawRigidBodySet {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawRigidBodySet.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawrigidbodyset_free(ptr);\n    }\n    /**\n    * The world-space translation of this rigid-body.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    rbTranslation(handle) {\n        const ret = wasm.rawrigidbodyset_rbTranslation(this.__wbg_ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The world-space orientation of this rigid-body.\n    * @param {number} handle\n    * @returns {RawRotation}\n    */\n    rbRotation(handle) {\n        const ret = wasm.rawrigidbodyset_rbRotation(this.__wbg_ptr, handle);\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * Put the given rigid-body to sleep.\n    * @param {number} handle\n    */\n    rbSleep(handle) {\n        wasm.rawrigidbodyset_rbSleep(this.__wbg_ptr, handle);\n    }\n    /**\n    * Is this rigid-body sleeping?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    rbIsSleeping(handle) {\n        const ret = wasm.rawrigidbodyset_rbIsSleeping(this.__wbg_ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Is the velocity of this rigid-body not zero?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    rbIsMoving(handle) {\n        const ret = wasm.rawrigidbodyset_rbIsMoving(this.__wbg_ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * The world-space predicted translation of this rigid-body.\n    *\n    * If this rigid-body is kinematic this value is set by the `setNextKinematicTranslation`\n    * method and is used for estimating the kinematic body velocity at the next timestep.\n    * For non-kinematic bodies, this value is currently unspecified.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    rbNextTranslation(handle) {\n        const ret = wasm.rawrigidbodyset_rbNextTranslation(this.__wbg_ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The world-space predicted orientation of this rigid-body.\n    *\n    * If this rigid-body is kinematic this value is set by the `setNextKinematicRotation`\n    * method and is used for estimating the kinematic body velocity at the next timestep.\n    * For non-kinematic bodies, this value is currently unspecified.\n    * @param {number} handle\n    * @returns {RawRotation}\n    */\n    rbNextRotation(handle) {\n        const ret = wasm.rawrigidbodyset_rbNextRotation(this.__wbg_ptr, handle);\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * Sets the translation of this rigid-body.\n    *\n    * # Parameters\n    * - `x`: the world-space position of the rigid-body along the `x` axis.\n    * - `y`: the world-space position of the rigid-body along the `y` axis.\n    * - `z`: the world-space position of the rigid-body along the `z` axis.\n    * - `wakeUp`: forces the rigid-body to wake-up so it is properly affected by forces if it\n    * wasn't moving before modifying its position.\n    * @param {number} handle\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    * @param {boolean} wakeUp\n    */\n    rbSetTranslation(handle, x, y, z, wakeUp) {\n        wasm.rawrigidbodyset_rbSetTranslation(this.__wbg_ptr, handle, x, y, z, wakeUp);\n    }\n    /**\n    * Sets the rotation quaternion of this rigid-body.\n    *\n    * This does nothing if a zero quaternion is provided.\n    *\n    * # Parameters\n    * - `x`: the first vector component of the quaternion.\n    * - `y`: the second vector component of the quaternion.\n    * - `z`: the third vector component of the quaternion.\n    * - `w`: the scalar component of the quaternion.\n    * - `wakeUp`: forces the rigid-body to wake-up so it is properly affected by forces if it\n    * wasn't moving before modifying its position.\n    * @param {number} handle\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    * @param {number} w\n    * @param {boolean} wakeUp\n    */\n    rbSetRotation(handle, x, y, z, w, wakeUp) {\n        wasm.rawrigidbodyset_rbSetRotation(this.__wbg_ptr, handle, x, y, z, w, wakeUp);\n    }\n    /**\n    * Sets the linear velocity of this rigid-body.\n    * @param {number} handle\n    * @param {RawVector} linvel\n    * @param {boolean} wakeUp\n    */\n    rbSetLinvel(handle, linvel, wakeUp) {\n        _assertClass(linvel, RawVector);\n        wasm.rawrigidbodyset_rbSetLinvel(this.__wbg_ptr, handle, linvel.__wbg_ptr, wakeUp);\n    }\n    /**\n    * Sets the angular velocity of this rigid-body.\n    * @param {number} handle\n    * @param {RawVector} angvel\n    * @param {boolean} wakeUp\n    */\n    rbSetAngvel(handle, angvel, wakeUp) {\n        _assertClass(angvel, RawVector);\n        wasm.rawrigidbodyset_rbSetAngvel(this.__wbg_ptr, handle, angvel.__wbg_ptr, wakeUp);\n    }\n    /**\n    * If this rigid body is kinematic, sets its future translation after the next timestep integration.\n    *\n    * This should be used instead of `rigidBody.setTranslation` to make the dynamic object\n    * interacting with this kinematic body behave as expected. Internally, Rapier will compute\n    * an artificial velocity for this rigid-body from its current position and its next kinematic\n    * position. This velocity will be used to compute forces on dynamic bodies interacting with\n    * this body.\n    *\n    * # Parameters\n    * - `x`: the world-space position of the rigid-body along the `x` axis.\n    * - `y`: the world-space position of the rigid-body along the `y` axis.\n    * - `z`: the world-space position of the rigid-body along the `z` axis.\n    * @param {number} handle\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    */\n    rbSetNextKinematicTranslation(handle, x, y, z) {\n        wasm.rawrigidbodyset_rbSetNextKinematicTranslation(this.__wbg_ptr, handle, x, y, z);\n    }\n    /**\n    * If this rigid body is kinematic, sets its future rotation after the next timestep integration.\n    *\n    * This should be used instead of `rigidBody.setRotation` to make the dynamic object\n    * interacting with this kinematic body behave as expected. Internally, Rapier will compute\n    * an artificial velocity for this rigid-body from its current position and its next kinematic\n    * position. This velocity will be used to compute forces on dynamic bodies interacting with\n    * this body.\n    *\n    * # Parameters\n    * - `x`: the first vector component of the quaternion.\n    * - `y`: the second vector component of the quaternion.\n    * - `z`: the third vector component of the quaternion.\n    * - `w`: the scalar component of the quaternion.\n    * @param {number} handle\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    * @param {number} w\n    */\n    rbSetNextKinematicRotation(handle, x, y, z, w) {\n        wasm.rawrigidbodyset_rbSetNextKinematicRotation(this.__wbg_ptr, handle, x, y, z, w);\n    }\n    /**\n    * @param {number} handle\n    * @param {RawColliderSet} colliders\n    */\n    rbRecomputeMassPropertiesFromColliders(handle, colliders) {\n        _assertClass(colliders, RawColliderSet);\n        wasm.rawrigidbodyset_rbRecomputeMassPropertiesFromColliders(this.__wbg_ptr, handle, colliders.__wbg_ptr);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} mass\n    * @param {boolean} wake_up\n    */\n    rbSetAdditionalMass(handle, mass, wake_up) {\n        wasm.rawrigidbodyset_rbSetAdditionalMass(this.__wbg_ptr, handle, mass, wake_up);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} mass\n    * @param {RawVector} centerOfMass\n    * @param {RawVector} principalAngularInertia\n    * @param {RawRotation} angularInertiaFrame\n    * @param {boolean} wake_up\n    */\n    rbSetAdditionalMassProperties(handle, mass, centerOfMass, principalAngularInertia, angularInertiaFrame, wake_up) {\n        _assertClass(centerOfMass, RawVector);\n        _assertClass(principalAngularInertia, RawVector);\n        _assertClass(angularInertiaFrame, RawRotation);\n        wasm.rawrigidbodyset_rbSetAdditionalMassProperties(this.__wbg_ptr, handle, mass, centerOfMass.__wbg_ptr, principalAngularInertia.__wbg_ptr, angularInertiaFrame.__wbg_ptr, wake_up);\n    }\n    /**\n    * The linear velocity of this rigid-body.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    rbLinvel(handle) {\n        const ret = wasm.rawrigidbodyset_rbLinvel(this.__wbg_ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The angular velocity of this rigid-body.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    rbAngvel(handle) {\n        const ret = wasm.rawrigidbodyset_rbAngvel(this.__wbg_ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} locked\n    * @param {boolean} wake_up\n    */\n    rbLockTranslations(handle, locked, wake_up) {\n        wasm.rawrigidbodyset_rbLockTranslations(this.__wbg_ptr, handle, locked, wake_up);\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} allow_x\n    * @param {boolean} allow_y\n    * @param {boolean} allow_z\n    * @param {boolean} wake_up\n    */\n    rbSetEnabledTranslations(handle, allow_x, allow_y, allow_z, wake_up) {\n        wasm.rawrigidbodyset_rbSetEnabledTranslations(this.__wbg_ptr, handle, allow_x, allow_y, allow_z, wake_up);\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} locked\n    * @param {boolean} wake_up\n    */\n    rbLockRotations(handle, locked, wake_up) {\n        wasm.rawrigidbodyset_rbLockRotations(this.__wbg_ptr, handle, locked, wake_up);\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} allow_x\n    * @param {boolean} allow_y\n    * @param {boolean} allow_z\n    * @param {boolean} wake_up\n    */\n    rbSetEnabledRotations(handle, allow_x, allow_y, allow_z, wake_up) {\n        wasm.rawrigidbodyset_rbSetEnabledRotations(this.__wbg_ptr, handle, allow_x, allow_y, allow_z, wake_up);\n    }\n    /**\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbDominanceGroup(handle) {\n        const ret = wasm.rawrigidbodyset_rbDominanceGroup(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @param {number} group\n    */\n    rbSetDominanceGroup(handle, group) {\n        wasm.rawrigidbodyset_rbSetDominanceGroup(this.__wbg_ptr, handle, group);\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} enabled\n    */\n    rbEnableCcd(handle, enabled) {\n        wasm.rawrigidbodyset_rbEnableCcd(this.__wbg_ptr, handle, enabled);\n    }\n    /**\n    * The mass of this rigid-body.\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbMass(handle) {\n        const ret = wasm.rawrigidbodyset_rbMass(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * The inverse of the mass of a rigid-body.\n    *\n    * If this is zero, the rigid-body is assumed to have infinite mass.\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbInvMass(handle) {\n        const ret = wasm.rawrigidbodyset_rbInvMass(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * The inverse mass taking into account translation locking.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    rbEffectiveInvMass(handle) {\n        const ret = wasm.rawrigidbodyset_rbEffectiveInvMass(this.__wbg_ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The center of mass of a rigid-body expressed in its local-space.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    rbLocalCom(handle) {\n        const ret = wasm.rawrigidbodyset_rbLocalCom(this.__wbg_ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The world-space center of mass of the rigid-body.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    rbWorldCom(handle) {\n        const ret = wasm.rawrigidbodyset_rbWorldCom(this.__wbg_ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The inverse of the principal angular inertia of the rigid-body.\n    *\n    * Components set to zero are assumed to be infinite along the corresponding principal axis.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    rbInvPrincipalInertiaSqrt(handle) {\n        const ret = wasm.rawrigidbodyset_rbInvPrincipalInertiaSqrt(this.__wbg_ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The principal vectors of the local angular inertia tensor of the rigid-body.\n    * @param {number} handle\n    * @returns {RawRotation}\n    */\n    rbPrincipalInertiaLocalFrame(handle) {\n        const ret = wasm.rawrigidbodyset_rbPrincipalInertiaLocalFrame(this.__wbg_ptr, handle);\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * The angular inertia along the principal inertia axes of the rigid-body.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    rbPrincipalInertia(handle) {\n        const ret = wasm.rawrigidbodyset_rbPrincipalInertia(this.__wbg_ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The square-root of the world-space inverse angular inertia tensor of the rigid-body,\n    * taking into account rotation locking.\n    * @param {number} handle\n    * @returns {RawSdpMatrix3}\n    */\n    rbEffectiveWorldInvInertiaSqrt(handle) {\n        const ret = wasm.rawrigidbodyset_rbEffectiveWorldInvInertiaSqrt(this.__wbg_ptr, handle);\n        return RawSdpMatrix3.__wrap(ret);\n    }\n    /**\n    * The effective world-space angular inertia (that takes the potential rotation locking into account) of\n    * this rigid-body.\n    * @param {number} handle\n    * @returns {RawSdpMatrix3}\n    */\n    rbEffectiveAngularInertia(handle) {\n        const ret = wasm.rawrigidbodyset_rbEffectiveAngularInertia(this.__wbg_ptr, handle);\n        return RawSdpMatrix3.__wrap(ret);\n    }\n    /**\n    * Wakes this rigid-body up.\n    *\n    * A dynamic rigid-body that does not move during several consecutive frames will\n    * be put to sleep by the physics engine, i.e., it will stop being simulated in order\n    * to avoid useless computations.\n    * This methods forces a sleeping rigid-body to wake-up. This is useful, e.g., before modifying\n    * the position of a dynamic body so that it is properly simulated afterwards.\n    * @param {number} handle\n    */\n    rbWakeUp(handle) {\n        wasm.rawrigidbodyset_rbWakeUp(this.__wbg_ptr, handle);\n    }\n    /**\n    * Is Continuous Collision Detection enabled for this rigid-body?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    rbIsCcdEnabled(handle) {\n        const ret = wasm.rawrigidbodyset_rbIsCcdEnabled(this.__wbg_ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * The number of colliders attached to this rigid-body.\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbNumColliders(handle) {\n        const ret = wasm.rawrigidbodyset_rbNumColliders(this.__wbg_ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * Retrieves the `i-th` collider attached to this rigid-body.\n    *\n    * # Parameters\n    * - `at`: The index of the collider to retrieve. Must be a number in `[0, this.numColliders()[`.\n    *         This index is **not** the same as the unique identifier of the collider.\n    * @param {number} handle\n    * @param {number} at\n    * @returns {number}\n    */\n    rbCollider(handle, at) {\n        const ret = wasm.rawrigidbodyset_rbCollider(this.__wbg_ptr, handle, at);\n        return ret;\n    }\n    /**\n    * The status of this rigid-body: fixed, dynamic, or kinematic.\n    * @param {number} handle\n    * @returns {RawRigidBodyType}\n    */\n    rbBodyType(handle) {\n        const ret = wasm.rawrigidbodyset_rbBodyType(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * Set a new status for this rigid-body: fixed, dynamic, or kinematic.\n    * @param {number} handle\n    * @param {RawRigidBodyType} status\n    * @param {boolean} wake_up\n    */\n    rbSetBodyType(handle, status, wake_up) {\n        wasm.rawrigidbodyset_rbSetBodyType(this.__wbg_ptr, handle, status, wake_up);\n    }\n    /**\n    * Is this rigid-body fixed?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    rbIsFixed(handle) {\n        const ret = wasm.rawrigidbodyset_rbIsFixed(this.__wbg_ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Is this rigid-body kinematic?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    rbIsKinematic(handle) {\n        const ret = wasm.rawrigidbodyset_rbIsKinematic(this.__wbg_ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Is this rigid-body dynamic?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    rbIsDynamic(handle) {\n        const ret = wasm.rawrigidbodyset_rbIsDynamic(this.__wbg_ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * The linear damping coefficient of this rigid-body.\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbLinearDamping(handle) {\n        const ret = wasm.rawrigidbodyset_rbLinearDamping(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * The angular damping coefficient of this rigid-body.\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbAngularDamping(handle) {\n        const ret = wasm.rawrigidbodyset_rbAngularDamping(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @param {number} factor\n    */\n    rbSetLinearDamping(handle, factor) {\n        wasm.rawrigidbodyset_rbSetLinearDamping(this.__wbg_ptr, handle, factor);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} factor\n    */\n    rbSetAngularDamping(handle, factor) {\n        wasm.rawrigidbodyset_rbSetAngularDamping(this.__wbg_ptr, handle, factor);\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} enabled\n    */\n    rbSetEnabled(handle, enabled) {\n        wasm.rawrigidbodyset_rbSetEnabled(this.__wbg_ptr, handle, enabled);\n    }\n    /**\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    rbIsEnabled(handle) {\n        const ret = wasm.rawrigidbodyset_rbIsEnabled(this.__wbg_ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbGravityScale(handle) {\n        const ret = wasm.rawrigidbodyset_rbGravityScale(this.__wbg_ptr, handle);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @param {number} factor\n    * @param {boolean} wakeUp\n    */\n    rbSetGravityScale(handle, factor, wakeUp) {\n        wasm.rawrigidbodyset_rbSetGravityScale(this.__wbg_ptr, handle, factor, wakeUp);\n    }\n    /**\n    * Resets to zero all user-added forces added to this rigid-body.\n    * @param {number} handle\n    * @param {boolean} wakeUp\n    */\n    rbResetForces(handle, wakeUp) {\n        wasm.rawrigidbodyset_rbResetForces(this.__wbg_ptr, handle, wakeUp);\n    }\n    /**\n    * Resets to zero all user-added torques added to this rigid-body.\n    * @param {number} handle\n    * @param {boolean} wakeUp\n    */\n    rbResetTorques(handle, wakeUp) {\n        wasm.rawrigidbodyset_rbResetTorques(this.__wbg_ptr, handle, wakeUp);\n    }\n    /**\n    * Adds a force at the center-of-mass of this rigid-body.\n    *\n    * # Parameters\n    * - `force`: the world-space force to apply on the rigid-body.\n    * - `wakeUp`: should the rigid-body be automatically woken-up?\n    * @param {number} handle\n    * @param {RawVector} force\n    * @param {boolean} wakeUp\n    */\n    rbAddForce(handle, force, wakeUp) {\n        _assertClass(force, RawVector);\n        wasm.rawrigidbodyset_rbAddForce(this.__wbg_ptr, handle, force.__wbg_ptr, wakeUp);\n    }\n    /**\n    * Applies an impulse at the center-of-mass of this rigid-body.\n    *\n    * # Parameters\n    * - `impulse`: the world-space impulse to apply on the rigid-body.\n    * - `wakeUp`: should the rigid-body be automatically woken-up?\n    * @param {number} handle\n    * @param {RawVector} impulse\n    * @param {boolean} wakeUp\n    */\n    rbApplyImpulse(handle, impulse, wakeUp) {\n        _assertClass(impulse, RawVector);\n        wasm.rawrigidbodyset_rbApplyImpulse(this.__wbg_ptr, handle, impulse.__wbg_ptr, wakeUp);\n    }\n    /**\n    * Adds a torque at the center-of-mass of this rigid-body.\n    *\n    * # Parameters\n    * - `torque`: the world-space torque to apply on the rigid-body.\n    * - `wakeUp`: should the rigid-body be automatically woken-up?\n    * @param {number} handle\n    * @param {RawVector} torque\n    * @param {boolean} wakeUp\n    */\n    rbAddTorque(handle, torque, wakeUp) {\n        _assertClass(torque, RawVector);\n        wasm.rawrigidbodyset_rbAddTorque(this.__wbg_ptr, handle, torque.__wbg_ptr, wakeUp);\n    }\n    /**\n    * Applies an impulsive torque at the center-of-mass of this rigid-body.\n    *\n    * # Parameters\n    * - `torque impulse`: the world-space torque impulse to apply on the rigid-body.\n    * - `wakeUp`: should the rigid-body be automatically woken-up?\n    * @param {number} handle\n    * @param {RawVector} torque_impulse\n    * @param {boolean} wakeUp\n    */\n    rbApplyTorqueImpulse(handle, torque_impulse, wakeUp) {\n        _assertClass(torque_impulse, RawVector);\n        wasm.rawrigidbodyset_rbApplyTorqueImpulse(this.__wbg_ptr, handle, torque_impulse.__wbg_ptr, wakeUp);\n    }\n    /**\n    * Adds a force at the given world-space point of this rigid-body.\n    *\n    * # Parameters\n    * - `force`: the world-space force to apply on the rigid-body.\n    * - `point`: the world-space point where the impulse is to be applied on the rigid-body.\n    * - `wakeUp`: should the rigid-body be automatically woken-up?\n    * @param {number} handle\n    * @param {RawVector} force\n    * @param {RawVector} point\n    * @param {boolean} wakeUp\n    */\n    rbAddForceAtPoint(handle, force, point, wakeUp) {\n        _assertClass(force, RawVector);\n        _assertClass(point, RawVector);\n        wasm.rawrigidbodyset_rbAddForceAtPoint(this.__wbg_ptr, handle, force.__wbg_ptr, point.__wbg_ptr, wakeUp);\n    }\n    /**\n    * Applies an impulse at the given world-space point of this rigid-body.\n    *\n    * # Parameters\n    * - `impulse`: the world-space impulse to apply on the rigid-body.\n    * - `point`: the world-space point where the impulse is to be applied on the rigid-body.\n    * - `wakeUp`: should the rigid-body be automatically woken-up?\n    * @param {number} handle\n    * @param {RawVector} impulse\n    * @param {RawVector} point\n    * @param {boolean} wakeUp\n    */\n    rbApplyImpulseAtPoint(handle, impulse, point, wakeUp) {\n        _assertClass(impulse, RawVector);\n        _assertClass(point, RawVector);\n        wasm.rawrigidbodyset_rbApplyImpulseAtPoint(this.__wbg_ptr, handle, impulse.__wbg_ptr, point.__wbg_ptr, wakeUp);\n    }\n    /**\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbAdditionalSolverIterations(handle) {\n        const ret = wasm.rawrigidbodyset_rbAdditionalSolverIterations(this.__wbg_ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} handle\n    * @param {number} iters\n    */\n    rbSetAdditionalSolverIterations(handle, iters) {\n        wasm.rawrigidbodyset_rbSetAdditionalSolverIterations(this.__wbg_ptr, handle, iters);\n    }\n    /**\n    * An arbitrary user-defined 32-bit integer\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbUserData(handle) {\n        const ret = wasm.rawrigidbodyset_rbUserData(this.__wbg_ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * Sets the user-defined 32-bit integer of this rigid-body.\n    *\n    * # Parameters\n    * - `data`: an arbitrary user-defined 32-bit integer.\n    * @param {number} handle\n    * @param {number} data\n    */\n    rbSetUserData(handle, data) {\n        wasm.rawrigidbodyset_rbSetUserData(this.__wbg_ptr, handle, data);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawrigidbodyset_new();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @param {boolean} enabled\n    * @param {RawVector} translation\n    * @param {RawRotation} rotation\n    * @param {number} gravityScale\n    * @param {number} mass\n    * @param {boolean} massOnly\n    * @param {RawVector} centerOfMass\n    * @param {RawVector} linvel\n    * @param {RawVector} angvel\n    * @param {RawVector} principalAngularInertia\n    * @param {RawRotation} angularInertiaFrame\n    * @param {boolean} translationEnabledX\n    * @param {boolean} translationEnabledY\n    * @param {boolean} translationEnabledZ\n    * @param {boolean} rotationEnabledX\n    * @param {boolean} rotationEnabledY\n    * @param {boolean} rotationEnabledZ\n    * @param {number} linearDamping\n    * @param {number} angularDamping\n    * @param {RawRigidBodyType} rb_type\n    * @param {boolean} canSleep\n    * @param {boolean} sleeping\n    * @param {boolean} ccdEnabled\n    * @param {number} dominanceGroup\n    * @param {number} additional_solver_iterations\n    * @returns {number}\n    */\n    createRigidBody(enabled, translation, rotation, gravityScale, mass, massOnly, centerOfMass, linvel, angvel, principalAngularInertia, angularInertiaFrame, translationEnabledX, translationEnabledY, translationEnabledZ, rotationEnabledX, rotationEnabledY, rotationEnabledZ, linearDamping, angularDamping, rb_type, canSleep, sleeping, ccdEnabled, dominanceGroup, additional_solver_iterations) {\n        _assertClass(translation, RawVector);\n        _assertClass(rotation, RawRotation);\n        _assertClass(centerOfMass, RawVector);\n        _assertClass(linvel, RawVector);\n        _assertClass(angvel, RawVector);\n        _assertClass(principalAngularInertia, RawVector);\n        _assertClass(angularInertiaFrame, RawRotation);\n        const ret = wasm.rawrigidbodyset_createRigidBody(this.__wbg_ptr, enabled, translation.__wbg_ptr, rotation.__wbg_ptr, gravityScale, mass, massOnly, centerOfMass.__wbg_ptr, linvel.__wbg_ptr, angvel.__wbg_ptr, principalAngularInertia.__wbg_ptr, angularInertiaFrame.__wbg_ptr, translationEnabledX, translationEnabledY, translationEnabledZ, rotationEnabledX, rotationEnabledY, rotationEnabledZ, linearDamping, angularDamping, rb_type, canSleep, sleeping, ccdEnabled, dominanceGroup, additional_solver_iterations);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @param {RawIslandManager} islands\n    * @param {RawColliderSet} colliders\n    * @param {RawImpulseJointSet} joints\n    * @param {RawMultibodyJointSet} articulations\n    */\n    remove(handle, islands, colliders, joints, articulations) {\n        _assertClass(islands, RawIslandManager);\n        _assertClass(colliders, RawColliderSet);\n        _assertClass(joints, RawImpulseJointSet);\n        _assertClass(articulations, RawMultibodyJointSet);\n        wasm.rawrigidbodyset_remove(this.__wbg_ptr, handle, islands.__wbg_ptr, colliders.__wbg_ptr, joints.__wbg_ptr, articulations.__wbg_ptr);\n    }\n    /**\n    * The number of rigid-bodies on this set.\n    * @returns {number}\n    */\n    len() {\n        const ret = wasm.rawcolliderset_len(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * Checks if a rigid-body with the given integer handle exists.\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    contains(handle) {\n        const ret = wasm.rawrigidbodyset_contains(this.__wbg_ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Applies the given JavaScript function to the integer handle of each rigid-body managed by this set.\n    *\n    * # Parameters\n    * - `f(handle)`: the function to apply to the integer handle of each rigid-body managed by this set. Called as `f(collider)`.\n    * @param {Function} f\n    */\n    forEachRigidBodyHandle(f) {\n        try {\n            wasm.rawrigidbodyset_forEachRigidBodyHandle(this.__wbg_ptr, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawColliderSet} colliders\n    */\n    propagateModifiedBodyPositionsToColliders(colliders) {\n        _assertClass(colliders, RawColliderSet);\n        wasm.rawrigidbodyset_propagateModifiedBodyPositionsToColliders(this.__wbg_ptr, colliders.__wbg_ptr);\n    }\n}\n/**\n* A rotation quaternion.\n*/\nexport class RawRotation {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawRotation.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawrotation_free(ptr);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    * @param {number} w\n    */\n    constructor(x, y, z, w) {\n        const ret = wasm.rawrotation_new(x, y, z, w);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * The identity quaternion.\n    * @returns {RawRotation}\n    */\n    static identity() {\n        const ret = wasm.rawrotation_identity();\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * The `x` component of this quaternion.\n    * @returns {number}\n    */\n    get x() {\n        const ret = wasm.rawrotation_x(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * The `y` component of this quaternion.\n    * @returns {number}\n    */\n    get y() {\n        const ret = wasm.rawintegrationparameters_dt(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * The `z` component of this quaternion.\n    * @returns {number}\n    */\n    get z() {\n        const ret = wasm.rawraycolliderintersection_toi(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * The `w` component of this quaternion.\n    * @returns {number}\n    */\n    get w() {\n        const ret = wasm.rawintegrationparameters_erp(this.__wbg_ptr);\n        return ret;\n    }\n}\n/**\n*/\nexport class RawSdpMatrix3 {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawSdpMatrix3.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawsdpmatrix3_free(ptr);\n    }\n    /**\n    * Row major list of the upper-triangular part of the symmetric matrix.\n    * @returns {Float32Array}\n    */\n    elements() {\n        const ret = wasm.rawsdpmatrix3_elements(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n}\n/**\n*/\nexport class RawSerializationPipeline {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawserializationpipeline_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawserializationpipeline_new();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @param {RawVector} gravity\n    * @param {RawIntegrationParameters} integrationParameters\n    * @param {RawIslandManager} islands\n    * @param {RawBroadPhase} broadPhase\n    * @param {RawNarrowPhase} narrowPhase\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawImpulseJointSet} impulse_joints\n    * @param {RawMultibodyJointSet} multibody_joints\n    * @returns {Uint8Array | undefined}\n    */\n    serializeAll(gravity, integrationParameters, islands, broadPhase, narrowPhase, bodies, colliders, impulse_joints, multibody_joints) {\n        _assertClass(gravity, RawVector);\n        _assertClass(integrationParameters, RawIntegrationParameters);\n        _assertClass(islands, RawIslandManager);\n        _assertClass(broadPhase, RawBroadPhase);\n        _assertClass(narrowPhase, RawNarrowPhase);\n        _assertClass(bodies, RawRigidBodySet);\n        _assertClass(colliders, RawColliderSet);\n        _assertClass(impulse_joints, RawImpulseJointSet);\n        _assertClass(multibody_joints, RawMultibodyJointSet);\n        const ret = wasm.rawserializationpipeline_serializeAll(this.__wbg_ptr, gravity.__wbg_ptr, integrationParameters.__wbg_ptr, islands.__wbg_ptr, broadPhase.__wbg_ptr, narrowPhase.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, impulse_joints.__wbg_ptr, multibody_joints.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @param {Uint8Array} data\n    * @returns {RawDeserializedWorld | undefined}\n    */\n    deserializeAll(data) {\n        const ret = wasm.rawserializationpipeline_deserializeAll(this.__wbg_ptr, addHeapObject(data));\n        return ret === 0 ? undefined : RawDeserializedWorld.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawShape {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawShape.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawshape_free(ptr);\n    }\n    /**\n    * @param {number} hx\n    * @param {number} hy\n    * @param {number} hz\n    * @returns {RawShape}\n    */\n    static cuboid(hx, hy, hz) {\n        const ret = wasm.rawshape_cuboid(hx, hy, hz);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {number} hx\n    * @param {number} hy\n    * @param {number} hz\n    * @param {number} borderRadius\n    * @returns {RawShape}\n    */\n    static roundCuboid(hx, hy, hz, borderRadius) {\n        const ret = wasm.rawshape_roundCuboid(hx, hy, hz, borderRadius);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {number} radius\n    * @returns {RawShape}\n    */\n    static ball(radius) {\n        const ret = wasm.rawshape_ball(radius);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} normal\n    * @returns {RawShape}\n    */\n    static halfspace(normal) {\n        _assertClass(normal, RawVector);\n        const ret = wasm.rawshape_halfspace(normal.__wbg_ptr);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {number} halfHeight\n    * @param {number} radius\n    * @returns {RawShape}\n    */\n    static capsule(halfHeight, radius) {\n        const ret = wasm.rawshape_capsule(halfHeight, radius);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {number} halfHeight\n    * @param {number} radius\n    * @returns {RawShape}\n    */\n    static cylinder(halfHeight, radius) {\n        const ret = wasm.rawshape_cylinder(halfHeight, radius);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {number} halfHeight\n    * @param {number} radius\n    * @param {number} borderRadius\n    * @returns {RawShape}\n    */\n    static roundCylinder(halfHeight, radius, borderRadius) {\n        const ret = wasm.rawshape_roundCylinder(halfHeight, radius, borderRadius);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {number} halfHeight\n    * @param {number} radius\n    * @returns {RawShape}\n    */\n    static cone(halfHeight, radius) {\n        const ret = wasm.rawshape_cone(halfHeight, radius);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {number} halfHeight\n    * @param {number} radius\n    * @param {number} borderRadius\n    * @returns {RawShape}\n    */\n    static roundCone(halfHeight, radius, borderRadius) {\n        const ret = wasm.rawshape_roundCone(halfHeight, radius, borderRadius);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {Float32Array} vertices\n    * @param {Uint32Array} indices\n    * @returns {RawShape}\n    */\n    static polyline(vertices, indices) {\n        const ptr0 = passArrayF32ToWasm0(vertices, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArray32ToWasm0(indices, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.rawshape_polyline(ptr0, len0, ptr1, len1);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {Float32Array} vertices\n    * @param {Uint32Array} indices\n    * @returns {RawShape}\n    */\n    static trimesh(vertices, indices) {\n        const ptr0 = passArrayF32ToWasm0(vertices, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArray32ToWasm0(indices, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.rawshape_trimesh(ptr0, len0, ptr1, len1);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {number} nrows\n    * @param {number} ncols\n    * @param {Float32Array} heights\n    * @param {RawVector} scale\n    * @returns {RawShape}\n    */\n    static heightfield(nrows, ncols, heights, scale) {\n        const ptr0 = passArrayF32ToWasm0(heights, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        _assertClass(scale, RawVector);\n        const ret = wasm.rawshape_heightfield(nrows, ncols, ptr0, len0, scale.__wbg_ptr);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} p1\n    * @param {RawVector} p2\n    * @returns {RawShape}\n    */\n    static segment(p1, p2) {\n        _assertClass(p1, RawVector);\n        _assertClass(p2, RawVector);\n        const ret = wasm.rawshape_segment(p1.__wbg_ptr, p2.__wbg_ptr);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} p1\n    * @param {RawVector} p2\n    * @param {RawVector} p3\n    * @returns {RawShape}\n    */\n    static triangle(p1, p2, p3) {\n        _assertClass(p1, RawVector);\n        _assertClass(p2, RawVector);\n        _assertClass(p3, RawVector);\n        const ret = wasm.rawshape_triangle(p1.__wbg_ptr, p2.__wbg_ptr, p3.__wbg_ptr);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} p1\n    * @param {RawVector} p2\n    * @param {RawVector} p3\n    * @param {number} borderRadius\n    * @returns {RawShape}\n    */\n    static roundTriangle(p1, p2, p3, borderRadius) {\n        _assertClass(p1, RawVector);\n        _assertClass(p2, RawVector);\n        _assertClass(p3, RawVector);\n        const ret = wasm.rawshape_roundTriangle(p1.__wbg_ptr, p2.__wbg_ptr, p3.__wbg_ptr, borderRadius);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {Float32Array} points\n    * @returns {RawShape | undefined}\n    */\n    static convexHull(points) {\n        const ptr0 = passArrayF32ToWasm0(points, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.rawshape_convexHull(ptr0, len0);\n        return ret === 0 ? undefined : RawShape.__wrap(ret);\n    }\n    /**\n    * @param {Float32Array} points\n    * @param {number} borderRadius\n    * @returns {RawShape | undefined}\n    */\n    static roundConvexHull(points, borderRadius) {\n        const ptr0 = passArrayF32ToWasm0(points, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.rawshape_roundConvexHull(ptr0, len0, borderRadius);\n        return ret === 0 ? undefined : RawShape.__wrap(ret);\n    }\n    /**\n    * @param {Float32Array} vertices\n    * @param {Uint32Array} indices\n    * @returns {RawShape | undefined}\n    */\n    static convexMesh(vertices, indices) {\n        const ptr0 = passArrayF32ToWasm0(vertices, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArray32ToWasm0(indices, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.rawshape_convexMesh(ptr0, len0, ptr1, len1);\n        return ret === 0 ? undefined : RawShape.__wrap(ret);\n    }\n    /**\n    * @param {Float32Array} vertices\n    * @param {Uint32Array} indices\n    * @param {number} borderRadius\n    * @returns {RawShape | undefined}\n    */\n    static roundConvexMesh(vertices, indices, borderRadius) {\n        const ptr0 = passArrayF32ToWasm0(vertices, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArray32ToWasm0(indices, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.rawshape_roundConvexMesh(ptr0, len0, ptr1, len1, borderRadius);\n        return ret === 0 ? undefined : RawShape.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} shapePos1\n    * @param {RawRotation} shapeRot1\n    * @param {RawVector} shapeVel1\n    * @param {RawShape} shape2\n    * @param {RawVector} shapePos2\n    * @param {RawRotation} shapeRot2\n    * @param {RawVector} shapeVel2\n    * @param {number} maxToi\n    * @param {boolean} stop_at_penetration\n    * @returns {RawShapeTOI | undefined}\n    */\n    castShape(shapePos1, shapeRot1, shapeVel1, shape2, shapePos2, shapeRot2, shapeVel2, maxToi, stop_at_penetration) {\n        _assertClass(shapePos1, RawVector);\n        _assertClass(shapeRot1, RawRotation);\n        _assertClass(shapeVel1, RawVector);\n        _assertClass(shape2, RawShape);\n        _assertClass(shapePos2, RawVector);\n        _assertClass(shapeRot2, RawRotation);\n        _assertClass(shapeVel2, RawVector);\n        const ret = wasm.rawshape_castShape(this.__wbg_ptr, shapePos1.__wbg_ptr, shapeRot1.__wbg_ptr, shapeVel1.__wbg_ptr, shape2.__wbg_ptr, shapePos2.__wbg_ptr, shapeRot2.__wbg_ptr, shapeVel2.__wbg_ptr, maxToi, stop_at_penetration);\n        return ret === 0 ? undefined : RawShapeTOI.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} shapePos1\n    * @param {RawRotation} shapeRot1\n    * @param {RawShape} shape2\n    * @param {RawVector} shapePos2\n    * @param {RawRotation} shapeRot2\n    * @returns {boolean}\n    */\n    intersectsShape(shapePos1, shapeRot1, shape2, shapePos2, shapeRot2) {\n        _assertClass(shapePos1, RawVector);\n        _assertClass(shapeRot1, RawRotation);\n        _assertClass(shape2, RawShape);\n        _assertClass(shapePos2, RawVector);\n        _assertClass(shapeRot2, RawRotation);\n        const ret = wasm.rawshape_intersectsShape(this.__wbg_ptr, shapePos1.__wbg_ptr, shapeRot1.__wbg_ptr, shape2.__wbg_ptr, shapePos2.__wbg_ptr, shapeRot2.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {RawVector} shapePos1\n    * @param {RawRotation} shapeRot1\n    * @param {RawShape} shape2\n    * @param {RawVector} shapePos2\n    * @param {RawRotation} shapeRot2\n    * @param {number} prediction\n    * @returns {RawShapeContact | undefined}\n    */\n    contactShape(shapePos1, shapeRot1, shape2, shapePos2, shapeRot2, prediction) {\n        _assertClass(shapePos1, RawVector);\n        _assertClass(shapeRot1, RawRotation);\n        _assertClass(shape2, RawShape);\n        _assertClass(shapePos2, RawVector);\n        _assertClass(shapeRot2, RawRotation);\n        const ret = wasm.rawshape_contactShape(this.__wbg_ptr, shapePos1.__wbg_ptr, shapeRot1.__wbg_ptr, shape2.__wbg_ptr, shapePos2.__wbg_ptr, shapeRot2.__wbg_ptr, prediction);\n        return ret === 0 ? undefined : RawShapeContact.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} shapePos\n    * @param {RawRotation} shapeRot\n    * @param {RawVector} point\n    * @returns {boolean}\n    */\n    containsPoint(shapePos, shapeRot, point) {\n        _assertClass(shapePos, RawVector);\n        _assertClass(shapeRot, RawRotation);\n        _assertClass(point, RawVector);\n        const ret = wasm.rawshape_containsPoint(this.__wbg_ptr, shapePos.__wbg_ptr, shapeRot.__wbg_ptr, point.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {RawVector} shapePos\n    * @param {RawRotation} shapeRot\n    * @param {RawVector} point\n    * @param {boolean} solid\n    * @returns {RawPointProjection}\n    */\n    projectPoint(shapePos, shapeRot, point, solid) {\n        _assertClass(shapePos, RawVector);\n        _assertClass(shapeRot, RawRotation);\n        _assertClass(point, RawVector);\n        const ret = wasm.rawshape_projectPoint(this.__wbg_ptr, shapePos.__wbg_ptr, shapeRot.__wbg_ptr, point.__wbg_ptr, solid);\n        return RawPointProjection.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} shapePos\n    * @param {RawRotation} shapeRot\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @returns {boolean}\n    */\n    intersectsRay(shapePos, shapeRot, rayOrig, rayDir, maxToi) {\n        _assertClass(shapePos, RawVector);\n        _assertClass(shapeRot, RawRotation);\n        _assertClass(rayOrig, RawVector);\n        _assertClass(rayDir, RawVector);\n        const ret = wasm.rawshape_intersectsRay(this.__wbg_ptr, shapePos.__wbg_ptr, shapeRot.__wbg_ptr, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi);\n        return ret !== 0;\n    }\n    /**\n    * @param {RawVector} shapePos\n    * @param {RawRotation} shapeRot\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @param {boolean} solid\n    * @returns {number}\n    */\n    castRay(shapePos, shapeRot, rayOrig, rayDir, maxToi, solid) {\n        _assertClass(shapePos, RawVector);\n        _assertClass(shapeRot, RawRotation);\n        _assertClass(rayOrig, RawVector);\n        _assertClass(rayDir, RawVector);\n        const ret = wasm.rawshape_castRay(this.__wbg_ptr, shapePos.__wbg_ptr, shapeRot.__wbg_ptr, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi, solid);\n        return ret;\n    }\n    /**\n    * @param {RawVector} shapePos\n    * @param {RawRotation} shapeRot\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @param {boolean} solid\n    * @returns {RawRayIntersection | undefined}\n    */\n    castRayAndGetNormal(shapePos, shapeRot, rayOrig, rayDir, maxToi, solid) {\n        _assertClass(shapePos, RawVector);\n        _assertClass(shapeRot, RawRotation);\n        _assertClass(rayOrig, RawVector);\n        _assertClass(rayDir, RawVector);\n        const ret = wasm.rawshape_castRayAndGetNormal(this.__wbg_ptr, shapePos.__wbg_ptr, shapeRot.__wbg_ptr, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi, solid);\n        return ret === 0 ? undefined : RawRayIntersection.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawShapeColliderTOI {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawShapeColliderTOI.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawshapecollidertoi_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    colliderHandle() {\n        const ret = wasm.rawcharactercollision_handle(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    toi() {\n        const ret = wasm.rawraycolliderintersection_toi(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {RawVector}\n    */\n    witness1() {\n        const ret = wasm.rawraycolliderintersection_normal(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    witness2() {\n        const ret = wasm.rawshapecollidertoi_witness2(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal1() {\n        const ret = wasm.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal2() {\n        const ret = wasm.rawcharactercollision_translationDeltaRemaining(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawShapeContact {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawShapeContact.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawshapecontact_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    distance() {\n        const ret = wasm.rawkinematiccharactercontroller_maxSlopeClimbAngle(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {RawVector}\n    */\n    point1() {\n        const ret = wasm.rawpointprojection_point(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    point2() {\n        const ret = wasm.rawraycolliderintersection_normal(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal1() {\n        const ret = wasm.rawshapecollidertoi_witness2(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal2() {\n        const ret = wasm.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawShapeTOI {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawShapeTOI.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawshapetoi_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    toi() {\n        const ret = wasm.rawrotation_x(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {RawVector}\n    */\n    witness1() {\n        const ret = wasm.rawshapetoi_witness1(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    witness2() {\n        const ret = wasm.rawcontactforceevent_total_force(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal1() {\n        const ret = wasm.rawshapetoi_normal1(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal2() {\n        const ret = wasm.rawshapetoi_normal2(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n}\n/**\n* A vector.\n*/\nexport class RawVector {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RawVector.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawvector_free(ptr);\n    }\n    /**\n    * Creates a new vector filled with zeros.\n    * @returns {RawVector}\n    */\n    static zero() {\n        const ret = wasm.rawvector_zero();\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * Creates a new 3D vector from its two components.\n    *\n    * # Parameters\n    * - `x`: the `x` component of this 3D vector.\n    * - `y`: the `y` component of this 3D vector.\n    * - `z`: the `z` component of this 3D vector.\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    */\n    constructor(x, y, z) {\n        const ret = wasm.rawvector_new(x, y, z);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * The `x` component of this vector.\n    * @returns {number}\n    */\n    get x() {\n        const ret = wasm.rawrotation_x(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * Sets the `x` component of this vector.\n    * @param {number} x\n    */\n    set x(x) {\n        wasm.rawvector_set_x(this.__wbg_ptr, x);\n    }\n    /**\n    * The `y` component of this vector.\n    * @returns {number}\n    */\n    get y() {\n        const ret = wasm.rawintegrationparameters_dt(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * Sets the `y` component of this vector.\n    * @param {number} y\n    */\n    set y(y) {\n        wasm.rawintegrationparameters_set_dt(this.__wbg_ptr, y);\n    }\n    /**\n    * The `z` component of this vector.\n    * @returns {number}\n    */\n    get z() {\n        const ret = wasm.rawraycolliderintersection_toi(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * Sets the `z` component of this vector.\n    * @param {number} z\n    */\n    set z(z) {\n        wasm.rawvector_set_z(this.__wbg_ptr, z);\n    }\n    /**\n    * Create a new 3D vector from this vector with its components rearranged as `{x, y, z}`.\n    *\n    * This will effectively return a copy of `this`. This method exist for completeness with the\n    * other swizzling functions.\n    * @returns {RawVector}\n    */\n    xyz() {\n        const ret = wasm.rawvector_xyz(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * Create a new 3D vector from this vector with its components rearranged as `{y, x, z}`.\n    * @returns {RawVector}\n    */\n    yxz() {\n        const ret = wasm.rawvector_yxz(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * Create a new 3D vector from this vector with its components rearranged as `{z, x, y}`.\n    * @returns {RawVector}\n    */\n    zxy() {\n        const ret = wasm.rawvector_zxy(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * Create a new 3D vector from this vector with its components rearranged as `{x, z, y}`.\n    * @returns {RawVector}\n    */\n    xzy() {\n        const ret = wasm.rawvector_xzy(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * Create a new 3D vector from this vector with its components rearranged as `{y, z, x}`.\n    * @returns {RawVector}\n    */\n    yzx() {\n        const ret = wasm.rawvector_yzx(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * Create a new 3D vector from this vector with its components rearranged as `{z, y, x}`.\n    * @returns {RawVector}\n    */\n    zyx() {\n        const ret = wasm.rawvector_zyx(this.__wbg_ptr);\n        return RawVector.__wrap(ret);\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_boolean_get = function(arg0) {\n        const v = getObject(arg0);\n        const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n        return ret;\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_number_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'number' ? obj : undefined;\n        getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n        getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n    };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_rawraycolliderintersection_new = function(arg0) {\n        const ret = RawRayColliderIntersection.__wrap(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_rawcontactforceevent_new = function(arg0) {\n        const ret = RawContactForceEvent.__wrap(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_01734de55d61e11d = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_4c92f6aec1e1d6e6 = function() { return handleError(function (arg0, arg1, arg2, arg3) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2), getObject(arg3));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_776890ca77946e2f = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2), getObject(arg3), getObject(arg4));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_bind_60a9a80cada2f33c = function(arg0, arg1, arg2, arg3) {\n        const ret = getObject(arg0).bind(getObject(arg1), getObject(arg2), getObject(arg3));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_085ec1f694018c4f = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_6da8e527659b86aa = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_8125e318e6245eed = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_5cf90238115182c3 = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_length_72e2208bbc0efc61 = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_69193e31c844b792 = function(arg0, arg1, arg2) {\n        const ret = new Float32Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_6146c51d49a2c0df = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_length_d7327c75a759af37 = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_newwithlength_68d29ab115d0099c = function(arg0) {\n        const ret = new Float32Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedFloat32Memory0 = null;\n    cachedFloat64Memory0 = null;\n    cachedInt32Memory0 = null;\n    cachedUint32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL('rapier_wasm3d_bg.wasm', \"<deleted>\");\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync }\nexport default __wbg_init;\n","import {RawVector, RawRotation} from \"./raw\";\n// #if DIM3\nimport {RawSdpMatrix3} from \"./raw\";\n// #endif\n\n\n// #if DIM3\nexport interface Vector {\n    x: number;\n    y: number;\n    z: number;\n}\n\n/**\n * A 3D vector.\n */\nexport class Vector3 implements Vector {\n    x: number;\n    y: number;\n    z: number;\n\n    constructor(x: number, y: number, z: number) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n}\n\nexport class VectorOps {\n    public static new(x: number, y: number, z: number): Vector {\n        return new Vector3(x, y, z);\n    }\n\n    public static intoRaw(v: Vector): RawVector {\n        return new RawVector(v.x, v.y, v.z);\n    }\n\n    public static zeros(): Vector {\n        return VectorOps.new(0.0, 0.0, 0.0);\n    }\n\n    // FIXME: type ram: RawVector?\n    public static fromRaw(raw: RawVector): Vector {\n        if (!raw) return null;\n\n        let res = VectorOps.new(raw.x, raw.y, raw.z);\n        raw.free();\n        return res;\n    }\n\n    public static copy(out: Vector, input: Vector) {\n        out.x = input.x;\n        out.y = input.y;\n        out.z = input.z;\n    }\n}\n\nexport interface Rotation {\n    x: number;\n    y: number;\n    z: number;\n    w: number;\n}\n\n/**\n * A quaternion.\n */\nexport class Quaternion implements Rotation {\n    x: number;\n    y: number;\n    z: number;\n    w: number;\n\n    constructor(x: number, y: number, z: number, w: number) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n}\n\nexport class RotationOps {\n    public static identity(): Rotation {\n        return new Quaternion(0.0, 0.0, 0.0, 1.0);\n    }\n\n    public static fromRaw(raw: RawRotation): Rotation {\n        if (!raw) return null;\n\n        let res = new Quaternion(raw.x, raw.y, raw.z, raw.w);\n        raw.free();\n        return res;\n    }\n\n    public static intoRaw(rot: Rotation): RawRotation {\n        return new RawRotation(rot.x, rot.y, rot.z, rot.w);\n    }\n\n    public static copy(out: Rotation, input: Rotation) {\n        out.x = input.x;\n        out.y = input.y;\n        out.z = input.z;\n        out.w = input.w;\n    }\n}\n\n/**\n * A 3D symmetric-positive-definite matrix.\n */\nexport class SdpMatrix3 {\n    /**\n     * Row major list of the upper-triangular part of the symmetric matrix.\n     */\n    elements: Float32Array;\n\n    /**\n     * Matrix element at row 1, column 1.\n     */\n    public get m11(): number {\n        return this.elements[0];\n    }\n\n    /**\n     * Matrix element at row 1, column 2.\n     */\n    public get m12(): number {\n        return this.elements[1];\n    }\n\n    /**\n     * Matrix element at row 2, column 1.\n     */\n    public get m21(): number {\n        return this.m12;\n    }\n\n    /**\n     * Matrix element at row 1, column 3.\n     */\n    public get m13(): number {\n        return this.elements[2];\n    }\n\n    /**\n     * Matrix element at row 3, column 1.\n     */\n    public get m31(): number {\n        return this.m13;\n    }\n\n    /**\n     * Matrix element at row 2, column 2.\n     */\n    public get m22(): number {\n        return this.elements[3];\n    }\n\n    /**\n     * Matrix element at row 2, column 3.\n     */\n    public get m23(): number {\n        return this.elements[4];\n    }\n\n    /**\n     * Matrix element at row 3, column 2.\n     */\n    public get m32(): number {\n        return this.m23;\n    }\n\n    /**\n     * Matrix element at row 3, column 3.\n     */\n    public get m33(): number {\n        return this.elements[5];\n    }\n\n    constructor(elements: Float32Array) {\n        this.elements = elements;\n    }\n}\n\nexport class SdpMatrix3Ops {\n    public static fromRaw(raw: RawSdpMatrix3): SdpMatrix3 {\n        const sdpMatrix3 = new SdpMatrix3(raw.elements());\n        raw.free();\n        return sdpMatrix3;\n    }\n}\n\n// #endif\n","import {RawRigidBodySet, RawRigidBodyType} from \"../raw\";\nimport {Rotation, RotationOps, Vector, VectorOps} from \"../math\";\n// #if DIM3\nimport {SdpMatrix3, SdpMatrix3Ops} from \"../math\";\n// #endif\nimport {Collider, ColliderSet} from \"../geometry\";\n\n/**\n * The integer identifier of a collider added to a `ColliderSet`.\n */\nexport type RigidBodyHandle = number;\n\n/**\n * The simulation status of a rigid-body.\n */\n// TODO: rename this to RigidBodyType\nexport enum RigidBodyType {\n    /**\n     * A `RigidBodyType::Dynamic` body can be affected by all external forces.\n     */\n    Dynamic = 0,\n    /**\n     * A `RigidBodyType::Fixed` body cannot be affected by external forces.\n     */\n    Fixed,\n    /**\n     * A `RigidBodyType::KinematicPositionBased` body cannot be affected by any external forces but can be controlled\n     * by the user at the position level while keeping realistic one-way interaction with dynamic bodies.\n     *\n     * One-way interaction means that a kinematic body can push a dynamic body, but a kinematic body\n     * cannot be pushed by anything. In other words, the trajectory of a kinematic body can only be\n     * modified by the user and is independent from any contact or joint it is involved in.\n     */\n    KinematicPositionBased,\n    /**\n     * A `RigidBodyType::KinematicVelocityBased` body cannot be affected by any external forces but can be controlled\n     * by the user at the velocity level while keeping realistic one-way interaction with dynamic bodies.\n     *\n     * One-way interaction means that a kinematic body can push a dynamic body, but a kinematic body\n     * cannot be pushed by anything. In other words, the trajectory of a kinematic body can only be\n     * modified by the user and is independent from any contact or joint it is involved in.\n     */\n    KinematicVelocityBased,\n}\n\n/**\n * A rigid-body.\n */\nexport class RigidBody {\n    private rawSet: RawRigidBodySet; // The RigidBody won't need to free this.\n    private colliderSet: ColliderSet;\n    readonly handle: RigidBodyHandle;\n\n    /**\n     * An arbitrary user-defined object associated with this rigid-body.\n     */\n    public userData?: unknown;\n\n    constructor(\n        rawSet: RawRigidBodySet,\n        colliderSet: ColliderSet,\n        handle: RigidBodyHandle,\n    ) {\n        this.rawSet = rawSet;\n        this.colliderSet = colliderSet;\n        this.handle = handle;\n    }\n\n    /** @internal */\n    public finalizeDeserialization(colliderSet: ColliderSet) {\n        this.colliderSet = colliderSet;\n    }\n\n    /**\n     * Checks if this rigid-body is still valid (i.e. that it has\n     * not been deleted from the rigid-body set yet.\n     */\n    public isValid(): boolean {\n        return this.rawSet.contains(this.handle);\n    }\n\n    /**\n     * Locks or unlocks the ability of this rigid-body to translate.\n     *\n     * @param locked - If `true`, this rigid-body will no longer translate due to forces and impulses.\n     * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n     */\n    public lockTranslations(locked: boolean, wakeUp: boolean) {\n        return this.rawSet.rbLockTranslations(this.handle, locked, wakeUp);\n    }\n\n    /**\n     * Locks or unlocks the ability of this rigid-body to rotate.\n     *\n     * @param locked - If `true`, this rigid-body will no longer rotate due to torques and impulses.\n     * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n     */\n    public lockRotations(locked: boolean, wakeUp: boolean) {\n        return this.rawSet.rbLockRotations(this.handle, locked, wakeUp);\n    }\n\n    // #if DIM3\n    /**\n     * Locks or unlocks the ability of this rigid-body to translate along individual coordinate axes.\n     *\n     * @param enableX - If `false`, this rigid-body will no longer translate due to torques and impulses, along the X coordinate axis.\n     * @param enableY - If `false`, this rigid-body will no longer translate due to torques and impulses, along the Y coordinate axis.\n     * @param enableZ - If `false`, this rigid-body will no longer translate due to torques and impulses, along the Z coordinate axis.\n     * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n     */\n    public setEnabledTranslations(\n        enableX: boolean,\n        enableY: boolean,\n        enableZ: boolean,\n        wakeUp: boolean,\n    ) {\n        return this.rawSet.rbSetEnabledTranslations(\n            this.handle,\n            enableX,\n            enableY,\n            enableZ,\n            wakeUp,\n        );\n    }\n\n    /**\n     * Locks or unlocks the ability of this rigid-body to translate along individual coordinate axes.\n     *\n     * @param enableX - If `false`, this rigid-body will no longer translate due to torques and impulses, along the X coordinate axis.\n     * @param enableY - If `false`, this rigid-body will no longer translate due to torques and impulses, along the Y coordinate axis.\n     * @param enableZ - If `false`, this rigid-body will no longer translate due to torques and impulses, along the Z coordinate axis.\n     * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n     * @deprecated use `this.setEnabledTranslations` with the same arguments instead.\n     */\n    public restrictTranslations(\n        enableX: boolean,\n        enableY: boolean,\n        enableZ: boolean,\n        wakeUp: boolean,\n    ) {\n        this.setEnabledTranslations(enableX, enableY, enableZ, wakeUp);\n    }\n\n    /**\n     * Locks or unlocks the ability of this rigid-body to rotate along individual coordinate axes.\n     *\n     * @param enableX - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the X coordinate axis.\n     * @param enableY - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the Y coordinate axis.\n     * @param enableZ - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the Z coordinate axis.\n     * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n     */\n    public setEnabledRotations(\n        enableX: boolean,\n        enableY: boolean,\n        enableZ: boolean,\n        wakeUp: boolean,\n    ) {\n        return this.rawSet.rbSetEnabledRotations(\n            this.handle,\n            enableX,\n            enableY,\n            enableZ,\n            wakeUp,\n        );\n    }\n\n    /**\n     * Locks or unlocks the ability of this rigid-body to rotate along individual coordinate axes.\n     *\n     * @param enableX - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the X coordinate axis.\n     * @param enableY - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the Y coordinate axis.\n     * @param enableZ - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the Z coordinate axis.\n     * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n     * @deprecated use `this.setEnabledRotations` with the same arguments instead.\n     */\n    public restrictRotations(\n        enableX: boolean,\n        enableY: boolean,\n        enableZ: boolean,\n        wakeUp: boolean,\n    ) {\n        this.setEnabledRotations(enableX, enableY, enableZ, wakeUp);\n    }\n    // #endif\n\n    /**\n     * The dominance group, in [-127, +127] this rigid-body is part of.\n     */\n    public dominanceGroup(): number {\n        return this.rawSet.rbDominanceGroup(this.handle);\n    }\n\n    /**\n     * Sets the dominance group of this rigid-body.\n     *\n     * @param group - The dominance group of this rigid-body. Must be a signed integer in the range [-127, +127].\n     */\n    public setDominanceGroup(group: number) {\n        this.rawSet.rbSetDominanceGroup(this.handle, group);\n    }\n\n    /**\n     * The number of additional solver iterations that will be run for this\n     * rigid-body and everything that interacts with it directly or indirectly\n     * through contacts or joints.\n     */\n    public additionalSolverIterations(): number {\n        return this.rawSet.rbAdditionalSolverIterations(this.handle);\n    }\n\n    /**\n     * Sets the number of additional solver iterations that will be run for this\n     * rigid-body and everything that interacts with it directly or indirectly\n     * through contacts or joints.\n     *\n     * Compared to increasing the global `World.numSolverIteration`, setting this\n     * value lets you increase accuracy on only a subset of the scene, resulting in reduced\n     * performance loss.\n     *\n     * @param iters - The new number of additional solver iterations (default: 0).\n     */\n    public setAdditionalSolverIterations(iters: number) {\n        this.rawSet.rbSetAdditionalSolverIterations(this.handle, iters);\n    }\n\n    /**\n     * Enable or disable CCD (Continuous Collision Detection) for this rigid-body.\n     *\n     * @param enabled - If `true`, CCD will be enabled for this rigid-body.\n     */\n    public enableCcd(enabled: boolean) {\n        this.rawSet.rbEnableCcd(this.handle, enabled);\n    }\n\n    /**\n     * The world-space translation of this rigid-body.\n     */\n    public translation(): Vector {\n        let res = this.rawSet.rbTranslation(this.handle);\n        return VectorOps.fromRaw(res);\n    }\n\n    /**\n     * The world-space orientation of this rigid-body.\n     */\n    public rotation(): Rotation {\n        let res = this.rawSet.rbRotation(this.handle);\n        return RotationOps.fromRaw(res);\n    }\n\n    /**\n     * The world-space next translation of this rigid-body.\n     *\n     * If this rigid-body is kinematic this value is set by the `setNextKinematicTranslation`\n     * method and is used for estimating the kinematic body velocity at the next timestep.\n     * For non-kinematic bodies, this value is currently unspecified.\n     */\n    public nextTranslation(): Vector {\n        let res = this.rawSet.rbNextTranslation(this.handle);\n        return VectorOps.fromRaw(res);\n    }\n\n    /**\n     * The world-space next orientation of this rigid-body.\n     *\n     * If this rigid-body is kinematic this value is set by the `setNextKinematicRotation`\n     * method and is used for estimating the kinematic body velocity at the next timestep.\n     * For non-kinematic bodies, this value is currently unspecified.\n     */\n    public nextRotation(): Rotation {\n        let res = this.rawSet.rbNextRotation(this.handle);\n        return RotationOps.fromRaw(res);\n    }\n\n    /**\n     * Sets the translation of this rigid-body.\n     *\n     * @param tra - The world-space position of the rigid-body.\n     * @param wakeUp - Forces the rigid-body to wake-up so it is properly affected by forces if it\n     *                 wasn't moving before modifying its position.\n     */\n    public setTranslation(tra: Vector, wakeUp: boolean) {\n        // #if DIM3\n        this.rawSet.rbSetTranslation(this.handle, tra.x, tra.y, tra.z, wakeUp);\n        // #endif\n    }\n\n    /**\n     * Sets the linear velocity of this rigid-body.\n     *\n     * @param vel - The linear velocity to set.\n     * @param wakeUp - Forces the rigid-body to wake-up if it was asleep.\n     */\n    public setLinvel(vel: Vector, wakeUp: boolean) {\n        let rawVel = VectorOps.intoRaw(vel);\n        this.rawSet.rbSetLinvel(this.handle, rawVel, wakeUp);\n        rawVel.free();\n    }\n\n    /**\n     * The scale factor applied to the gravity affecting\n     * this rigid-body.\n     */\n    public gravityScale(): number {\n        return this.rawSet.rbGravityScale(this.handle);\n    }\n\n    /**\n     * Sets the scale factor applied to the gravity affecting\n     * this rigid-body.\n     *\n     * @param factor - The scale factor to set. A value of 0.0 means\n     *   that this rigid-body will on longer be affected by gravity.\n     * @param wakeUp - Forces the rigid-body to wake-up if it was asleep.\n     */\n    public setGravityScale(factor: number, wakeUp: boolean) {\n        this.rawSet.rbSetGravityScale(this.handle, factor, wakeUp);\n    }\n\n    // #if DIM3\n    /**\n     * Sets the rotation quaternion of this rigid-body.\n     *\n     * This does nothing if a zero quaternion is provided.\n     *\n     * @param rotation - The rotation to set.\n     * @param wakeUp - Forces the rigid-body to wake-up so it is properly affected by forces if it\n     * wasn't moving before modifying its position.\n     */\n    public setRotation(rot: Rotation, wakeUp: boolean) {\n        this.rawSet.rbSetRotation(\n            this.handle,\n            rot.x,\n            rot.y,\n            rot.z,\n            rot.w,\n            wakeUp,\n        );\n    }\n\n    /**\n     * Sets the angular velocity fo this rigid-body.\n     *\n     * @param vel - The angular velocity to set.\n     * @param wakeUp - Forces the rigid-body to wake-up if it was asleep.\n     */\n    public setAngvel(vel: Vector, wakeUp: boolean) {\n        let rawVel = VectorOps.intoRaw(vel);\n        this.rawSet.rbSetAngvel(this.handle, rawVel, wakeUp);\n        rawVel.free();\n    }\n\n    // #endif\n\n\n    /**\n     * If this rigid body is kinematic, sets its future translation after the next timestep integration.\n     *\n     * This should be used instead of `rigidBody.setTranslation` to make the dynamic object\n     * interacting with this kinematic body behave as expected. Internally, Rapier will compute\n     * an artificial velocity for this rigid-body from its current position and its next kinematic\n     * position. This velocity will be used to compute forces on dynamic bodies interacting with\n     * this body.\n     *\n     * @param t - The kinematic translation to set.\n     */\n    public setNextKinematicTranslation(t: Vector) {\n        // #if DIM3\n        this.rawSet.rbSetNextKinematicTranslation(this.handle, t.x, t.y, t.z);\n        // #endif\n    }\n\n    // #if DIM3\n    /**\n     * If this rigid body is kinematic, sets its future rotation after the next timestep integration.\n     *\n     * This should be used instead of `rigidBody.setRotation` to make the dynamic object\n     * interacting with this kinematic body behave as expected. Internally, Rapier will compute\n     * an artificial velocity for this rigid-body from its current position and its next kinematic\n     * position. This velocity will be used to compute forces on dynamic bodies interacting with\n     * this body.\n     *\n     * @param rot - The kinematic rotation to set.\n     */\n    public setNextKinematicRotation(rot: Rotation) {\n        this.rawSet.rbSetNextKinematicRotation(\n            this.handle,\n            rot.x,\n            rot.y,\n            rot.z,\n            rot.w,\n        );\n    }\n\n    // #endif\n\n\n    /**\n     * The linear velocity of this rigid-body.\n     */\n    public linvel(): Vector {\n        return VectorOps.fromRaw(this.rawSet.rbLinvel(this.handle));\n    }\n\n    // #if DIM3\n    /**\n     * The angular velocity of this rigid-body.\n     */\n    public angvel(): Vector {\n        return VectorOps.fromRaw(this.rawSet.rbAngvel(this.handle));\n    }\n\n    // #endif\n\n\n    /**\n     * The mass of this rigid-body.\n     */\n    public mass(): number {\n        return this.rawSet.rbMass(this.handle);\n    }\n\n    /**\n     * The inverse mass taking into account translation locking.\n     */\n    public effectiveInvMass(): Vector {\n        return VectorOps.fromRaw(this.rawSet.rbEffectiveInvMass(this.handle));\n    }\n\n    /**\n     * The inverse of the mass of a rigid-body.\n     *\n     * If this is zero, the rigid-body is assumed to have infinite mass.\n     */\n    public invMass(): number {\n        return this.rawSet.rbInvMass(this.handle);\n    }\n\n    /**\n     * The center of mass of a rigid-body expressed in its local-space.\n     */\n    public localCom(): Vector {\n        return VectorOps.fromRaw(this.rawSet.rbLocalCom(this.handle));\n    }\n\n    /**\n     * The world-space center of mass of the rigid-body.\n     */\n    public worldCom(): Vector {\n        return VectorOps.fromRaw(this.rawSet.rbWorldCom(this.handle));\n    }\n\n\n    // #if DIM3\n    /**\n     * The inverse of the principal angular inertia of the rigid-body.\n     *\n     * Components set to zero are assumed to be infinite along the corresponding principal axis.\n     */\n    public invPrincipalInertiaSqrt(): Vector {\n        return VectorOps.fromRaw(\n            this.rawSet.rbInvPrincipalInertiaSqrt(this.handle),\n        );\n    }\n    // #endif\n\n\n    // #if DIM3\n    /**\n     * The angular inertia along the principal inertia axes of the rigid-body.\n     */\n    public principalInertia(): Vector {\n        return VectorOps.fromRaw(this.rawSet.rbPrincipalInertia(this.handle));\n    }\n    // #endif\n\n    // #if DIM3\n    /**\n     * The principal vectors of the local angular inertia tensor of the rigid-body.\n     */\n    public principalInertiaLocalFrame(): Rotation {\n        return RotationOps.fromRaw(\n            this.rawSet.rbPrincipalInertiaLocalFrame(this.handle),\n        );\n    }\n    // #endif\n\n\n    // #if DIM3\n    /**\n     * The square-root of the world-space inverse angular inertia tensor of the rigid-body,\n     * taking into account rotation locking.\n     */\n    public effectiveWorldInvInertiaSqrt(): SdpMatrix3 {\n        return SdpMatrix3Ops.fromRaw(\n            this.rawSet.rbEffectiveWorldInvInertiaSqrt(this.handle),\n        );\n    }\n    // #endif\n\n\n    // #if DIM3\n    /**\n     * The effective world-space angular inertia (that takes the potential rotation locking into account) of\n     * this rigid-body.\n     */\n    public effectiveAngularInertia(): SdpMatrix3 {\n        return SdpMatrix3Ops.fromRaw(\n            this.rawSet.rbEffectiveAngularInertia(this.handle),\n        );\n    }\n    // #endif\n\n    /**\n     * Put this rigid body to sleep.\n     *\n     * A sleeping body no longer moves and is no longer simulated by the physics engine unless\n     * it is waken up. It can be woken manually with `this.wakeUp()` or automatically due to\n     * external forces like contacts.\n     */\n    public sleep() {\n        this.rawSet.rbSleep(this.handle);\n    }\n\n    /**\n     * Wakes this rigid-body up.\n     *\n     * A dynamic rigid-body that does not move during several consecutive frames will\n     * be put to sleep by the physics engine, i.e., it will stop being simulated in order\n     * to avoid useless computations.\n     * This methods forces a sleeping rigid-body to wake-up. This is useful, e.g., before modifying\n     * the position of a dynamic body so that it is properly simulated afterwards.\n     */\n    public wakeUp() {\n        this.rawSet.rbWakeUp(this.handle);\n    }\n\n    /**\n     * Is CCD enabled for this rigid-body?\n     */\n    public isCcdEnabled(): boolean {\n        return this.rawSet.rbIsCcdEnabled(this.handle);\n    }\n\n    /**\n     * The number of colliders attached to this rigid-body.\n     */\n    public numColliders(): number {\n        return this.rawSet.rbNumColliders(this.handle);\n    }\n\n    /**\n     * Retrieves the `i-th` collider attached to this rigid-body.\n     *\n     * @param i - The index of the collider to retrieve. Must be a number in `[0, this.numColliders()[`.\n     *         This index is **not** the same as the unique identifier of the collider.\n     */\n    public collider(i: number): Collider {\n        return this.colliderSet.get(this.rawSet.rbCollider(this.handle, i));\n    }\n\n    /**\n     * Sets whether this rigid-body is enabled or not.\n     *\n     * @param enabled - Set to `false` to disable this rigid-body and all its attached colliders.\n     */\n    public setEnabled(enabled: boolean) {\n        this.rawSet.rbSetEnabled(this.handle, enabled);\n    }\n\n    /**\n     * Is this rigid-body enabled?\n     */\n    public isEnabled(): boolean {\n        return this.rawSet.rbIsEnabled(this.handle);\n    }\n\n    /**\n     * The status of this rigid-body: static, dynamic, or kinematic.\n     */\n    public bodyType(): RigidBodyType {\n        return this.rawSet.rbBodyType(this.handle) as number as RigidBodyType;\n    }\n\n    /**\n     * Set a new status for this rigid-body: static, dynamic, or kinematic.\n     */\n    public setBodyType(type: RigidBodyType, wakeUp: boolean) {\n        return this.rawSet.rbSetBodyType(\n            this.handle,\n            type as number as RawRigidBodyType,\n            wakeUp,\n        );\n    }\n\n    /**\n     * Is this rigid-body sleeping?\n     */\n    public isSleeping(): boolean {\n        return this.rawSet.rbIsSleeping(this.handle);\n    }\n\n    /**\n     * Is the velocity of this rigid-body not zero?\n     */\n    public isMoving(): boolean {\n        return this.rawSet.rbIsMoving(this.handle);\n    }\n\n    /**\n     * Is this rigid-body static?\n     */\n    public isFixed(): boolean {\n        return this.rawSet.rbIsFixed(this.handle);\n    }\n\n    /**\n     * Is this rigid-body kinematic?\n     */\n    public isKinematic(): boolean {\n        return this.rawSet.rbIsKinematic(this.handle);\n    }\n\n    /**\n     * Is this rigid-body dynamic?\n     */\n    public isDynamic(): boolean {\n        return this.rawSet.rbIsDynamic(this.handle);\n    }\n\n    /**\n     * The linear damping coefficient of this rigid-body.\n     */\n    public linearDamping(): number {\n        return this.rawSet.rbLinearDamping(this.handle);\n    }\n\n    /**\n     * The angular damping coefficient of this rigid-body.\n     */\n    public angularDamping(): number {\n        return this.rawSet.rbAngularDamping(this.handle);\n    }\n\n    /**\n     * Sets the linear damping factor applied to this rigid-body.\n     *\n     * @param factor - The damping factor to set.\n     */\n    public setLinearDamping(factor: number) {\n        this.rawSet.rbSetLinearDamping(this.handle, factor);\n    }\n\n    /**\n     * Recompute the mass-properties of this rigid-bodies based on its currently attached colliders.\n     */\n    public recomputeMassPropertiesFromColliders() {\n        this.rawSet.rbRecomputeMassPropertiesFromColliders(\n            this.handle,\n            this.colliderSet.raw,\n        );\n    }\n\n    /**\n     * Sets the rigid-body's additional mass.\n     *\n     * The total angular inertia of the rigid-body will be scaled automatically based on this additional mass. If this\n     * scaling effect isn’t desired, use Self::additional_mass_properties instead of this method.\n     *\n     * This is only the \"additional\" mass because the total mass of the rigid-body is equal to the sum of this\n     * additional mass and the mass computed from the colliders (with non-zero densities) attached to this rigid-body.\n     *\n     * That total mass (which includes the attached colliders’ contributions) will be updated at the name physics step,\n     * or can be updated manually with `this.recomputeMassPropertiesFromColliders`.\n     *\n     * This will override any previous additional mass-properties set by `this.setAdditionalMass`,\n     * `this.setAdditionalMassProperties`, `RigidBodyDesc::setAdditionalMass`, or\n     * `RigidBodyDesc.setAdditionalMassfProperties` for this rigid-body.\n     *\n     * @param mass - The additional mass to set.\n     * @param wakeUp - If `true` then the rigid-body will be woken up if it was put to sleep because it did not move for a while.\n     */\n    public setAdditionalMass(mass: number, wakeUp: boolean) {\n        this.rawSet.rbSetAdditionalMass(this.handle, mass, wakeUp);\n    }\n\n    // #if DIM3\n    /**\n     * Sets the rigid-body's additional mass-properties.\n     *\n     * This is only the \"additional\" mass-properties because the total mass-properties of the rigid-body is equal to the\n     * sum of this additional mass-properties and the mass computed from the colliders (with non-zero densities) attached\n     * to this rigid-body.\n     *\n     * That total mass-properties (which include the attached colliders’ contributions) will be updated at the name\n     * physics step, or can be updated manually with `this.recomputeMassPropertiesFromColliders`.\n     *\n     * This will override any previous mass-properties set by `this.setAdditionalMass`,\n     * `this.setAdditionalMassProperties`, `RigidBodyDesc.setAdditionalMass`, or `RigidBodyDesc.setAdditionalMassProperties`\n     * for this rigid-body.\n     *\n     * If `wake_up` is true then the rigid-body will be woken up if it was put to sleep because it did not move for a while.\n     */\n    public setAdditionalMassProperties(\n        mass: number,\n        centerOfMass: Vector,\n        principalAngularInertia: Vector,\n        angularInertiaLocalFrame: Rotation,\n        wakeUp: boolean,\n    ) {\n        let rawCom = VectorOps.intoRaw(centerOfMass);\n        let rawPrincipalInertia = VectorOps.intoRaw(principalAngularInertia);\n        let rawInertiaFrame = RotationOps.intoRaw(angularInertiaLocalFrame);\n\n        this.rawSet.rbSetAdditionalMassProperties(\n            this.handle,\n            mass,\n            rawCom,\n            rawPrincipalInertia,\n            rawInertiaFrame,\n            wakeUp,\n        );\n\n        rawCom.free();\n        rawPrincipalInertia.free();\n        rawInertiaFrame.free();\n    }\n    // #endif\n\n\n    /**\n     * Sets the linear damping factor applied to this rigid-body.\n     *\n     * @param factor - The damping factor to set.\n     */\n    public setAngularDamping(factor: number) {\n        this.rawSet.rbSetAngularDamping(this.handle, factor);\n    }\n\n    /**\n     * Resets to zero the user forces (but not torques) applied to this rigid-body.\n     *\n     * @param wakeUp - should the rigid-body be automatically woken-up?\n     */\n    public resetForces(wakeUp: boolean) {\n        this.rawSet.rbResetForces(this.handle, wakeUp);\n    }\n\n    /**\n     * Resets to zero the user torques applied to this rigid-body.\n     *\n     * @param wakeUp - should the rigid-body be automatically woken-up?\n     */\n    public resetTorques(wakeUp: boolean) {\n        this.rawSet.rbResetTorques(this.handle, wakeUp);\n    }\n\n    /**\n     * Adds a force at the center-of-mass of this rigid-body.\n     *\n     * @param force - the world-space force to add to the rigid-body.\n     * @param wakeUp - should the rigid-body be automatically woken-up?\n     */\n    public addForce(force: Vector, wakeUp: boolean) {\n        const rawForce = VectorOps.intoRaw(force);\n        this.rawSet.rbAddForce(this.handle, rawForce, wakeUp);\n        rawForce.free();\n    }\n\n    /**\n     * Applies an impulse at the center-of-mass of this rigid-body.\n     *\n     * @param impulse - the world-space impulse to apply on the rigid-body.\n     * @param wakeUp - should the rigid-body be automatically woken-up?\n     */\n    public applyImpulse(impulse: Vector, wakeUp: boolean) {\n        const rawImpulse = VectorOps.intoRaw(impulse);\n        this.rawSet.rbApplyImpulse(this.handle, rawImpulse, wakeUp);\n        rawImpulse.free();\n    }\n\n\n    // #if DIM3\n    /**\n     * Adds a torque at the center-of-mass of this rigid-body.\n     *\n     * @param torque - the world-space torque to add to the rigid-body.\n     * @param wakeUp - should the rigid-body be automatically woken-up?\n     */\n    public addTorque(torque: Vector, wakeUp: boolean) {\n        const rawTorque = VectorOps.intoRaw(torque);\n        this.rawSet.rbAddTorque(this.handle, rawTorque, wakeUp);\n        rawTorque.free();\n    }\n\n    // #endif\n\n\n    // #if DIM3\n    /**\n     * Applies an impulsive torque at the center-of-mass of this rigid-body.\n     *\n     * @param torqueImpulse - the world-space torque impulse to apply on the rigid-body.\n     * @param wakeUp - should the rigid-body be automatically woken-up?\n     */\n    public applyTorqueImpulse(torqueImpulse: Vector, wakeUp: boolean) {\n        const rawTorqueImpulse = VectorOps.intoRaw(torqueImpulse);\n        this.rawSet.rbApplyTorqueImpulse(this.handle, rawTorqueImpulse, wakeUp);\n        rawTorqueImpulse.free();\n    }\n\n    // #endif\n\n    /**\n     * Adds a force at the given world-space point of this rigid-body.\n     *\n     * @param force - the world-space force to add to the rigid-body.\n     * @param point - the world-space point where the impulse is to be applied on the rigid-body.\n     * @param wakeUp - should the rigid-body be automatically woken-up?\n     */\n    public addForceAtPoint(force: Vector, point: Vector, wakeUp: boolean) {\n        const rawForce = VectorOps.intoRaw(force);\n        const rawPoint = VectorOps.intoRaw(point);\n        this.rawSet.rbAddForceAtPoint(this.handle, rawForce, rawPoint, wakeUp);\n        rawForce.free();\n        rawPoint.free();\n    }\n\n    /**\n     * Applies an impulse at the given world-space point of this rigid-body.\n     *\n     * @param impulse - the world-space impulse to apply on the rigid-body.\n     * @param point - the world-space point where the impulse is to be applied on the rigid-body.\n     * @param wakeUp - should the rigid-body be automatically woken-up?\n     */\n    public applyImpulseAtPoint(\n        impulse: Vector,\n        point: Vector,\n        wakeUp: boolean,\n    ) {\n        const rawImpulse = VectorOps.intoRaw(impulse);\n        const rawPoint = VectorOps.intoRaw(point);\n        this.rawSet.rbApplyImpulseAtPoint(\n            this.handle,\n            rawImpulse,\n            rawPoint,\n            wakeUp,\n        );\n        rawImpulse.free();\n        rawPoint.free();\n    }\n}\n\nexport class RigidBodyDesc {\n    enabled: boolean;\n    translation: Vector;\n    rotation: Rotation;\n    gravityScale: number;\n    mass: number;\n    massOnly: boolean;\n    centerOfMass: Vector;\n    translationsEnabledX: boolean;\n    translationsEnabledY: boolean;\n    linvel: Vector;\n    // #if DIM3\n    angvel: Vector;\n    principalAngularInertia: Vector;\n    angularInertiaLocalFrame: Rotation;\n    translationsEnabledZ: boolean;\n    rotationsEnabledX: boolean;\n    rotationsEnabledY: boolean;\n    rotationsEnabledZ: boolean;\n    // #endif\n    linearDamping: number;\n    angularDamping: number;\n    status: RigidBodyType;\n    canSleep: boolean;\n    sleeping: boolean;\n    ccdEnabled: boolean;\n    dominanceGroup: number;\n    additionalSolverIterations: number;\n    userData?: unknown;\n\n    constructor(status: RigidBodyType) {\n        this.enabled = true;\n        this.status = status;\n        this.translation = VectorOps.zeros();\n        this.rotation = RotationOps.identity();\n        this.gravityScale = 1.0;\n        this.linvel = VectorOps.zeros();\n        this.mass = 0.0;\n        this.massOnly = false;\n        this.centerOfMass = VectorOps.zeros();\n        this.translationsEnabledX = true;\n        this.translationsEnabledY = true;\n        // #if DIM3\n        this.angvel = VectorOps.zeros();\n        this.principalAngularInertia = VectorOps.zeros();\n        this.angularInertiaLocalFrame = RotationOps.identity();\n        this.translationsEnabledZ = true;\n        this.rotationsEnabledX = true;\n        this.rotationsEnabledY = true;\n        this.rotationsEnabledZ = true;\n        // #endif\n        this.linearDamping = 0.0;\n        this.angularDamping = 0.0;\n        this.canSleep = true;\n        this.sleeping = false;\n        this.ccdEnabled = false;\n        this.dominanceGroup = 0;\n        this.additionalSolverIterations = 0;\n    }\n\n    /**\n     * A rigid-body descriptor used to build a dynamic rigid-body.\n     */\n    public static dynamic(): RigidBodyDesc {\n        return new RigidBodyDesc(RigidBodyType.Dynamic);\n    }\n\n    /**\n     * A rigid-body descriptor used to build a position-based kinematic rigid-body.\n     */\n    public static kinematicPositionBased(): RigidBodyDesc {\n        return new RigidBodyDesc(RigidBodyType.KinematicPositionBased);\n    }\n\n    /**\n     * A rigid-body descriptor used to build a velocity-based kinematic rigid-body.\n     */\n    public static kinematicVelocityBased(): RigidBodyDesc {\n        return new RigidBodyDesc(RigidBodyType.KinematicVelocityBased);\n    }\n\n    /**\n     * A rigid-body descriptor used to build a fixed rigid-body.\n     */\n    public static fixed(): RigidBodyDesc {\n        return new RigidBodyDesc(RigidBodyType.Fixed);\n    }\n\n    /**\n     * A rigid-body descriptor used to build a dynamic rigid-body.\n     *\n     * @deprecated The method has been renamed to `.dynamic()`.\n     */\n    public static newDynamic(): RigidBodyDesc {\n        return new RigidBodyDesc(RigidBodyType.Dynamic);\n    }\n\n    /**\n     * A rigid-body descriptor used to build a position-based kinematic rigid-body.\n     *\n     * @deprecated The method has been renamed to `.kinematicPositionBased()`.\n     */\n    public static newKinematicPositionBased(): RigidBodyDesc {\n        return new RigidBodyDesc(RigidBodyType.KinematicPositionBased);\n    }\n\n    /**\n     * A rigid-body descriptor used to build a velocity-based kinematic rigid-body.\n     *\n     * @deprecated The method has been renamed to `.kinematicVelocityBased()`.\n     */\n    public static newKinematicVelocityBased(): RigidBodyDesc {\n        return new RigidBodyDesc(RigidBodyType.KinematicVelocityBased);\n    }\n\n    /**\n     * A rigid-body descriptor used to build a fixed rigid-body.\n     *\n     * @deprecated The method has been renamed to `.fixed()`.\n     */\n    public static newStatic(): RigidBodyDesc {\n        return new RigidBodyDesc(RigidBodyType.Fixed);\n    }\n\n    public setDominanceGroup(group: number): RigidBodyDesc {\n        this.dominanceGroup = group;\n        return this;\n    }\n\n    /**\n     * Sets the number of additional solver iterations that will be run for this\n     * rigid-body and everything that interacts with it directly or indirectly\n     * through contacts or joints.\n     *\n     * Compared to increasing the global `World.numSolverIteration`, setting this\n     * value lets you increase accuracy on only a subset of the scene, resulting in reduced\n     * performance loss.\n     *\n     * @param iters - The new number of additional solver iterations (default: 0).\n     */\n    public setAdditionalSolverIterations(iters: number): RigidBodyDesc {\n        this.additionalSolverIterations = iters;\n        return this;\n    }\n\n    /**\n     * Sets whether the created rigid-body will be enabled or disabled.\n     * @param enabled − If set to `false` the rigid-body will be disabled at creation.\n     */\n    public setEnabled(enabled: boolean): RigidBodyDesc {\n        this.enabled = enabled;\n        return this;\n    }\n\n\n    // #if DIM3\n    /**\n     * Sets the initial translation of the rigid-body to create.\n     *\n     * @param tra - The translation to set.\n     */\n    public setTranslation(x: number, y: number, z: number): RigidBodyDesc {\n        if (\n            typeof x != \"number\" ||\n            typeof y != \"number\" ||\n            typeof z != \"number\"\n        )\n            throw TypeError(\"The translation components must be numbers.\");\n\n        this.translation = {x: x, y: y, z: z};\n        return this;\n    }\n\n    // #endif\n\n    /**\n     * Sets the initial rotation of the rigid-body to create.\n     *\n     * @param rot - The rotation to set.\n     */\n    public setRotation(rot: Rotation): RigidBodyDesc {\n        // #if DIM3\n        RotationOps.copy(this.rotation, rot);\n        // #endif\n        return this;\n    }\n\n    /**\n     * Sets the scale factor applied to the gravity affecting\n     * the rigid-body being built.\n     *\n     * @param scale - The scale factor. Set this to `0.0` if the rigid-body\n     *   needs to ignore gravity.\n     */\n    public setGravityScale(scale: number): RigidBodyDesc {\n        this.gravityScale = scale;\n        return this;\n    }\n\n    /**\n     * Sets the initial mass of the rigid-body being built, before adding colliders' contributions.\n     *\n     * @param mass − The initial mass of the rigid-body to create.\n     */\n    public setAdditionalMass(mass: number): RigidBodyDesc {\n        this.mass = mass;\n        this.massOnly = true;\n        return this;\n    }\n\n\n    // #if DIM3\n    /**\n     * Sets the initial linear velocity of the rigid-body to create.\n     *\n     * @param x - The linear velocity to set along the `x` axis.\n     * @param y - The linear velocity to set along the `y` axis.\n     * @param z - The linear velocity to set along the `z` axis.\n     */\n    public setLinvel(x: number, y: number, z: number): RigidBodyDesc {\n        if (\n            typeof x != \"number\" ||\n            typeof y != \"number\" ||\n            typeof z != \"number\"\n        )\n            throw TypeError(\"The linvel components must be numbers.\");\n\n        this.linvel = {x: x, y: y, z: z};\n        return this;\n    }\n\n    /**\n     * Sets the initial angular velocity of the rigid-body to create.\n     *\n     * @param vel - The angular velocity to set.\n     */\n    public setAngvel(vel: Vector): RigidBodyDesc {\n        VectorOps.copy(this.angvel, vel);\n        return this;\n    }\n\n    /**\n     * Sets the mass properties of the rigid-body being built.\n     *\n     * Note that the final mass properties of the rigid-bodies depends\n     * on the initial mass-properties of the rigid-body (set by this method)\n     * to which is added the contributions of all the colliders with non-zero density\n     * attached to this rigid-body.\n     *\n     * Therefore, if you want your provided mass properties to be the final\n     * mass properties of your rigid-body, don't attach colliders to it, or\n     * only attach colliders with densities equal to zero.\n     *\n     * @param mass − The initial mass of the rigid-body to create.\n     * @param centerOfMass − The initial center-of-mass of the rigid-body to create.\n     * @param principalAngularInertia − The initial principal angular inertia of the rigid-body to create.\n     *                                  These are the eigenvalues of the angular inertia matrix.\n     * @param angularInertiaLocalFrame − The initial local angular inertia frame of the rigid-body to create.\n     *                                   These are the eigenvectors of the angular inertia matrix.\n     */\n    public setAdditionalMassProperties(\n        mass: number,\n        centerOfMass: Vector,\n        principalAngularInertia: Vector,\n        angularInertiaLocalFrame: Rotation,\n    ): RigidBodyDesc {\n        this.mass = mass;\n        VectorOps.copy(this.centerOfMass, centerOfMass);\n        VectorOps.copy(this.principalAngularInertia, principalAngularInertia);\n        RotationOps.copy(\n            this.angularInertiaLocalFrame,\n            angularInertiaLocalFrame,\n        );\n        this.massOnly = false;\n        return this;\n    }\n\n    /**\n     * Allow translation of this rigid-body only along specific axes.\n     * @param translationsEnabledX - Are translations along the X axis enabled?\n     * @param translationsEnabledY - Are translations along the y axis enabled?\n     * @param translationsEnabledZ - Are translations along the Z axis enabled?\n     */\n    public enabledTranslations(\n        translationsEnabledX: boolean,\n        translationsEnabledY: boolean,\n        translationsEnabledZ: boolean,\n    ): RigidBodyDesc {\n        this.translationsEnabledX = translationsEnabledX;\n        this.translationsEnabledY = translationsEnabledY;\n        this.translationsEnabledZ = translationsEnabledZ;\n        return this;\n    }\n    /**\n     * Allow translation of this rigid-body only along specific axes.\n     * @param translationsEnabledX - Are translations along the X axis enabled?\n     * @param translationsEnabledY - Are translations along the y axis enabled?\n     * @param translationsEnabledZ - Are translations along the Z axis enabled?\n     * @deprecated use `this.enabledTranslations` with the same arguments instead.\n     */\n    public restrictTranslations(\n        translationsEnabledX: boolean,\n        translationsEnabledY: boolean,\n        translationsEnabledZ: boolean,\n    ): RigidBodyDesc {\n        return this.enabledTranslations(\n            translationsEnabledX,\n            translationsEnabledY,\n            translationsEnabledZ,\n        );\n    }\n\n    /**\n     * Locks all translations that would have resulted from forces on\n     * the created rigid-body.\n     */\n    public lockTranslations(): RigidBodyDesc {\n        return this.enabledTranslations(false, false, false);\n    }\n\n    /**\n     * Allow rotation of this rigid-body only along specific axes.\n     * @param rotationsEnabledX - Are rotations along the X axis enabled?\n     * @param rotationsEnabledY - Are rotations along the y axis enabled?\n     * @param rotationsEnabledZ - Are rotations along the Z axis enabled?\n     */\n    public enabledRotations(\n        rotationsEnabledX: boolean,\n        rotationsEnabledY: boolean,\n        rotationsEnabledZ: boolean,\n    ): RigidBodyDesc {\n        this.rotationsEnabledX = rotationsEnabledX;\n        this.rotationsEnabledY = rotationsEnabledY;\n        this.rotationsEnabledZ = rotationsEnabledZ;\n        return this;\n    }\n\n    /**\n     * Allow rotation of this rigid-body only along specific axes.\n     * @param rotationsEnabledX - Are rotations along the X axis enabled?\n     * @param rotationsEnabledY - Are rotations along the y axis enabled?\n     * @param rotationsEnabledZ - Are rotations along the Z axis enabled?\n     * @deprecated use `this.enabledRotations` with the same arguments instead.\n     */\n    public restrictRotations(\n        rotationsEnabledX: boolean,\n        rotationsEnabledY: boolean,\n        rotationsEnabledZ: boolean,\n    ): RigidBodyDesc {\n        return this.enabledRotations(\n            rotationsEnabledX,\n            rotationsEnabledY,\n            rotationsEnabledZ,\n        );\n    }\n\n    /**\n     * Locks all rotations that would have resulted from forces on\n     * the created rigid-body.\n     */\n    public lockRotations(): RigidBodyDesc {\n        return this.restrictRotations(false, false, false);\n    }\n\n    // #endif\n\n    /**\n     * Sets the linear damping of the rigid-body to create.\n     *\n     * This will progressively slowdown the translational movement of the rigid-body.\n     *\n     * @param damping - The angular damping coefficient. Should be >= 0. The higher this\n     *                  value is, the stronger the translational slowdown will be.\n     */\n    public setLinearDamping(damping: number): RigidBodyDesc {\n        this.linearDamping = damping;\n        return this;\n    }\n\n    /**\n     * Sets the angular damping of the rigid-body to create.\n     *\n     * This will progressively slowdown the rotational movement of the rigid-body.\n     *\n     * @param damping - The angular damping coefficient. Should be >= 0. The higher this\n     *                  value is, the stronger the rotational slowdown will be.\n     */\n    public setAngularDamping(damping: number): RigidBodyDesc {\n        this.angularDamping = damping;\n        return this;\n    }\n\n    /**\n     * Sets whether or not the rigid-body to create can sleep.\n     *\n     * @param can - true if the rigid-body can sleep, false if it can't.\n     */\n    public setCanSleep(can: boolean): RigidBodyDesc {\n        this.canSleep = can;\n        return this;\n    }\n\n    /**\n     * Sets whether or not the rigid-body is to be created asleep.\n     *\n     * @param can - true if the rigid-body should be in sleep, default false.\n     */\n    setSleeping(sleeping: boolean): RigidBodyDesc {\n        this.sleeping = sleeping;\n        return this;\n    }\n\n    /**\n     * Sets whether Continuous Collision Detection (CCD) is enabled for this rigid-body.\n     *\n     * @param enabled - true if the rigid-body has CCD enabled.\n     */\n    public setCcdEnabled(enabled: boolean): RigidBodyDesc {\n        this.ccdEnabled = enabled;\n        return this;\n    }\n\n    /**\n     * Sets the user-defined object of this rigid-body.\n     *\n     * @param userData - The user-defined object to set.\n     */\n    public setUserData(data?: unknown): RigidBodyDesc {\n        this.userData = data;\n        return this;\n    }\n}\n","import {Rotation, Vector, VectorOps, RotationOps} from \"../math\";\nimport {\n    RawGenericJoint,\n    RawImpulseJointSet,\n    RawRigidBodySet,\n    RawJointAxis,\n    RawJointType,\n    RawMotorModel,\n} from \"../raw\";\nimport {RigidBody, RigidBodyHandle} from \"./rigid_body\";\nimport {RigidBodySet} from \"./rigid_body_set\";\n// #if DIM3\nimport {Quaternion} from \"../math\";\n// #endif\n\n/**\n * The integer identifier of a collider added to a `ColliderSet`.\n */\nexport type ImpulseJointHandle = number;\n\n/**\n * An enum grouping all possible types of joints:\n *\n * - `Revolute`: A revolute joint that removes all degrees of freedom between the affected\n *               bodies except for the rotation along one axis.\n * - `Fixed`: A fixed joint that removes all relative degrees of freedom between the affected bodies.\n * - `Prismatic`: A prismatic joint that removes all degrees of freedom between the affected\n *                bodies except for the translation along one axis.\n * - `Spherical`: (3D only) A spherical joint that removes all relative linear degrees of freedom between the affected bodies.\n * - `Generic`: (3D only) A joint with customizable degrees of freedom, allowing any of the 6 axes to be locked.\n */\nexport enum JointType {\n    Revolute,\n    Fixed,\n    Prismatic,\n    Rope,\n    Spring,\n    // #if DIM3\n    Spherical,\n    Generic,\n    // #endif\n}\n\nexport enum MotorModel {\n    AccelerationBased,\n    ForceBased,\n}\n\n/**\n * An enum representing the possible joint axes of a generic joint.\n * They can be ORed together, like:\n * JointAxesMask.X || JointAxesMask.Y\n * to get a joint that is only free in the X and Y translational (positional) axes.\n *\n * Possible free axes are:\n *\n * - `X`: X translation axis\n * - `Y`: Y translation axis\n * - `Z`: Z translation axis\n * - `AngX`: X angular rotation axis\n * - `AngY`: Y angular rotations axis\n * - `AngZ`: Z angular rotation axis\n */\nexport enum JointAxesMask {\n    X = 1 << 0,\n    Y = 1 << 1,\n    Z = 1 << 2,\n    AngX = 1 << 3,\n    AngY = 1 << 4,\n    AngZ = 1 << 5,\n}\n\nexport class ImpulseJoint {\n    protected rawSet: RawImpulseJointSet; // The ImpulseJoint won't need to free this.\n    protected bodySet: RigidBodySet; // The ImpulseJoint won’t need to free this.\n    handle: ImpulseJointHandle;\n\n    constructor(\n        rawSet: RawImpulseJointSet,\n        bodySet: RigidBodySet,\n        handle: ImpulseJointHandle,\n    ) {\n        this.rawSet = rawSet;\n        this.bodySet = bodySet;\n        this.handle = handle;\n    }\n\n    public static newTyped(\n        rawSet: RawImpulseJointSet,\n        bodySet: RigidBodySet,\n        handle: ImpulseJointHandle,\n    ): ImpulseJoint {\n        switch (rawSet.jointType(handle)) {\n            case RawJointType.Revolute:\n                return new RevoluteImpulseJoint(rawSet, bodySet, handle);\n            case RawJointType.Prismatic:\n                return new PrismaticImpulseJoint(rawSet, bodySet, handle);\n            case RawJointType.Fixed:\n                return new FixedImpulseJoint(rawSet, bodySet, handle);\n            case RawJointType.Spring:\n                return new SpringImpulseJoint(rawSet, bodySet, handle);\n            case RawJointType.Rope:\n                return new RopeImpulseJoint(rawSet, bodySet, handle);\n            // #if DIM3\n            case RawJointType.Spherical:\n                return new SphericalImpulseJoint(rawSet, bodySet, handle);\n            case RawJointType.Generic:\n                return new GenericImpulseJoint(rawSet, bodySet, handle);\n            // #endif\n            default:\n                return new ImpulseJoint(rawSet, bodySet, handle);\n        }\n    }\n\n    /** @internal */\n    public finalizeDeserialization(bodySet: RigidBodySet) {\n        this.bodySet = bodySet;\n    }\n\n    /**\n     * Checks if this joint is still valid (i.e. that it has\n     * not been deleted from the joint set yet).\n     */\n    public isValid(): boolean {\n        return this.rawSet.contains(this.handle);\n    }\n\n    /**\n     * The first rigid-body this joint it attached to.\n     */\n    public body1(): RigidBody {\n        return this.bodySet.get(this.rawSet.jointBodyHandle1(this.handle));\n    }\n\n    /**\n     * The second rigid-body this joint is attached to.\n     */\n    public body2(): RigidBody {\n        return this.bodySet.get(this.rawSet.jointBodyHandle2(this.handle));\n    }\n\n    /**\n     * The type of this joint given as a string.\n     */\n    public type(): JointType {\n        return this.rawSet.jointType(this.handle) as number as JointType;\n    }\n\n    // #if DIM3\n    /**\n     * The rotation quaternion that aligns this joint's first local axis to the `x` axis.\n     */\n    public frameX1(): Rotation {\n        return RotationOps.fromRaw(this.rawSet.jointFrameX1(this.handle));\n    }\n\n    // #endif\n\n    // #if DIM3\n    /**\n     * The rotation matrix that aligns this joint's second local axis to the `x` axis.\n     */\n    public frameX2(): Rotation {\n        return RotationOps.fromRaw(this.rawSet.jointFrameX2(this.handle));\n    }\n\n    // #endif\n\n    /**\n     * The position of the first anchor of this joint.\n     *\n     * The first anchor gives the position of the application point on the\n     * local frame of the first rigid-body it is attached to.\n     */\n    public anchor1(): Vector {\n        return VectorOps.fromRaw(this.rawSet.jointAnchor1(this.handle));\n    }\n\n    /**\n     * The position of the second anchor of this joint.\n     *\n     * The second anchor gives the position of the application point on the\n     * local frame of the second rigid-body it is attached to.\n     */\n    public anchor2(): Vector {\n        return VectorOps.fromRaw(this.rawSet.jointAnchor2(this.handle));\n    }\n\n    /**\n     * Sets the position of the first anchor of this joint.\n     *\n     * The first anchor gives the position of the application point on the\n     * local frame of the first rigid-body it is attached to.\n     */\n    public setAnchor1(newPos: Vector) {\n        const rawPoint = VectorOps.intoRaw(newPos);\n        this.rawSet.jointSetAnchor1(this.handle, rawPoint);\n        rawPoint.free();\n    }\n\n    /**\n     * Sets the position of the second anchor of this joint.\n     *\n     * The second anchor gives the position of the application point on the\n     * local frame of the second rigid-body it is attached to.\n     */\n    public setAnchor2(newPos: Vector) {\n        const rawPoint = VectorOps.intoRaw(newPos);\n        this.rawSet.jointSetAnchor2(this.handle, rawPoint);\n        rawPoint.free();\n    }\n\n    /**\n     * Controls whether contacts are computed between colliders attached\n     * to the rigid-bodies linked by this joint.\n     */\n    public setContactsEnabled(enabled: boolean) {\n        this.rawSet.jointSetContactsEnabled(this.handle, enabled);\n    }\n\n    /**\n     * Indicates if contacts are enabled between colliders attached\n     * to the rigid-bodies linked by this joint.\n     */\n    public contactsEnabled(): boolean {\n        return this.rawSet.jointContactsEnabled(this.handle);\n    }\n}\n\nexport class UnitImpulseJoint extends ImpulseJoint {\n    /**\n     * The axis left free by this joint.\n     */\n    protected rawAxis?(): RawJointAxis;\n\n    /**\n     * Are the limits enabled for this joint?\n     */\n    public limitsEnabled(): boolean {\n        return this.rawSet.jointLimitsEnabled(this.handle, this.rawAxis());\n    }\n\n    /**\n     * The min limit of this joint.\n     */\n    public limitsMin(): number {\n        return this.rawSet.jointLimitsMin(this.handle, this.rawAxis());\n    }\n\n    /**\n     * The max limit of this joint.\n     */\n    public limitsMax(): number {\n        return this.rawSet.jointLimitsMax(this.handle, this.rawAxis());\n    }\n\n    /**\n     * Sets the limits of this joint.\n     *\n     * @param min - The minimum bound of this joint’s free coordinate.\n     * @param max - The maximum bound of this joint’s free coordinate.\n     */\n    public setLimits(min: number, max: number) {\n        this.rawSet.jointSetLimits(this.handle, this.rawAxis(), min, max);\n    }\n\n    public configureMotorModel(model: MotorModel) {\n        this.rawSet.jointConfigureMotorModel(\n            this.handle,\n            this.rawAxis(),\n            model as number as RawMotorModel,\n        );\n    }\n\n    public configureMotorVelocity(targetVel: number, factor: number) {\n        this.rawSet.jointConfigureMotorVelocity(\n            this.handle,\n            this.rawAxis(),\n            targetVel,\n            factor,\n        );\n    }\n\n    public configureMotorPosition(\n        targetPos: number,\n        stiffness: number,\n        damping: number,\n    ) {\n        this.rawSet.jointConfigureMotorPosition(\n            this.handle,\n            this.rawAxis(),\n            targetPos,\n            stiffness,\n            damping,\n        );\n    }\n\n    public configureMotor(\n        targetPos: number,\n        targetVel: number,\n        stiffness: number,\n        damping: number,\n    ) {\n        this.rawSet.jointConfigureMotor(\n            this.handle,\n            this.rawAxis(),\n            targetPos,\n            targetVel,\n            stiffness,\n            damping,\n        );\n    }\n}\n\nexport class FixedImpulseJoint extends ImpulseJoint {}\n\nexport class RopeImpulseJoint extends ImpulseJoint {}\n\nexport class SpringImpulseJoint extends ImpulseJoint {}\n\nexport class PrismaticImpulseJoint extends UnitImpulseJoint {\n    public rawAxis(): RawJointAxis {\n        return RawJointAxis.X;\n    }\n}\n\nexport class RevoluteImpulseJoint extends UnitImpulseJoint {\n    public rawAxis(): RawJointAxis {\n        return RawJointAxis.AngX;\n    }\n}\n\n// #if DIM3\nexport class GenericImpulseJoint extends ImpulseJoint {}\n\nexport class SphericalImpulseJoint extends ImpulseJoint {\n    /* Unsupported by this alpha release.\n    public configureMotorModel(model: MotorModel) {\n        this.rawSet.jointConfigureMotorModel(this.handle, model);\n    }\n\n    public configureMotorVelocity(targetVel: Vector, factor: number) {\n        this.rawSet.jointConfigureBallMotorVelocity(this.handle, targetVel.x, targetVel.y, targetVel.z, factor);\n    }\n\n    public configureMotorPosition(targetPos: Quaternion, stiffness: number, damping: number) {\n        this.rawSet.jointConfigureBallMotorPosition(this.handle, targetPos.w, targetPos.x, targetPos.y, targetPos.z, stiffness, damping);\n    }\n\n    public configureMotor(targetPos: Quaternion, targetVel: Vector, stiffness: number, damping: number) {\n        this.rawSet.jointConfigureBallMotor(this.handle,\n            targetPos.w, targetPos.x, targetPos.y, targetPos.z,\n            targetVel.x, targetVel.y, targetVel.z,\n            stiffness, damping);\n    }\n     */\n}\n// #endif\n\nexport class JointData {\n    anchor1: Vector;\n    anchor2: Vector;\n    axis: Vector;\n    frame1: Rotation;\n    frame2: Rotation;\n    jointType: JointType;\n    limitsEnabled: boolean;\n    limits: Array<number>;\n    axesMask: JointAxesMask;\n    stiffness: number;\n    damping: number;\n    length: number;\n\n    private constructor() {}\n\n    /**\n     * Creates a new joint descriptor that builds a Fixed joint.\n     *\n     * A fixed joint removes all the degrees of freedom between the affected bodies, ensuring their\n     * anchor and local frames coincide in world-space.\n     *\n     * @param anchor1 - Point where the joint is attached on the first rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     * @param frame1 - The reference orientation of the joint wrt. the first rigid-body.\n     * @param anchor2 - Point where the joint is attached on the second rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     * @param frame2 - The reference orientation of the joint wrt. the second rigid-body.\n     */\n    public static fixed(\n        anchor1: Vector,\n        frame1: Rotation,\n        anchor2: Vector,\n        frame2: Rotation,\n    ): JointData {\n        let res = new JointData();\n        res.anchor1 = anchor1;\n        res.anchor2 = anchor2;\n        res.frame1 = frame1;\n        res.frame2 = frame2;\n        res.jointType = JointType.Fixed;\n        return res;\n    }\n\n    public static spring(\n        rest_length: number,\n        stiffness: number,\n        damping: number,\n        anchor1: Vector,\n        anchor2: Vector,\n    ): JointData {\n        let res = new JointData();\n        res.anchor1 = anchor1;\n        res.anchor2 = anchor2;\n        res.length = rest_length;\n        res.stiffness = stiffness;\n        res.damping = damping;\n        res.jointType = JointType.Spring;\n        return res;\n    }\n\n    public static rope(\n        length: number,\n        anchor1: Vector,\n        anchor2: Vector,\n    ): JointData {\n        let res = new JointData();\n        res.anchor1 = anchor1;\n        res.anchor2 = anchor2;\n        res.length = length;\n        res.jointType = JointType.Rope;\n        return res;\n    }\n\n\n    // #if DIM3\n    /**\n     * Create a new joint descriptor that builds generic joints.\n     *\n     * A generic joint allows customizing its degrees of freedom\n     * by supplying a mask of the joint axes that should remain locked.\n     *\n     * @param anchor1 - Point where the joint is attached on the first rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     * @param anchor2 - Point where the joint is attached on the second rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     * @param axis - The X axis of the joint, expressed in the local-space of the rigid-bodies it is attached to.\n     * @param axesMask - Mask representing the locked axes of the joint. You can use logical OR to select these from\n     *                   the JointAxesMask enum. For example, passing (JointAxesMask.AngX || JointAxesMask.AngY) will\n     *                   create a joint locked in the X and Y rotational axes.\n     */\n    public static generic(\n        anchor1: Vector,\n        anchor2: Vector,\n        axis: Vector,\n        axesMask: JointAxesMask,\n    ): JointData {\n        let res = new JointData();\n        res.anchor1 = anchor1;\n        res.anchor2 = anchor2;\n        res.axis = axis;\n        res.axesMask = axesMask;\n        res.jointType = JointType.Generic;\n        return res;\n    }\n\n    /**\n     * Create a new joint descriptor that builds spherical joints.\n     *\n     * A spherical joint allows three relative rotational degrees of freedom\n     * by preventing any relative translation between the anchors of the\n     * two attached rigid-bodies.\n     *\n     * @param anchor1 - Point where the joint is attached on the first rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     * @param anchor2 - Point where the joint is attached on the second rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     */\n    public static spherical(anchor1: Vector, anchor2: Vector): JointData {\n        let res = new JointData();\n        res.anchor1 = anchor1;\n        res.anchor2 = anchor2;\n        res.jointType = JointType.Spherical;\n        return res;\n    }\n\n    /**\n     * Creates a new joint descriptor that builds a Prismatic joint.\n     *\n     * A prismatic joint removes all the degrees of freedom between the\n     * affected bodies, except for the translation along one axis.\n     *\n     * @param anchor1 - Point where the joint is attached on the first rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     * @param anchor2 - Point where the joint is attached on the second rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     * @param axis - Axis of the joint, expressed in the local-space of the rigid-bodies it is attached to.\n     */\n    public static prismatic(\n        anchor1: Vector,\n        anchor2: Vector,\n        axis: Vector,\n    ): JointData {\n        let res = new JointData();\n        res.anchor1 = anchor1;\n        res.anchor2 = anchor2;\n        res.axis = axis;\n        res.jointType = JointType.Prismatic;\n        return res;\n    }\n\n    /**\n     * Create a new joint descriptor that builds Revolute joints.\n     *\n     * A revolute joint removes all degrees of freedom between the affected\n     * bodies except for the rotation along one axis.\n     *\n     * @param anchor1 - Point where the joint is attached on the first rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     * @param anchor2 - Point where the joint is attached on the second rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     * @param axis - Axis of the joint, expressed in the local-space of the rigid-bodies it is attached to.\n     */\n    public static revolute(\n        anchor1: Vector,\n        anchor2: Vector,\n        axis: Vector,\n    ): JointData {\n        let res = new JointData();\n        res.anchor1 = anchor1;\n        res.anchor2 = anchor2;\n        res.axis = axis;\n        res.jointType = JointType.Revolute;\n        return res;\n    }\n    // #endif\n\n    public intoRaw(): RawGenericJoint {\n        let rawA1 = VectorOps.intoRaw(this.anchor1);\n        let rawA2 = VectorOps.intoRaw(this.anchor2);\n        let rawAx;\n        let result;\n        let limitsEnabled = false;\n        let limitsMin = 0.0;\n        let limitsMax = 0.0;\n\n        switch (this.jointType) {\n            case JointType.Fixed:\n                let rawFra1 = RotationOps.intoRaw(this.frame1);\n                let rawFra2 = RotationOps.intoRaw(this.frame2);\n                result = RawGenericJoint.fixed(rawA1, rawFra1, rawA2, rawFra2);\n                rawFra1.free();\n                rawFra2.free();\n                break;\n            case JointType.Spring:\n                result = RawGenericJoint.spring(\n                    this.length,\n                    this.stiffness,\n                    this.damping,\n                    rawA1,\n                    rawA2,\n                );\n                break;\n            case JointType.Rope:\n                result = RawGenericJoint.rope(this.length, rawA1, rawA2);\n                break;\n            case JointType.Prismatic:\n                rawAx = VectorOps.intoRaw(this.axis);\n\n                if (!!this.limitsEnabled) {\n                    limitsEnabled = true;\n                    limitsMin = this.limits[0];\n                    limitsMax = this.limits[1];\n                }\n\n\n                // #if DIM3\n                result = RawGenericJoint.prismatic(\n                    rawA1,\n                    rawA2,\n                    rawAx,\n                    limitsEnabled,\n                    limitsMin,\n                    limitsMax,\n                );\n                // #endif\n\n                rawAx.free();\n                break;\n            // #if DIM3\n            case JointType.Generic:\n                rawAx = VectorOps.intoRaw(this.axis);\n                // implicit type cast: axesMask is a JointAxesMask bitflag enum,\n                // we're treating it as a u8 on the Rust side\n                let rawAxesMask = this.axesMask;\n                result = RawGenericJoint.generic(\n                    rawA1,\n                    rawA2,\n                    rawAx,\n                    rawAxesMask,\n                );\n                break;\n            case JointType.Spherical:\n                result = RawGenericJoint.spherical(rawA1, rawA2);\n                break;\n            case JointType.Revolute:\n                rawAx = VectorOps.intoRaw(this.axis);\n                result = RawGenericJoint.revolute(rawA1, rawA2, rawAx);\n                rawAx.free();\n                break;\n            // #endif\n        }\n\n        rawA1.free();\n        rawA2.free();\n\n        return result;\n    }\n}\n","/**\n * A rule applied to combine coefficients.\n *\n * Use this when configuring the `ColliderDesc` to specify\n * how friction and restitution coefficient should be combined\n * in a contact.\n */\nexport enum CoefficientCombineRule {\n    Average = 0,\n    Min = 1,\n    Multiply = 2,\n    Max = 3,\n}\n","\n// #if DIM3\nexport enum FeatureType {\n    Vertex,\n    Edge,\n    Face,\n    Unknown,\n}\n// #endif\n","import {Vector, VectorOps, Rotation, RotationOps} from \"../math\";\nimport {RawColliderSet, RawShape, RawShapeType} from \"../raw\";\nimport {ShapeContact} from \"./contact\";\nimport {PointProjection} from \"./point\";\nimport {Ray, RayIntersection} from \"./ray\";\nimport {ShapeTOI} from \"./toi\";\nimport {ColliderHandle} from \"./collider\";\n\nexport abstract class Shape {\n    public abstract intoRaw(): RawShape;\n\n    /**\n     * The concrete type of this shape.\n     */\n    public abstract get type(): ShapeType;\n\n    /**\n     * instant mode without cache\n     */\n    public static fromRaw(\n        rawSet: RawColliderSet,\n        handle: ColliderHandle,\n    ): Shape {\n        const rawType = rawSet.coShapeType(handle);\n\n        let extents: Vector;\n        let borderRadius: number;\n        let vs: Float32Array;\n        let indices: Uint32Array;\n        let halfHeight: number;\n        let radius: number;\n        let normal: Vector;\n\n        switch (rawType) {\n            case RawShapeType.Ball:\n                return new Ball(rawSet.coRadius(handle));\n            case RawShapeType.Cuboid:\n                extents = rawSet.coHalfExtents(handle);\n\n                // #if DIM3\n                return new Cuboid(extents.x, extents.y, extents.z);\n            // #endif\n\n            case RawShapeType.RoundCuboid:\n                extents = rawSet.coHalfExtents(handle);\n                borderRadius = rawSet.coRoundRadius(handle);\n\n\n                // #if DIM3\n                return new RoundCuboid(\n                    extents.x,\n                    extents.y,\n                    extents.z,\n                    borderRadius,\n                );\n            // #endif\n\n            case RawShapeType.Capsule:\n                halfHeight = rawSet.coHalfHeight(handle);\n                radius = rawSet.coRadius(handle);\n                return new Capsule(halfHeight, radius);\n            case RawShapeType.Segment:\n                vs = rawSet.coVertices(handle);\n\n\n                // #if DIM3\n                return new Segment(\n                    VectorOps.new(vs[0], vs[1], vs[2]),\n                    VectorOps.new(vs[3], vs[4], vs[5]),\n                );\n            // #endif\n\n            case RawShapeType.Polyline:\n                vs = rawSet.coVertices(handle);\n                indices = rawSet.coIndices(handle);\n                return new Polyline(vs, indices);\n            case RawShapeType.Triangle:\n                vs = rawSet.coVertices(handle);\n\n\n                // #if DIM3\n                return new Triangle(\n                    VectorOps.new(vs[0], vs[1], vs[2]),\n                    VectorOps.new(vs[3], vs[4], vs[5]),\n                    VectorOps.new(vs[6], vs[7], vs[8]),\n                );\n            // #endif\n\n            case RawShapeType.RoundTriangle:\n                vs = rawSet.coVertices(handle);\n                borderRadius = rawSet.coRoundRadius(handle);\n\n\n                // #if DIM3\n                return new RoundTriangle(\n                    VectorOps.new(vs[0], vs[1], vs[2]),\n                    VectorOps.new(vs[3], vs[4], vs[5]),\n                    VectorOps.new(vs[6], vs[7], vs[8]),\n                    borderRadius,\n                );\n            // #endif\n\n            case RawShapeType.HalfSpace:\n                normal = VectorOps.fromRaw(rawSet.coHalfspaceNormal(handle));\n                return new HalfSpace(normal);\n\n            case RawShapeType.TriMesh:\n                vs = rawSet.coVertices(handle);\n                indices = rawSet.coIndices(handle);\n                return new TriMesh(vs, indices);\n\n            case RawShapeType.HeightField:\n                const scale = rawSet.coHeightfieldScale(handle);\n                const heights = rawSet.coHeightfieldHeights(handle);\n\n\n                // #if DIM3\n                const nrows = rawSet.coHeightfieldNRows(handle);\n                const ncols = rawSet.coHeightfieldNCols(handle);\n                return new Heightfield(nrows, ncols, heights, scale);\n            // #endif\n\n\n            // #if DIM3\n            case RawShapeType.ConvexPolyhedron:\n                vs = rawSet.coVertices(handle);\n                indices = rawSet.coIndices(handle);\n                return new ConvexPolyhedron(vs, indices);\n            case RawShapeType.RoundConvexPolyhedron:\n                vs = rawSet.coVertices(handle);\n                indices = rawSet.coIndices(handle);\n                borderRadius = rawSet.coRoundRadius(handle);\n                return new RoundConvexPolyhedron(vs, indices, borderRadius);\n            case RawShapeType.Cylinder:\n                halfHeight = rawSet.coHalfHeight(handle);\n                radius = rawSet.coRadius(handle);\n                return new Cylinder(halfHeight, radius);\n            case RawShapeType.RoundCylinder:\n                halfHeight = rawSet.coHalfHeight(handle);\n                radius = rawSet.coRadius(handle);\n                borderRadius = rawSet.coRoundRadius(handle);\n                return new RoundCylinder(halfHeight, radius, borderRadius);\n            case RawShapeType.Cone:\n                halfHeight = rawSet.coHalfHeight(handle);\n                radius = rawSet.coRadius(handle);\n                return new Cone(halfHeight, radius);\n            case RawShapeType.RoundCone:\n                halfHeight = rawSet.coHalfHeight(handle);\n                radius = rawSet.coRadius(handle);\n                borderRadius = rawSet.coRoundRadius(handle);\n                return new RoundCone(halfHeight, radius, borderRadius);\n            // #endif\n\n            default:\n                throw new Error(\"unknown shape type: \" + rawType);\n        }\n    }\n\n    /**\n     * Computes the time of impact between two moving shapes.\n     * @param shapePos1 - The initial position of this sahpe.\n     * @param shapeRot1 - The rotation of this shape.\n     * @param shapeVel1 - The velocity of this shape.\n     * @param shape2 - The second moving shape.\n     * @param shapePos2 - The initial position of the second shape.\n     * @param shapeRot2 - The rotation of the second shape.\n     * @param shapeVel2 - The velocity of the second shape.\n     * @param maxToi - The maximum time when the impact can happen.\n     * @param stopAtPenetration - If set to `false`, the linear shape-cast won’t immediately stop if\n     *   the shape is penetrating another shape at its starting point **and** its trajectory is such\n     *   that it’s on a path to exist that penetration state.\n     * @returns If the two moving shapes collider at some point along their trajectories, this returns the\n     *  time at which the two shape collider as well as the contact information during the impact. Returns\n     *  `null`if the two shapes never collide along their paths.\n     */\n    public castShape(\n        shapePos1: Vector,\n        shapeRot1: Rotation,\n        shapeVel1: Vector,\n        shape2: Shape,\n        shapePos2: Vector,\n        shapeRot2: Rotation,\n        shapeVel2: Vector,\n        maxToi: number,\n        stopAtPenetration: boolean,\n    ): ShapeTOI | null {\n        let rawPos1 = VectorOps.intoRaw(shapePos1);\n        let rawRot1 = RotationOps.intoRaw(shapeRot1);\n        let rawVel1 = VectorOps.intoRaw(shapeVel1);\n        let rawPos2 = VectorOps.intoRaw(shapePos2);\n        let rawRot2 = RotationOps.intoRaw(shapeRot2);\n        let rawVel2 = VectorOps.intoRaw(shapeVel2);\n\n        let rawShape1 = this.intoRaw();\n        let rawShape2 = shape2.intoRaw();\n\n        let result = ShapeTOI.fromRaw(\n            null,\n            rawShape1.castShape(\n                rawPos1,\n                rawRot1,\n                rawVel1,\n                rawShape2,\n                rawPos2,\n                rawRot2,\n                rawVel2,\n                maxToi,\n                stopAtPenetration,\n            ),\n        );\n\n        rawPos1.free();\n        rawRot1.free();\n        rawVel1.free();\n        rawPos2.free();\n        rawRot2.free();\n        rawVel2.free();\n\n        rawShape1.free();\n        rawShape2.free();\n\n        return result;\n    }\n\n    /**\n     * Tests if this shape intersects another shape.\n     *\n     * @param shapePos1 - The position of this shape.\n     * @param shapeRot1 - The rotation of this shape.\n     * @param shape2  - The second shape to test.\n     * @param shapePos2 - The position of the second shape.\n     * @param shapeRot2 - The rotation of the second shape.\n     * @returns `true` if the two shapes intersect, `false` if they don’t.\n     */\n    public intersectsShape(\n        shapePos1: Vector,\n        shapeRot1: Rotation,\n        shape2: Shape,\n        shapePos2: Vector,\n        shapeRot2: Rotation,\n    ): boolean {\n        let rawPos1 = VectorOps.intoRaw(shapePos1);\n        let rawRot1 = RotationOps.intoRaw(shapeRot1);\n        let rawPos2 = VectorOps.intoRaw(shapePos2);\n        let rawRot2 = RotationOps.intoRaw(shapeRot2);\n\n        let rawShape1 = this.intoRaw();\n        let rawShape2 = shape2.intoRaw();\n\n        let result = rawShape1.intersectsShape(\n            rawPos1,\n            rawRot1,\n            rawShape2,\n            rawPos2,\n            rawRot2,\n        );\n\n        rawPos1.free();\n        rawRot1.free();\n        rawPos2.free();\n        rawRot2.free();\n\n        rawShape1.free();\n        rawShape2.free();\n\n        return result;\n    }\n\n    /**\n     * Computes one pair of contact points between two shapes.\n     *\n     * @param shapePos1 - The initial position of this sahpe.\n     * @param shapeRot1 - The rotation of this shape.\n     * @param shape2 - The second shape.\n     * @param shapePos2 - The initial position of the second shape.\n     * @param shapeRot2 - The rotation of the second shape.\n     * @param prediction - The prediction value, if the shapes are separated by a distance greater than this value, test will fail.\n     * @returns `null` if the shapes are separated by a distance greater than prediction, otherwise contact details. The result is given in world-space.\n     */\n    contactShape(\n        shapePos1: Vector,\n        shapeRot1: Rotation,\n        shape2: Shape,\n        shapePos2: Vector,\n        shapeRot2: Rotation,\n        prediction: number,\n    ): ShapeContact | null {\n        let rawPos1 = VectorOps.intoRaw(shapePos1);\n        let rawRot1 = RotationOps.intoRaw(shapeRot1);\n        let rawPos2 = VectorOps.intoRaw(shapePos2);\n        let rawRot2 = RotationOps.intoRaw(shapeRot2);\n\n        let rawShape1 = this.intoRaw();\n        let rawShape2 = shape2.intoRaw();\n\n        let result = ShapeContact.fromRaw(\n            rawShape1.contactShape(\n                rawPos1,\n                rawRot1,\n                rawShape2,\n                rawPos2,\n                rawRot2,\n                prediction,\n            ),\n        );\n\n        rawPos1.free();\n        rawRot1.free();\n        rawPos2.free();\n        rawRot2.free();\n\n        rawShape1.free();\n        rawShape2.free();\n\n        return result;\n    }\n\n    containsPoint(\n        shapePos: Vector,\n        shapeRot: Rotation,\n        point: Vector,\n    ): boolean {\n        let rawPos = VectorOps.intoRaw(shapePos);\n        let rawRot = RotationOps.intoRaw(shapeRot);\n        let rawPoint = VectorOps.intoRaw(point);\n        let rawShape = this.intoRaw();\n\n        let result = rawShape.containsPoint(rawPos, rawRot, rawPoint);\n\n        rawPos.free();\n        rawRot.free();\n        rawPoint.free();\n        rawShape.free();\n\n        return result;\n    }\n\n    projectPoint(\n        shapePos: Vector,\n        shapeRot: Rotation,\n        point: Vector,\n        solid: boolean,\n    ): PointProjection {\n        let rawPos = VectorOps.intoRaw(shapePos);\n        let rawRot = RotationOps.intoRaw(shapeRot);\n        let rawPoint = VectorOps.intoRaw(point);\n        let rawShape = this.intoRaw();\n\n        let result = PointProjection.fromRaw(\n            rawShape.projectPoint(rawPos, rawRot, rawPoint, solid),\n        );\n\n        rawPos.free();\n        rawRot.free();\n        rawPoint.free();\n        rawShape.free();\n\n        return result;\n    }\n\n    intersectsRay(\n        ray: Ray,\n        shapePos: Vector,\n        shapeRot: Rotation,\n        maxToi: number,\n    ): boolean {\n        let rawPos = VectorOps.intoRaw(shapePos);\n        let rawRot = RotationOps.intoRaw(shapeRot);\n        let rawRayOrig = VectorOps.intoRaw(ray.origin);\n        let rawRayDir = VectorOps.intoRaw(ray.dir);\n        let rawShape = this.intoRaw();\n\n        let result = rawShape.intersectsRay(\n            rawPos,\n            rawRot,\n            rawRayOrig,\n            rawRayDir,\n            maxToi,\n        );\n\n        rawPos.free();\n        rawRot.free();\n        rawRayOrig.free();\n        rawRayDir.free();\n        rawShape.free();\n\n        return result;\n    }\n\n    castRay(\n        ray: Ray,\n        shapePos: Vector,\n        shapeRot: Rotation,\n        maxToi: number,\n        solid: boolean,\n    ): number {\n        let rawPos = VectorOps.intoRaw(shapePos);\n        let rawRot = RotationOps.intoRaw(shapeRot);\n        let rawRayOrig = VectorOps.intoRaw(ray.origin);\n        let rawRayDir = VectorOps.intoRaw(ray.dir);\n        let rawShape = this.intoRaw();\n\n        let result = rawShape.castRay(\n            rawPos,\n            rawRot,\n            rawRayOrig,\n            rawRayDir,\n            maxToi,\n            solid,\n        );\n\n        rawPos.free();\n        rawRot.free();\n        rawRayOrig.free();\n        rawRayDir.free();\n        rawShape.free();\n\n        return result;\n    }\n\n    castRayAndGetNormal(\n        ray: Ray,\n        shapePos: Vector,\n        shapeRot: Rotation,\n        maxToi: number,\n        solid: boolean,\n    ): RayIntersection {\n        let rawPos = VectorOps.intoRaw(shapePos);\n        let rawRot = RotationOps.intoRaw(shapeRot);\n        let rawRayOrig = VectorOps.intoRaw(ray.origin);\n        let rawRayDir = VectorOps.intoRaw(ray.dir);\n        let rawShape = this.intoRaw();\n\n        let result = RayIntersection.fromRaw(\n            rawShape.castRayAndGetNormal(\n                rawPos,\n                rawRot,\n                rawRayOrig,\n                rawRayDir,\n                maxToi,\n                solid,\n            ),\n        );\n\n        rawPos.free();\n        rawRot.free();\n        rawRayOrig.free();\n        rawRayDir.free();\n        rawShape.free();\n\n        return result;\n    }\n}\n\n\n// #if DIM3\n/**\n * An enumeration representing the type of a shape.\n */\nexport enum ShapeType {\n    Ball = 0,\n    Cuboid = 1,\n    Capsule = 2,\n    Segment = 3,\n    Polyline = 4,\n    Triangle = 5,\n    TriMesh = 6,\n    HeightField = 7,\n    // Compound = 8,\n    ConvexPolyhedron = 9,\n    Cylinder = 10,\n    Cone = 11,\n    RoundCuboid = 12,\n    RoundTriangle = 13,\n    RoundCylinder = 14,\n    RoundCone = 15,\n    RoundConvexPolyhedron = 16,\n    HalfSpace = 17,\n}\n\n// #endif\n\n/**\n * A shape that is a sphere in 3D and a circle in 2D.\n */\nexport class Ball extends Shape {\n    readonly type = ShapeType.Ball;\n\n    /**\n     * The balls radius.\n     */\n    radius: number;\n\n    /**\n     * Creates a new ball with the given radius.\n     * @param radius - The balls radius.\n     */\n    constructor(radius: number) {\n        super();\n        this.radius = radius;\n    }\n\n    public intoRaw(): RawShape {\n        return RawShape.ball(this.radius);\n    }\n}\n\nexport class HalfSpace extends Shape {\n    readonly type = ShapeType.HalfSpace;\n\n    /**\n     * The outward normal of the half-space.\n     */\n    normal: Vector;\n\n    /**\n     * Creates a new halfspace delimited by an infinite plane.\n     *\n     * @param normal - The outward normal of the plane.\n     */\n    constructor(normal: Vector) {\n        super();\n        this.normal = normal;\n    }\n\n    public intoRaw(): RawShape {\n        let n = VectorOps.intoRaw(this.normal);\n        let result = RawShape.halfspace(n);\n        n.free();\n        return result;\n    }\n}\n\n/**\n * A shape that is a box in 3D and a rectangle in 2D.\n */\nexport class Cuboid extends Shape {\n    readonly type = ShapeType.Cuboid;\n\n    /**\n     * The half extent of the cuboid along each coordinate axis.\n     */\n    halfExtents: Vector;\n\n\n    // #if DIM3\n    /**\n     * Creates a new 3D cuboid.\n     * @param hx - The half width of the cuboid.\n     * @param hy - The half height of the cuboid.\n     * @param hz - The half depth of the cuboid.\n     */\n    constructor(hx: number, hy: number, hz: number) {\n        super();\n        this.halfExtents = VectorOps.new(hx, hy, hz);\n    }\n\n    // #endif\n\n    public intoRaw(): RawShape {\n\n        // #if DIM3\n        return RawShape.cuboid(\n            this.halfExtents.x,\n            this.halfExtents.y,\n            this.halfExtents.z,\n        );\n        // #endif\n    }\n}\n\n/**\n * A shape that is a box in 3D and a rectangle in 2D, with round corners.\n */\nexport class RoundCuboid extends Shape {\n    readonly type = ShapeType.RoundCuboid;\n\n    /**\n     * The half extent of the cuboid along each coordinate axis.\n     */\n    halfExtents: Vector;\n\n    /**\n     * The radius of the cuboid's round border.\n     */\n    borderRadius: number;\n\n\n    // #if DIM3\n    /**\n     * Creates a new 3D cuboid.\n     * @param hx - The half width of the cuboid.\n     * @param hy - The half height of the cuboid.\n     * @param hz - The half depth of the cuboid.\n     * @param borderRadius - The radius of the borders of this cuboid. This will\n     *   effectively increase the half-extents of the cuboid by this radius.\n     */\n    constructor(hx: number, hy: number, hz: number, borderRadius: number) {\n        super();\n        this.halfExtents = VectorOps.new(hx, hy, hz);\n        this.borderRadius = borderRadius;\n    }\n\n    // #endif\n\n    public intoRaw(): RawShape {\n\n        // #if DIM3\n        return RawShape.roundCuboid(\n            this.halfExtents.x,\n            this.halfExtents.y,\n            this.halfExtents.z,\n            this.borderRadius,\n        );\n        // #endif\n    }\n}\n\n/**\n * A shape that is a capsule.\n */\nexport class Capsule extends Shape {\n    readonly type = ShapeType.Capsule;\n\n    /**\n     * The radius of the capsule's basis.\n     */\n    radius: number;\n\n    /**\n     * The capsule's half height, along the `y` axis.\n     */\n    halfHeight: number;\n\n    /**\n     * Creates a new capsule with the given radius and half-height.\n     * @param halfHeight - The balls half-height along the `y` axis.\n     * @param radius - The balls radius.\n     */\n    constructor(halfHeight: number, radius: number) {\n        super();\n        this.halfHeight = halfHeight;\n        this.radius = radius;\n    }\n\n    public intoRaw(): RawShape {\n        return RawShape.capsule(this.halfHeight, this.radius);\n    }\n}\n\n/**\n * A shape that is a segment.\n */\nexport class Segment extends Shape {\n    readonly type = ShapeType.Segment;\n\n    /**\n     * The first point of the segment.\n     */\n    a: Vector;\n\n    /**\n     * The second point of the segment.\n     */\n    b: Vector;\n\n    /**\n     * Creates a new segment shape.\n     * @param a - The first point of the segment.\n     * @param b - The second point of the segment.\n     */\n    constructor(a: Vector, b: Vector) {\n        super();\n        this.a = a;\n        this.b = b;\n    }\n\n    public intoRaw(): RawShape {\n        let ra = VectorOps.intoRaw(this.a);\n        let rb = VectorOps.intoRaw(this.b);\n        let result = RawShape.segment(ra, rb);\n        ra.free();\n        rb.free();\n        return result;\n    }\n}\n\n/**\n * A shape that is a segment.\n */\nexport class Triangle extends Shape {\n    readonly type = ShapeType.Triangle;\n\n    /**\n     * The first point of the triangle.\n     */\n    a: Vector;\n\n    /**\n     * The second point of the triangle.\n     */\n    b: Vector;\n\n    /**\n     * The second point of the triangle.\n     */\n    c: Vector;\n\n    /**\n     * Creates a new triangle shape.\n     *\n     * @param a - The first point of the triangle.\n     * @param b - The second point of the triangle.\n     * @param c - The third point of the triangle.\n     */\n    constructor(a: Vector, b: Vector, c: Vector) {\n        super();\n        this.a = a;\n        this.b = b;\n        this.c = c;\n    }\n\n    public intoRaw(): RawShape {\n        let ra = VectorOps.intoRaw(this.a);\n        let rb = VectorOps.intoRaw(this.b);\n        let rc = VectorOps.intoRaw(this.c);\n        let result = RawShape.triangle(ra, rb, rc);\n        ra.free();\n        rb.free();\n        rc.free();\n        return result;\n    }\n}\n\n/**\n * A shape that is a triangle with round borders and a non-zero thickness.\n */\nexport class RoundTriangle extends Shape {\n    readonly type = ShapeType.RoundTriangle;\n\n    /**\n     * The first point of the triangle.\n     */\n    a: Vector;\n\n    /**\n     * The second point of the triangle.\n     */\n    b: Vector;\n\n    /**\n     * The second point of the triangle.\n     */\n    c: Vector;\n\n    /**\n     * The radius of the triangles's rounded edges and vertices.\n     * In 3D, this is also equal to half the thickness of the round triangle.\n     */\n    borderRadius: number;\n\n    /**\n     * Creates a new triangle shape with round corners.\n     *\n     * @param a - The first point of the triangle.\n     * @param b - The second point of the triangle.\n     * @param c - The third point of the triangle.\n     * @param borderRadius - The radius of the borders of this triangle. In 3D,\n     *   this is also equal to half the thickness of the triangle.\n     */\n    constructor(a: Vector, b: Vector, c: Vector, borderRadius: number) {\n        super();\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.borderRadius = borderRadius;\n    }\n\n    public intoRaw(): RawShape {\n        let ra = VectorOps.intoRaw(this.a);\n        let rb = VectorOps.intoRaw(this.b);\n        let rc = VectorOps.intoRaw(this.c);\n        let result = RawShape.roundTriangle(ra, rb, rc, this.borderRadius);\n        ra.free();\n        rb.free();\n        rc.free();\n        return result;\n    }\n}\n\n/**\n * A shape that is a triangle mesh.\n */\nexport class Polyline extends Shape {\n    readonly type = ShapeType.Polyline;\n\n    /**\n     * The vertices of the polyline.\n     */\n    vertices: Float32Array;\n\n    /**\n     * The indices of the segments.\n     */\n    indices: Uint32Array;\n\n    /**\n     * Creates a new polyline shape.\n     *\n     * @param vertices - The coordinates of the polyline's vertices.\n     * @param indices - The indices of the polyline's segments. If this is `null` or not provided, then\n     *    the vertices are assumed to form a line strip.\n     */\n    constructor(vertices: Float32Array, indices?: Uint32Array) {\n        super();\n        this.vertices = vertices;\n        this.indices = indices ?? new Uint32Array(0);\n    }\n\n    public intoRaw(): RawShape {\n        return RawShape.polyline(this.vertices, this.indices);\n    }\n}\n\n/**\n * A shape that is a triangle mesh.\n */\nexport class TriMesh extends Shape {\n    readonly type = ShapeType.TriMesh;\n\n    /**\n     * The vertices of the triangle mesh.\n     */\n    vertices: Float32Array;\n\n    /**\n     * The indices of the triangles.\n     */\n    indices: Uint32Array;\n\n    /**\n     * Creates a new triangle mesh shape.\n     *\n     * @param vertices - The coordinates of the triangle mesh's vertices.\n     * @param indices - The indices of the triangle mesh's triangles.\n     */\n    constructor(vertices: Float32Array, indices: Uint32Array) {\n        super();\n        this.vertices = vertices;\n        this.indices = indices;\n    }\n\n    public intoRaw(): RawShape {\n        return RawShape.trimesh(this.vertices, this.indices);\n    }\n}\n\n\n// #if DIM3\n/**\n * A shape that is a convex polygon.\n */\nexport class ConvexPolyhedron extends Shape {\n    readonly type = ShapeType.ConvexPolyhedron;\n\n    /**\n     * The vertices of the convex polygon.\n     */\n    vertices: Float32Array;\n\n    /**\n     * The indices of the convex polygon.\n     */\n    indices?: Uint32Array | null;\n\n    /**\n     * Creates a new convex polygon shape.\n     *\n     * @param vertices - The coordinates of the convex polygon's vertices.\n     * @param indices - The index buffer of this convex mesh. If this is `null`\n     *   or `undefined`, the convex-hull of the input vertices will be computed\n     *   automatically. Otherwise, it will be assumed that the mesh you provide\n     *   is already convex.\n     */\n    constructor(vertices: Float32Array, indices?: Uint32Array | null) {\n        super();\n        this.vertices = vertices;\n        this.indices = indices;\n    }\n\n    public intoRaw(): RawShape {\n        if (!!this.indices) {\n            return RawShape.convexMesh(this.vertices, this.indices);\n        } else {\n            return RawShape.convexHull(this.vertices);\n        }\n    }\n}\n\n/**\n * A shape that is a convex polygon.\n */\nexport class RoundConvexPolyhedron extends Shape {\n    readonly type = ShapeType.RoundConvexPolyhedron;\n\n    /**\n     * The vertices of the convex polygon.\n     */\n    vertices: Float32Array;\n\n    /**\n     * The indices of the convex polygon.\n     */\n    indices?: Uint32Array;\n\n    /**\n     * The radius of the convex polyhedron's rounded edges and vertices.\n     */\n    borderRadius: number;\n\n    /**\n     * Creates a new convex polygon shape.\n     *\n     * @param vertices - The coordinates of the convex polygon's vertices.\n     * @param indices - The index buffer of this convex mesh. If this is `null`\n     *   or `undefined`, the convex-hull of the input vertices will be computed\n     *   automatically. Otherwise, it will be assumed that the mesh you provide\n     *   is already convex.\n     * @param borderRadius - The radius of the borders of this convex polyhedron.\n     */\n    constructor(\n        vertices: Float32Array,\n        indices: Uint32Array | null | undefined,\n        borderRadius: number,\n    ) {\n        super();\n        this.vertices = vertices;\n        this.indices = indices;\n        this.borderRadius = borderRadius;\n    }\n\n    public intoRaw(): RawShape {\n        if (!!this.indices) {\n            return RawShape.roundConvexMesh(\n                this.vertices,\n                this.indices,\n                this.borderRadius,\n            );\n        } else {\n            return RawShape.roundConvexHull(this.vertices, this.borderRadius);\n        }\n    }\n}\n\n/**\n * A shape that is a heightfield.\n */\nexport class Heightfield extends Shape {\n    readonly type = ShapeType.HeightField;\n\n    /**\n     * The number of rows in the heights matrix.\n     */\n    nrows: number;\n\n    /**\n     * The number of columns in the heights matrix.\n     */\n    ncols: number;\n\n    /**\n     * The heights of the heightfield along its local `y` axis,\n     * provided as a matrix stored in column-major order.\n     */\n    heights: Float32Array;\n\n    /**\n     * The dimensions of the heightfield's local `x,z` plane.\n     */\n    scale: Vector;\n\n    /**\n     * Creates a new heightfield shape.\n     *\n     * @param nrows − The number of rows in the heights matrix.\n     * @param ncols - The number of columns in the heights matrix.\n     * @param heights - The heights of the heightfield along its local `y` axis,\n     *                  provided as a matrix stored in column-major order.\n     * @param scale - The dimensions of the heightfield's local `x,z` plane.\n     */\n    constructor(\n        nrows: number,\n        ncols: number,\n        heights: Float32Array,\n        scale: Vector,\n    ) {\n        super();\n        this.nrows = nrows;\n        this.ncols = ncols;\n        this.heights = heights;\n        this.scale = scale;\n    }\n\n    public intoRaw(): RawShape {\n        let rawScale = VectorOps.intoRaw(this.scale);\n        let rawShape = RawShape.heightfield(\n            this.nrows,\n            this.ncols,\n            this.heights,\n            rawScale,\n        );\n        rawScale.free();\n        return rawShape;\n    }\n}\n\n/**\n * A shape that is a 3D cylinder.\n */\nexport class Cylinder extends Shape {\n    readonly type = ShapeType.Cylinder;\n\n    /**\n     * The radius of the cylinder's basis.\n     */\n    radius: number;\n\n    /**\n     * The cylinder's half height, along the `y` axis.\n     */\n    halfHeight: number;\n\n    /**\n     * Creates a new cylinder with the given radius and half-height.\n     * @param halfHeight - The balls half-height along the `y` axis.\n     * @param radius - The balls radius.\n     */\n    constructor(halfHeight: number, radius: number) {\n        super();\n        this.halfHeight = halfHeight;\n        this.radius = radius;\n    }\n\n    public intoRaw(): RawShape {\n        return RawShape.cylinder(this.halfHeight, this.radius);\n    }\n}\n\n/**\n * A shape that is a 3D cylinder with round corners.\n */\nexport class RoundCylinder extends Shape {\n    readonly type = ShapeType.RoundCylinder;\n\n    /**\n     * The radius of the cylinder's basis.\n     */\n    radius: number;\n\n    /**\n     * The cylinder's half height, along the `y` axis.\n     */\n    halfHeight: number;\n\n    /**\n     * The radius of the cylinder's rounded edges and vertices.\n     */\n    borderRadius: number;\n\n    /**\n     * Creates a new cylinder with the given radius and half-height.\n     * @param halfHeight - The balls half-height along the `y` axis.\n     * @param radius - The balls radius.\n     * @param borderRadius - The radius of the borders of this cylinder.\n     */\n    constructor(halfHeight: number, radius: number, borderRadius: number) {\n        super();\n        this.borderRadius = borderRadius;\n        this.halfHeight = halfHeight;\n        this.radius = radius;\n    }\n\n    public intoRaw(): RawShape {\n        return RawShape.roundCylinder(\n            this.halfHeight,\n            this.radius,\n            this.borderRadius,\n        );\n    }\n}\n\n/**\n * A shape that is a 3D cone.\n */\nexport class Cone extends Shape {\n    readonly type = ShapeType.Cone;\n\n    /**\n     * The radius of the cone's basis.\n     */\n    radius: number;\n\n    /**\n     * The cone's half height, along the `y` axis.\n     */\n    halfHeight: number;\n\n    /**\n     * Creates a new cone with the given radius and half-height.\n     * @param halfHeight - The balls half-height along the `y` axis.\n     * @param radius - The balls radius.\n     */\n    constructor(halfHeight: number, radius: number) {\n        super();\n        this.halfHeight = halfHeight;\n        this.radius = radius;\n    }\n\n    public intoRaw(): RawShape {\n        return RawShape.cone(this.halfHeight, this.radius);\n    }\n}\n\n/**\n * A shape that is a 3D cone with round corners.\n */\nexport class RoundCone extends Shape {\n    readonly type = ShapeType.RoundCone;\n\n    /**\n     * The radius of the cone's basis.\n     */\n    radius: number;\n\n    /**\n     * The cone's half height, along the `y` axis.\n     */\n    halfHeight: number;\n\n    /**\n     * The radius of the cylinder's rounded edges and vertices.\n     */\n    borderRadius: number;\n\n    /**\n     * Creates a new cone with the given radius and half-height.\n     * @param halfHeight - The balls half-height along the `y` axis.\n     * @param radius - The balls radius.\n     * @param borderRadius - The radius of the borders of this cone.\n     */\n    constructor(halfHeight: number, radius: number, borderRadius: number) {\n        super();\n        this.halfHeight = halfHeight;\n        this.radius = radius;\n        this.borderRadius = borderRadius;\n    }\n\n    public intoRaw(): RawShape {\n        return RawShape.roundCone(\n            this.halfHeight,\n            this.radius,\n            this.borderRadius,\n        );\n    }\n}\n\n// #endif\n","import {RawQueryPipeline, RawRayColliderIntersection} from \"../raw\";\nimport {\n    ColliderHandle,\n    ColliderSet,\n    InteractionGroups,\n    PointColliderProjection,\n    Ray,\n    RayColliderIntersection,\n    RayColliderToi,\n    Shape,\n    ShapeColliderTOI,\n} from \"../geometry\";\nimport {IslandManager, RigidBodyHandle, RigidBodySet} from \"../dynamics\";\nimport {Rotation, RotationOps, Vector, VectorOps} from \"../math\";\n\n// NOTE: must match the bits in the QueryFilterFlags on the Rust side.\n/**\n * Flags for excluding whole sets of colliders from a scene query.\n */\nexport enum QueryFilterFlags {\n    /**\n     * Exclude from the query any collider attached to a fixed rigid-body and colliders with no rigid-body attached.\n     */\n    EXCLUDE_FIXED = 0b0000_0001,\n    /**\n     * Exclude from the query any collider attached to a dynamic rigid-body.\n     */\n    EXCLUDE_KINEMATIC = 0b0000_0010,\n    /**\n     * Exclude from the query any collider attached to a kinematic rigid-body.\n     */\n    EXCLUDE_DYNAMIC = 0b0000_0100,\n    /**\n     * Exclude from the query any collider that is a sensor.\n     */\n    EXCLUDE_SENSORS = 0b0000_1000,\n    /**\n     * Exclude from the query any collider that is not a sensor.\n     */\n    EXCLUDE_SOLIDS = 0b0001_0000,\n    /**\n     * Excludes all colliders not attached to a dynamic rigid-body.\n     */\n    ONLY_DYNAMIC = QueryFilterFlags.EXCLUDE_FIXED |\n        QueryFilterFlags.EXCLUDE_KINEMATIC,\n    /**\n     * Excludes all colliders not attached to a kinematic rigid-body.\n     */\n    ONLY_KINEMATIC = QueryFilterFlags.EXCLUDE_DYNAMIC |\n        QueryFilterFlags.EXCLUDE_FIXED,\n    /**\n     * Exclude all colliders attached to a non-fixed rigid-body\n     * (this will not exclude colliders not attached to any rigid-body).\n     */\n    ONLY_FIXED = QueryFilterFlags.EXCLUDE_DYNAMIC |\n        QueryFilterFlags.EXCLUDE_KINEMATIC,\n}\n\n/**\n * A pipeline for performing queries on all the colliders of a scene.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `queryPipeline.free()`\n * once you are done using it (and all the rigid-bodies it created).\n */\nexport class QueryPipeline {\n    raw: RawQueryPipeline;\n\n    /**\n     * Release the WASM memory occupied by this query pipeline.\n     */\n    free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n        this.raw = undefined;\n    }\n\n    constructor(raw?: RawQueryPipeline) {\n        this.raw = raw || new RawQueryPipeline();\n    }\n\n    /**\n     * Updates the acceleration structure of the query pipeline.\n     * @param bodies - The set of rigid-bodies taking part in this pipeline.\n     * @param colliders - The set of colliders taking part in this pipeline.\n     */\n    public update(bodies: RigidBodySet, colliders: ColliderSet) {\n        this.raw.update(bodies.raw, colliders.raw);\n    }\n\n    /**\n     * Find the closest intersection between a ray and a set of collider.\n     *\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n     *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n     *   whereas `false` implies that all shapes are hollow for this ray-cast.\n     * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n     * @param filter - The callback to filter out which collider will be hit.\n     */\n    public castRay(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        ray: Ray,\n        maxToi: number,\n        solid: boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ): RayColliderToi | null {\n        let rawOrig = VectorOps.intoRaw(ray.origin);\n        let rawDir = VectorOps.intoRaw(ray.dir);\n        let result = RayColliderToi.fromRaw(\n            colliders,\n            this.raw.castRay(\n                bodies.raw,\n                colliders.raw,\n                rawOrig,\n                rawDir,\n                maxToi,\n                solid,\n                filterFlags,\n                filterGroups,\n                filterExcludeCollider,\n                filterExcludeRigidBody,\n                filterPredicate,\n            ),\n        );\n\n        rawOrig.free();\n        rawDir.free();\n\n        return result;\n    }\n\n    /**\n     * Find the closest intersection between a ray and a set of collider.\n     *\n     * This also computes the normal at the hit point.\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n     *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n     *   whereas `false` implies that all shapes are hollow for this ray-cast.\n     * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n     */\n    public castRayAndGetNormal(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        ray: Ray,\n        maxToi: number,\n        solid: boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ): RayColliderIntersection | null {\n        let rawOrig = VectorOps.intoRaw(ray.origin);\n        let rawDir = VectorOps.intoRaw(ray.dir);\n        let result = RayColliderIntersection.fromRaw(\n            colliders,\n            this.raw.castRayAndGetNormal(\n                bodies.raw,\n                colliders.raw,\n                rawOrig,\n                rawDir,\n                maxToi,\n                solid,\n                filterFlags,\n                filterGroups,\n                filterExcludeCollider,\n                filterExcludeRigidBody,\n                filterPredicate,\n            ),\n        );\n\n        rawOrig.free();\n        rawDir.free();\n\n        return result;\n    }\n\n    /**\n     * Cast a ray and collects all the intersections between a ray and the scene.\n     *\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n     *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n     *   whereas `false` implies that all shapes are hollow for this ray-cast.\n     * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n     * @param callback - The callback called once per hit (in no particular order) between a ray and a collider.\n     *   If this callback returns `false`, then the cast will stop and no further hits will be detected/reported.\n     */\n    public intersectionsWithRay(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        ray: Ray,\n        maxToi: number,\n        solid: boolean,\n        callback: (intersect: RayColliderIntersection) => boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ) {\n        let rawOrig = VectorOps.intoRaw(ray.origin);\n        let rawDir = VectorOps.intoRaw(ray.dir);\n        let rawCallback = (rawInter: RawRayColliderIntersection) => {\n            return callback(\n                RayColliderIntersection.fromRaw(colliders, rawInter),\n            );\n        };\n\n        this.raw.intersectionsWithRay(\n            bodies.raw,\n            colliders.raw,\n            rawOrig,\n            rawDir,\n            maxToi,\n            solid,\n            rawCallback,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider,\n            filterExcludeRigidBody,\n            filterPredicate,\n        );\n\n        rawOrig.free();\n        rawDir.free();\n    }\n\n    /**\n     * Gets the handle of up to one collider intersecting the given shape.\n     *\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param shapePos - The position of the shape used for the intersection test.\n     * @param shapeRot - The orientation of the shape used for the intersection test.\n     * @param shape - The shape used for the intersection test.\n     * @param groups - The bit groups and filter associated to the ray, in order to only\n     *   hit the colliders with collision groups compatible with the ray's group.\n     */\n    public intersectionWithShape(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        shapePos: Vector,\n        shapeRot: Rotation,\n        shape: Shape,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ): ColliderHandle | null {\n        let rawPos = VectorOps.intoRaw(shapePos);\n        let rawRot = RotationOps.intoRaw(shapeRot);\n        let rawShape = shape.intoRaw();\n        let result = this.raw.intersectionWithShape(\n            bodies.raw,\n            colliders.raw,\n            rawPos,\n            rawRot,\n            rawShape,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider,\n            filterExcludeRigidBody,\n            filterPredicate,\n        );\n\n        rawPos.free();\n        rawRot.free();\n        rawShape.free();\n\n        return result;\n    }\n\n    /**\n     * Find the projection of a point on the closest collider.\n     *\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param point - The point to project.\n     * @param solid - If this is set to `true` then the collider shapes are considered to\n     *   be plain (if the point is located inside of a plain shape, its projection is the point\n     *   itself). If it is set to `false` the collider shapes are considered to be hollow\n     *   (if the point is located inside of an hollow shape, it is projected on the shape's\n     *   boundary).\n     * @param groups - The bit groups and filter associated to the point to project, in order to only\n     *   project on colliders with collision groups compatible with the ray's group.\n     */\n    public projectPoint(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        point: Vector,\n        solid: boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ): PointColliderProjection | null {\n        let rawPoint = VectorOps.intoRaw(point);\n        let result = PointColliderProjection.fromRaw(\n            colliders,\n            this.raw.projectPoint(\n                bodies.raw,\n                colliders.raw,\n                rawPoint,\n                solid,\n                filterFlags,\n                filterGroups,\n                filterExcludeCollider,\n                filterExcludeRigidBody,\n                filterPredicate,\n            ),\n        );\n\n        rawPoint.free();\n\n        return result;\n    }\n\n    /**\n     * Find the projection of a point on the closest collider.\n     *\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param point - The point to project.\n     * @param groups - The bit groups and filter associated to the point to project, in order to only\n     *   project on colliders with collision groups compatible with the ray's group.\n     */\n    public projectPointAndGetFeature(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        point: Vector,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ): PointColliderProjection | null {\n        let rawPoint = VectorOps.intoRaw(point);\n        let result = PointColliderProjection.fromRaw(\n            colliders,\n            this.raw.projectPointAndGetFeature(\n                bodies.raw,\n                colliders.raw,\n                rawPoint,\n                filterFlags,\n                filterGroups,\n                filterExcludeCollider,\n                filterExcludeRigidBody,\n                filterPredicate,\n            ),\n        );\n\n        rawPoint.free();\n\n        return result;\n    }\n\n    /**\n     * Find all the colliders containing the given point.\n     *\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param point - The point used for the containment test.\n     * @param groups - The bit groups and filter associated to the point to test, in order to only\n     *   test on colliders with collision groups compatible with the ray's group.\n     * @param callback - A function called with the handles of each collider with a shape\n     *   containing the `point`.\n     */\n    public intersectionsWithPoint(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        point: Vector,\n        callback: (handle: ColliderHandle) => boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ) {\n        let rawPoint = VectorOps.intoRaw(point);\n\n        this.raw.intersectionsWithPoint(\n            bodies.raw,\n            colliders.raw,\n            rawPoint,\n            callback,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider,\n            filterExcludeRigidBody,\n            filterPredicate,\n        );\n\n        rawPoint.free();\n    }\n\n    /**\n     * Casts a shape at a constant linear velocity and retrieve the first collider it hits.\n     * This is similar to ray-casting except that we are casting a whole shape instead of\n     * just a point (the ray origin).\n     *\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param shapePos - The initial position of the shape to cast.\n     * @param shapeRot - The initial rotation of the shape to cast.\n     * @param shapeVel - The constant velocity of the shape to cast (i.e. the cast direction).\n     * @param shape - The shape to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the distance traveled by the shape to `shapeVel.norm() * maxToi`.\n     * @param stopAtPenetration - If set to `false`, the linear shape-cast won’t immediately stop if\n     *   the shape is penetrating another shape at its starting point **and** its trajectory is such\n     *   that it’s on a path to exist that penetration state.\n     * @param groups - The bit groups and filter associated to the shape to cast, in order to only\n     *   test on colliders with collision groups compatible with this group.\n     */\n    public castShape(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        shapePos: Vector,\n        shapeRot: Rotation,\n        shapeVel: Vector,\n        shape: Shape,\n        maxToi: number,\n        stopAtPenetration: boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ): ShapeColliderTOI | null {\n        let rawPos = VectorOps.intoRaw(shapePos);\n        let rawRot = RotationOps.intoRaw(shapeRot);\n        let rawVel = VectorOps.intoRaw(shapeVel);\n        let rawShape = shape.intoRaw();\n\n        let result = ShapeColliderTOI.fromRaw(\n            colliders,\n            this.raw.castShape(\n                bodies.raw,\n                colliders.raw,\n                rawPos,\n                rawRot,\n                rawVel,\n                rawShape,\n                maxToi,\n                stopAtPenetration,\n                filterFlags,\n                filterGroups,\n                filterExcludeCollider,\n                filterExcludeRigidBody,\n                filterPredicate,\n            ),\n        );\n\n        rawPos.free();\n        rawRot.free();\n        rawVel.free();\n        rawShape.free();\n\n        return result;\n    }\n\n    /**\n     * Retrieve all the colliders intersecting the given shape.\n     *\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param shapePos - The position of the shape to test.\n     * @param shapeRot - The orientation of the shape to test.\n     * @param shape - The shape to test.\n     * @param groups - The bit groups and filter associated to the shape to test, in order to only\n     *   test on colliders with collision groups compatible with this group.\n     * @param callback - A function called with the handles of each collider intersecting the `shape`.\n     */\n    public intersectionsWithShape(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        shapePos: Vector,\n        shapeRot: Rotation,\n        shape: Shape,\n        callback: (handle: ColliderHandle) => boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ) {\n        let rawPos = VectorOps.intoRaw(shapePos);\n        let rawRot = RotationOps.intoRaw(shapeRot);\n        let rawShape = shape.intoRaw();\n\n        this.raw.intersectionsWithShape(\n            bodies.raw,\n            colliders.raw,\n            rawPos,\n            rawRot,\n            rawShape,\n            callback,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider,\n            filterExcludeRigidBody,\n            filterPredicate,\n        );\n\n        rawPos.free();\n        rawRot.free();\n        rawShape.free();\n    }\n\n    /**\n     * Finds the handles of all the colliders with an AABB intersecting the given AABB.\n     *\n     * @param aabbCenter - The center of the AABB to test.\n     * @param aabbHalfExtents - The half-extents of the AABB to test.\n     * @param callback - The callback that will be called with the handles of all the colliders\n     *                   currently intersecting the given AABB.\n     */\n    public collidersWithAabbIntersectingAabb(\n        aabbCenter: Vector,\n        aabbHalfExtents: Vector,\n        callback: (handle: ColliderHandle) => boolean,\n    ) {\n        let rawCenter = VectorOps.intoRaw(aabbCenter);\n        let rawHalfExtents = VectorOps.intoRaw(aabbHalfExtents);\n        this.raw.collidersWithAabbIntersectingAabb(\n            rawCenter,\n            rawHalfExtents,\n            callback,\n        );\n        rawCenter.free();\n        rawHalfExtents.free();\n    }\n}\n","import {RawContactForceEvent, RawEventQueue} from \"../raw\";\nimport {RigidBodyHandle} from \"../dynamics\";\nimport {Collider, ColliderHandle} from \"../geometry\";\nimport {Vector, VectorOps} from \"../math\";\n\n/**\n * Flags indicating what events are enabled for colliders.\n */\nexport enum ActiveEvents {\n    NONE = 0,\n    /**\n     * Enable collision events.\n     */\n    COLLISION_EVENTS = 0b0001,\n    /**\n     * Enable contact force events.\n     */\n    CONTACT_FORCE_EVENTS = 0b0010,\n}\n\n/**\n * Event occurring when the sum of the magnitudes of the\n * contact forces between two colliders exceed a threshold.\n *\n * This object should **not** be stored anywhere. Its properties can only be\n * read from within the closure given to `EventHandler.drainContactForceEvents`.\n */\nexport class TempContactForceEvent {\n    raw: RawContactForceEvent;\n\n    public free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n        this.raw = undefined;\n    }\n\n    /**\n     * The first collider involved in the contact.\n     */\n    public collider1(): ColliderHandle {\n        return this.raw.collider1();\n    }\n\n    /**\n     * The second collider involved in the contact.\n     */\n    public collider2(): ColliderHandle {\n        return this.raw.collider2();\n    }\n\n    /**\n     * The sum of all the forces between the two colliders.\n     */\n    public totalForce(): Vector {\n        return VectorOps.fromRaw(this.raw.total_force());\n    }\n\n    /**\n     * The sum of the magnitudes of each force between the two colliders.\n     *\n     * Note that this is **not** the same as the magnitude of `self.total_force`.\n     * Here we are summing the magnitude of all the forces, instead of taking\n     * the magnitude of their sum.\n     */\n    public totalForceMagnitude(): number {\n        return this.raw.total_force_magnitude();\n    }\n\n    /**\n     * The world-space (unit) direction of the force with strongest magnitude.\n     */\n    public maxForceDirection(): Vector {\n        return VectorOps.fromRaw(this.raw.max_force_direction());\n    }\n\n    /**\n     * The magnitude of the largest force at a contact point of this contact pair.\n     */\n    public maxForceMagnitude(): number {\n        return this.raw.max_force_magnitude();\n    }\n}\n\n/**\n * A structure responsible for collecting events generated\n * by the physics engine.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `eventQueue.free()`\n * once you are done using it.\n */\nexport class EventQueue {\n    raw: RawEventQueue;\n\n    /**\n     * Creates a new event collector.\n     *\n     * @param autoDrain -setting this to `true` is strongly recommended. If true, the collector will\n     * be automatically drained before each `world.step(collector)`. If false, the collector will\n     * keep all events in memory unless it is manually drained/cleared; this may lead to unbounded use of\n     * RAM if no drain is performed.\n     */\n    constructor(autoDrain: boolean, raw?: RawEventQueue) {\n        this.raw = raw || new RawEventQueue(autoDrain);\n    }\n\n    /**\n     * Release the WASM memory occupied by this event-queue.\n     */\n    public free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n        this.raw = undefined;\n    }\n\n    /**\n     * Applies the given javascript closure on each collision event of this collector, then clear\n     * the internal collision event buffer.\n     *\n     * @param f - JavaScript closure applied to each collision event. The\n     * closure must take three arguments: two integers representing the handles of the colliders\n     * involved in the collision, and a boolean indicating if the collision started (true) or stopped\n     * (false).\n     */\n    public drainCollisionEvents(\n        f: (\n            handle1: ColliderHandle,\n            handle2: ColliderHandle,\n            started: boolean,\n        ) => void,\n    ) {\n        this.raw.drainCollisionEvents(f);\n    }\n\n    /**\n     * Applies the given javascript closure on each contact force event of this collector, then clear\n     * the internal collision event buffer.\n     *\n     * @param f - JavaScript closure applied to each collision event. The\n     *            closure must take one `TempContactForceEvent` argument.\n     */\n    public drainContactForceEvents(f: (event: TempContactForceEvent) => void) {\n        let event = new TempContactForceEvent();\n        this.raw.drainContactForceEvents((raw: RawContactForceEvent) => {\n            event.raw = raw;\n            f(event);\n            event.free();\n        });\n    }\n\n    /**\n     * Removes all events contained by this collector\n     */\n    public clear() {\n        this.raw.clear();\n    }\n}\n","import {RigidBodyHandle} from \"../dynamics\";\nimport {ColliderHandle} from \"../geometry\";\n\nexport enum ActiveHooks {\n    NONE = 0,\n    FILTER_CONTACT_PAIRS = 0b0001,\n    FILTER_INTERSECTION_PAIRS = 0b0010,\n    // MODIFY_SOLVER_CONTACTS = 0b0100, /* Not supported yet in JS. */\n}\n\nexport enum SolverFlags {\n    EMPTY = 0b000,\n    COMPUTE_IMPULSE = 0b001,\n}\n\nexport interface PhysicsHooks {\n    /**\n     * Function that determines if contacts computation should happen between two colliders, and how the\n     * constraints solver should behave for these contacts.\n     *\n     * This will only be executed and taken into account if at least one of the involved colliders contains the\n     * `ActiveHooks.FILTER_CONTACT_PAIR` flag in its active hooks.\n     *\n     * @param collider1 − Handle of the first collider involved in the potential contact.\n     * @param collider2 − Handle of the second collider involved in the potential contact.\n     * @param body1 − Handle of the first body involved in the potential contact.\n     * @param body2 − Handle of the second body involved in the potential contact.\n     */\n    filterContactPair(\n        collider1: ColliderHandle,\n        collider2: ColliderHandle,\n        body1: RigidBodyHandle,\n        body2: RigidBodyHandle,\n    ): SolverFlags | null;\n\n    /**\n     * Function that determines if intersection computation should happen between two colliders (where at least\n     * one is a sensor).\n     *\n     * This will only be executed and taken into account if `one of the involved colliders contains the\n     * `ActiveHooks.FILTER_INTERSECTION_PAIR` flag in its active hooks.\n     *\n     * @param collider1 − Handle of the first collider involved in the potential contact.\n     * @param collider2 − Handle of the second collider involved in the potential contact.\n     * @param body1 − Handle of the first body involved in the potential contact.\n     * @param body2 − Handle of the second body involved in the potential contact.\n     */\n    filterIntersectionPair(\n        collider1: ColliderHandle,\n        collider2: ColliderHandle,\n        body1: RigidBodyHandle,\n        body2: RigidBodyHandle,\n    ): boolean;\n}\n","import {RawColliderSet} from \"../raw\";\nimport {Rotation, RotationOps, Vector, VectorOps} from \"../math\";\nimport {\n    CoefficientCombineRule,\n    RigidBody,\n    RigidBodyHandle,\n    RigidBodySet,\n} from \"../dynamics\";\nimport {ActiveHooks, ActiveEvents} from \"../pipeline\";\nimport {InteractionGroups} from \"./interaction_groups\";\nimport {\n    Shape,\n    Cuboid,\n    Ball,\n    ShapeType,\n    Capsule,\n    TriMesh,\n    Polyline,\n    Heightfield,\n    Segment,\n    Triangle,\n    RoundTriangle,\n    RoundCuboid,\n    HalfSpace,\n    // #if DIM3\n    Cylinder,\n    RoundCylinder,\n    Cone,\n    RoundCone,\n    ConvexPolyhedron,\n    RoundConvexPolyhedron,\n    // #endif\n} from \"./shape\";\nimport {Ray, RayIntersection} from \"./ray\";\nimport {PointProjection} from \"./point\";\nimport {ShapeColliderTOI, ShapeTOI} from \"./toi\";\nimport {ShapeContact} from \"./contact\";\nimport {ColliderSet} from \"./collider_set\";\n\n/**\n * Flags affecting whether collision-detection happens between two colliders\n * depending on the type of rigid-bodies they are attached to.\n */\nexport enum ActiveCollisionTypes {\n    /**\n     * Enable collision-detection between a collider attached to a dynamic body\n     * and another collider attached to a dynamic body.\n     */\n    DYNAMIC_DYNAMIC = 0b0000_0000_0000_0001,\n    /**\n     * Enable collision-detection between a collider attached to a dynamic body\n     * and another collider attached to a kinematic body.\n     */\n    DYNAMIC_KINEMATIC = 0b0000_0000_0000_1100,\n    /**\n     * Enable collision-detection between a collider attached to a dynamic body\n     * and another collider attached to a fixed body (or not attached to any body).\n     */\n    DYNAMIC_FIXED = 0b0000_0000_0000_0010,\n    /**\n     * Enable collision-detection between a collider attached to a kinematic body\n     * and another collider attached to a kinematic body.\n     */\n    KINEMATIC_KINEMATIC = 0b1100_1100_0000_0000,\n\n    /**\n     * Enable collision-detection between a collider attached to a kinematic body\n     * and another collider attached to a fixed body (or not attached to any body).\n     */\n    KINEMATIC_FIXED = 0b0010_0010_0000_0000,\n\n    /**\n     * Enable collision-detection between a collider attached to a fixed body (or\n     * not attached to any body) and another collider attached to a fixed body (or\n     * not attached to any body).\n     */\n    FIXED_FIXED = 0b0000_0000_0010_0000,\n    /**\n     * The default active collision types, enabling collisions between a dynamic body\n     * and another body of any type, but not enabling collisions between two non-dynamic bodies.\n     */\n    DEFAULT = DYNAMIC_KINEMATIC | DYNAMIC_DYNAMIC | DYNAMIC_FIXED,\n    /**\n     * Enable collisions between any kind of rigid-bodies (including between two non-dynamic bodies).\n     */\n    ALL = DYNAMIC_KINEMATIC |\n        DYNAMIC_DYNAMIC |\n        DYNAMIC_FIXED |\n        KINEMATIC_KINEMATIC |\n        KINEMATIC_FIXED |\n        KINEMATIC_KINEMATIC,\n}\n\n/**\n * The integer identifier of a collider added to a `ColliderSet`.\n */\nexport type ColliderHandle = number;\n\n/**\n * A geometric entity that can be attached to a body so it can be affected\n * by contacts and proximity queries.\n */\nexport class Collider {\n    private colliderSet: ColliderSet; // The Collider won't need to free this.\n    readonly handle: ColliderHandle;\n    private _shape: Shape;\n    private _parent: RigidBody | null;\n\n    constructor(\n        colliderSet: ColliderSet,\n        handle: ColliderHandle,\n        parent: RigidBody | null,\n        shape?: Shape,\n    ) {\n        this.colliderSet = colliderSet;\n        this.handle = handle;\n        this._parent = parent;\n        this._shape = shape;\n    }\n\n    /** @internal */\n    public finalizeDeserialization(bodies: RigidBodySet) {\n        if (this.handle != null) {\n            this._parent = bodies.get(\n                this.colliderSet.raw.coParent(this.handle),\n            );\n        }\n    }\n\n    private ensureShapeIsCached() {\n        if (!this._shape)\n            this._shape = Shape.fromRaw(this.colliderSet.raw, this.handle);\n    }\n\n    /**\n     * The shape of this collider.\n     */\n    public get shape(): Shape {\n        this.ensureShapeIsCached();\n        return this._shape;\n    }\n\n    /**\n     * Checks if this collider is still valid (i.e. that it has\n     * not been deleted from the collider set yet).\n     */\n    public isValid(): boolean {\n        return this.colliderSet.raw.contains(this.handle);\n    }\n\n    /**\n     * The world-space translation of this rigid-body.\n     */\n    public translation(): Vector {\n        return VectorOps.fromRaw(\n            this.colliderSet.raw.coTranslation(this.handle),\n        );\n    }\n\n    /**\n     * The world-space orientation of this rigid-body.\n     */\n    public rotation(): Rotation {\n        return RotationOps.fromRaw(\n            this.colliderSet.raw.coRotation(this.handle),\n        );\n    }\n\n    /**\n     * Is this collider a sensor?\n     */\n    public isSensor(): boolean {\n        return this.colliderSet.raw.coIsSensor(this.handle);\n    }\n\n    /**\n     * Sets whether or not this collider is a sensor.\n     * @param isSensor - If `true`, the collider will be a sensor.\n     */\n    public setSensor(isSensor: boolean) {\n        this.colliderSet.raw.coSetSensor(this.handle, isSensor);\n    }\n\n    /**\n     * Sets the new shape of the collider.\n     * @param shape - The collider’s new shape.\n     */\n    public setShape(shape: Shape) {\n        let rawShape = shape.intoRaw();\n        this.colliderSet.raw.coSetShape(this.handle, rawShape);\n        rawShape.free();\n        this._shape = shape;\n    }\n\n    /**\n     * Sets whether this collider is enabled or not.\n     *\n     * @param enabled - Set to `false` to disable this collider (its parent rigid-body won’t be disabled automatically by this).\n     */\n    public setEnabled(enabled: boolean) {\n        this.colliderSet.raw.coSetEnabled(this.handle, enabled);\n    }\n\n    /**\n     * Is this collider enabled?\n     */\n    public isEnabled(): boolean {\n        return this.colliderSet.raw.coIsEnabled(this.handle);\n    }\n\n    /**\n     * Sets the restitution coefficient of the collider to be created.\n     *\n     * @param restitution - The restitution coefficient in `[0, 1]`. A value of 0 (the default) means no bouncing behavior\n     *                   while 1 means perfect bouncing (though energy may still be lost due to numerical errors of the\n     *                   constraints solver).\n     */\n    public setRestitution(restitution: number) {\n        this.colliderSet.raw.coSetRestitution(this.handle, restitution);\n    }\n\n    /**\n     * Sets the friction coefficient of the collider to be created.\n     *\n     * @param friction - The friction coefficient. Must be greater or equal to 0. This is generally smaller than 1. The\n     *                   higher the coefficient, the stronger friction forces will be for contacts with the collider\n     *                   being built.\n     */\n    public setFriction(friction: number) {\n        this.colliderSet.raw.coSetFriction(this.handle, friction);\n    }\n\n    /**\n     * Gets the rule used to combine the friction coefficients of two colliders\n     * colliders involved in a contact.\n     */\n    public frictionCombineRule(): CoefficientCombineRule {\n        return this.colliderSet.raw.coFrictionCombineRule(this.handle);\n    }\n\n    /**\n     * Sets the rule used to combine the friction coefficients of two colliders\n     * colliders involved in a contact.\n     *\n     * @param rule − The combine rule to apply.\n     */\n    public setFrictionCombineRule(rule: CoefficientCombineRule) {\n        this.colliderSet.raw.coSetFrictionCombineRule(this.handle, rule);\n    }\n\n    /**\n     * Gets the rule used to combine the restitution coefficients of two colliders\n     * colliders involved in a contact.\n     */\n    public restitutionCombineRule(): CoefficientCombineRule {\n        return this.colliderSet.raw.coRestitutionCombineRule(this.handle);\n    }\n\n    /**\n     * Sets the rule used to combine the restitution coefficients of two colliders\n     * colliders involved in a contact.\n     *\n     * @param rule − The combine rule to apply.\n     */\n    public setRestitutionCombineRule(rule: CoefficientCombineRule) {\n        this.colliderSet.raw.coSetRestitutionCombineRule(this.handle, rule);\n    }\n\n    /**\n     * Sets the collision groups used by this collider.\n     *\n     * Two colliders will interact iff. their collision groups are compatible.\n     * See the documentation of `InteractionGroups` for details on teh used bit pattern.\n     *\n     * @param groups - The collision groups used for the collider being built.\n     */\n    public setCollisionGroups(groups: InteractionGroups) {\n        this.colliderSet.raw.coSetCollisionGroups(this.handle, groups);\n    }\n\n    /**\n     * Sets the solver groups used by this collider.\n     *\n     * Forces between two colliders in contact will be computed iff their solver\n     * groups are compatible.\n     * See the documentation of `InteractionGroups` for details on the used bit pattern.\n     *\n     * @param groups - The solver groups used for the collider being built.\n     */\n    public setSolverGroups(groups: InteractionGroups) {\n        this.colliderSet.raw.coSetSolverGroups(this.handle, groups);\n    }\n\n    /**\n     * Get the physics hooks active for this collider.\n     */\n    public activeHooks() {\n        return this.colliderSet.raw.coActiveHooks(this.handle);\n    }\n\n    /**\n     * Set the physics hooks active for this collider.\n     *\n     * Use this to enable custom filtering rules for contact/intersecstion pairs involving this collider.\n     *\n     * @param activeHooks - The hooks active for contact/intersection pairs involving this collider.\n     */\n    public setActiveHooks(activeHooks: ActiveHooks) {\n        this.colliderSet.raw.coSetActiveHooks(this.handle, activeHooks);\n    }\n\n    /**\n     * The events active for this collider.\n     */\n    public activeEvents(): ActiveEvents {\n        return this.colliderSet.raw.coActiveEvents(this.handle);\n    }\n\n    /**\n     * Set the events active for this collider.\n     *\n     * Use this to enable contact and/or intersection event reporting for this collider.\n     *\n     * @param activeEvents - The events active for contact/intersection pairs involving this collider.\n     */\n    public setActiveEvents(activeEvents: ActiveEvents) {\n        this.colliderSet.raw.coSetActiveEvents(this.handle, activeEvents);\n    }\n\n    /**\n     * Gets the collision types active for this collider.\n     */\n    public activeCollisionTypes(): ActiveCollisionTypes {\n        return this.colliderSet.raw.coActiveCollisionTypes(this.handle);\n    }\n\n    /**\n     * Sets the total force magnitude beyond which a contact force event can be emitted.\n     *\n     * @param threshold - The new force threshold.\n     */\n    public setContactForceEventThreshold(threshold: number) {\n        return this.colliderSet.raw.coSetContactForceEventThreshold(\n            this.handle,\n            threshold,\n        );\n    }\n\n    /**\n     * The total force magnitude beyond which a contact force event can be emitted.\n     */\n    public contactForceEventThreshold(): number {\n        return this.colliderSet.raw.coContactForceEventThreshold(this.handle);\n    }\n\n    /**\n     * Set the collision types active for this collider.\n     *\n     * @param activeCollisionTypes - The hooks active for contact/intersection pairs involving this collider.\n     */\n    public setActiveCollisionTypes(activeCollisionTypes: ActiveCollisionTypes) {\n        this.colliderSet.raw.coSetActiveCollisionTypes(\n            this.handle,\n            activeCollisionTypes,\n        );\n    }\n\n    /**\n     * Sets the uniform density of this collider.\n     *\n     * This will override any previous mass-properties set by `this.setDensity`,\n     * `this.setMass`, `this.setMassProperties`, `ColliderDesc.density`,\n     * `ColliderDesc.mass`, or `ColliderDesc.massProperties` for this collider.\n     *\n     * The mass and angular inertia of this collider will be computed automatically based on its\n     * shape.\n     */\n    public setDensity(density: number) {\n        this.colliderSet.raw.coSetDensity(this.handle, density);\n    }\n\n    /**\n     * Sets the mass of this collider.\n     *\n     * This will override any previous mass-properties set by `this.setDensity`,\n     * `this.setMass`, `this.setMassProperties`, `ColliderDesc.density`,\n     * `ColliderDesc.mass`, or `ColliderDesc.massProperties` for this collider.\n     *\n     * The angular inertia of this collider will be computed automatically based on its shape\n     * and this mass value.\n     */\n    public setMass(mass: number) {\n        this.colliderSet.raw.coSetMass(this.handle, mass);\n    }\n\n    // #if DIM3\n    /**\n     * Sets the mass of this collider.\n     *\n     * This will override any previous mass-properties set by `this.setDensity`,\n     * `this.setMass`, `this.setMassProperties`, `ColliderDesc.density`,\n     * `ColliderDesc.mass`, or `ColliderDesc.massProperties` for this collider.\n     */\n    public setMassProperties(\n        mass: number,\n        centerOfMass: Vector,\n        principalAngularInertia: Vector,\n        angularInertiaLocalFrame: Rotation,\n    ) {\n        let rawCom = VectorOps.intoRaw(centerOfMass);\n        let rawPrincipalInertia = VectorOps.intoRaw(principalAngularInertia);\n        let rawInertiaFrame = RotationOps.intoRaw(angularInertiaLocalFrame);\n\n        this.colliderSet.raw.coSetMassProperties(\n            this.handle,\n            mass,\n            rawCom,\n            rawPrincipalInertia,\n            rawInertiaFrame,\n        );\n\n        rawCom.free();\n        rawPrincipalInertia.free();\n        rawInertiaFrame.free();\n    }\n    // #endif\n\n\n    /**\n     * Sets the translation of this collider.\n     *\n     * @param tra - The world-space position of the collider.\n     */\n    public setTranslation(tra: Vector) {\n        // #if DIM3\n        this.colliderSet.raw.coSetTranslation(this.handle, tra.x, tra.y, tra.z);\n        // #endif\n    }\n\n    /**\n     * Sets the translation of this collider relative to its parent rigid-body.\n     *\n     * Does nothing if this collider isn't attached to a rigid-body.\n     *\n     * @param tra - The new translation of the collider relative to its parent.\n     */\n    public setTranslationWrtParent(tra: Vector) {\n        // #if DIM3\n        this.colliderSet.raw.coSetTranslationWrtParent(\n            this.handle,\n            tra.x,\n            tra.y,\n            tra.z,\n        );\n        // #endif\n    }\n\n    // #if DIM3\n    /**\n     * Sets the rotation quaternion of this collider.\n     *\n     * This does nothing if a zero quaternion is provided.\n     *\n     * @param rotation - The rotation to set.\n     */\n    public setRotation(rot: Rotation) {\n        this.colliderSet.raw.coSetRotation(\n            this.handle,\n            rot.x,\n            rot.y,\n            rot.z,\n            rot.w,\n        );\n    }\n\n    /**\n     * Sets the rotation quaternion of this collider relative to its parent rigid-body.\n     *\n     * This does nothing if a zero quaternion is provided or if this collider isn't\n     * attached to a rigid-body.\n     *\n     * @param rotation - The rotation to set.\n     */\n    public setRotationWrtParent(rot: Rotation) {\n        this.colliderSet.raw.coSetRotationWrtParent(\n            this.handle,\n            rot.x,\n            rot.y,\n            rot.z,\n            rot.w,\n        );\n    }\n    // #endif\n\n    /**\n     * The type of the shape of this collider.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public shapeType(): ShapeType {\n        return this.colliderSet.raw.coShapeType(\n            this.handle,\n        ) as number as ShapeType;\n    }\n\n    /**\n     * The half-extents of this collider if it is a cuboid shape.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public halfExtents(): Vector {\n        return VectorOps.fromRaw(\n            this.colliderSet.raw.coHalfExtents(this.handle),\n        );\n    }\n\n    /**\n     * Sets the half-extents of this collider if it is a cuboid shape.\n     *\n     * @param newHalfExtents - desired half extents.\n     */\n    public setHalfExtents(newHalfExtents: Vector) {\n        const rawPoint = VectorOps.intoRaw(newHalfExtents);\n        this.colliderSet.raw.coSetHalfExtents(this.handle, rawPoint);\n    }\n\n    /**\n     * The radius of this collider if it is a ball, cylinder, capsule, or cone shape.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public radius(): number {\n        return this.colliderSet.raw.coRadius(this.handle);\n    }\n\n    /**\n     * Sets the radius of this collider if it is a ball, cylinder, capsule, or cone shape.\n     *\n     * @param newRadius - desired radius.\n     */\n    public setRadius(newRadius: number): void {\n        this.colliderSet.raw.coSetRadius(this.handle, newRadius);\n    }\n\n    /**\n     * The radius of the round edges of this collider if it is a round cylinder.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public roundRadius(): number {\n        return this.colliderSet.raw.coRoundRadius(this.handle);\n    }\n\n    /**\n     * Sets the radius of the round edges of this collider if it has round edges.\n     *\n     * @param newBorderRadius - desired round edge radius.\n     */\n    public setRoundRadius(newBorderRadius: number) {\n        this.colliderSet.raw.coSetRoundRadius(this.handle, newBorderRadius);\n    }\n\n    /**\n     * The half height of this collider if it is a cylinder, capsule, or cone shape.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public halfHeight(): number {\n        return this.colliderSet.raw.coHalfHeight(this.handle);\n    }\n\n    /**\n     * Sets the half height of this collider if it is a cylinder, capsule, or cone shape.\n     *\n     * @param newHalfheight - desired half height.\n     */\n    public setHalfHeight(newHalfheight: number) {\n        this.colliderSet.raw.coSetHalfHeight(this.handle, newHalfheight);\n    }\n\n    /**\n     * If this collider has a triangle mesh, polyline, convex polygon, or convex polyhedron shape,\n     * this returns the vertex buffer of said shape.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public vertices(): Float32Array {\n        return this.colliderSet.raw.coVertices(this.handle);\n    }\n\n    /**\n     * If this collider has a triangle mesh, polyline, or convex polyhedron shape,\n     * this returns the index buffer of said shape.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public indices(): Uint32Array | undefined {\n        return this.colliderSet.raw.coIndices(this.handle);\n    }\n\n    /**\n     * If this collider has a heightfield shape, this returns the heights buffer of\n     * the heightfield.\n     * In 3D, the returned height matrix is provided in column-major order.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public heightfieldHeights(): Float32Array {\n        return this.colliderSet.raw.coHeightfieldHeights(this.handle);\n    }\n\n    /**\n     * If this collider has a heightfield shape, this returns the scale\n     * applied to it.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public heightfieldScale(): Vector {\n        let scale = this.colliderSet.raw.coHeightfieldScale(this.handle);\n        return VectorOps.fromRaw(scale);\n    }\n\n    // #if DIM3\n    /**\n     * If this collider has a heightfield shape, this returns the number of\n     * rows of its height matrix.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public heightfieldNRows(): number {\n        return this.colliderSet.raw.coHeightfieldNRows(this.handle);\n    }\n\n    /**\n     * If this collider has a heightfield shape, this returns the number of\n     * columns of its height matrix.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public heightfieldNCols(): number {\n        return this.colliderSet.raw.coHeightfieldNCols(this.handle);\n    }\n\n    // #endif\n\n    /**\n     * The rigid-body this collider is attached to.\n     */\n    public parent(): RigidBody | null {\n        return this._parent;\n    }\n\n    /**\n     * The friction coefficient of this collider.\n     */\n    public friction(): number {\n        return this.colliderSet.raw.coFriction(this.handle);\n    }\n\n    /**\n     * The restitution coefficient of this collider.\n     */\n    public restitution(): number {\n        return this.colliderSet.raw.coRestitution(this.handle);\n    }\n\n    /**\n     * The density of this collider.\n     */\n    public density(): number {\n        return this.colliderSet.raw.coDensity(this.handle);\n    }\n\n    /**\n     * The mass of this collider.\n     */\n    public mass(): number {\n        return this.colliderSet.raw.coMass(this.handle);\n    }\n\n    /**\n     * The volume of this collider.\n     */\n    public volume(): number {\n        return this.colliderSet.raw.coVolume(this.handle);\n    }\n\n    /**\n     * The collision groups of this collider.\n     */\n    public collisionGroups(): InteractionGroups {\n        return this.colliderSet.raw.coCollisionGroups(this.handle);\n    }\n\n    /**\n     * The solver groups of this collider.\n     */\n    public solverGroups(): InteractionGroups {\n        return this.colliderSet.raw.coSolverGroups(this.handle);\n    }\n\n    /**\n     * Tests if this collider contains a point.\n     *\n     * @param point - The point to test.\n     */\n    public containsPoint(point: Vector): boolean {\n        let rawPoint = VectorOps.intoRaw(point);\n        let result = this.colliderSet.raw.coContainsPoint(\n            this.handle,\n            rawPoint,\n        );\n\n        rawPoint.free();\n\n        return result;\n    }\n\n    /**\n     * Find the projection of a point on this collider.\n     *\n     * @param point - The point to project.\n     * @param solid - If this is set to `true` then the collider shapes are considered to\n     *   be plain (if the point is located inside of a plain shape, its projection is the point\n     *   itself). If it is set to `false` the collider shapes are considered to be hollow\n     *   (if the point is located inside of an hollow shape, it is projected on the shape's\n     *   boundary).\n     */\n    public projectPoint(point: Vector, solid: boolean): PointProjection | null {\n        let rawPoint = VectorOps.intoRaw(point);\n        let result = PointProjection.fromRaw(\n            this.colliderSet.raw.coProjectPoint(this.handle, rawPoint, solid),\n        );\n\n        rawPoint.free();\n\n        return result;\n    }\n\n    /**\n     * Tests if this collider intersects the given ray.\n     *\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     */\n    public intersectsRay(ray: Ray, maxToi: number): boolean {\n        let rawOrig = VectorOps.intoRaw(ray.origin);\n        let rawDir = VectorOps.intoRaw(ray.dir);\n        let result = this.colliderSet.raw.coIntersectsRay(\n            this.handle,\n            rawOrig,\n            rawDir,\n            maxToi,\n        );\n\n        rawOrig.free();\n        rawDir.free();\n\n        return result;\n    }\n\n    /*\n     * Computes the smallest time between this and the given shape under translational movement are separated by a distance smaller or equal to distance.\n     *\n     * @param collider1Vel - The constant velocity of the current shape to cast (i.e. the cast direction).\n     * @param shape2 - The shape to cast against.\n     * @param shape2Pos - The position of the second shape.\n     * @param shape2Rot - The rotation of the second shape.\n     * @param shape2Vel - The constant velocity of the second shape.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the distance traveled by the shape to `collider1Vel.norm() * maxToi`.\n     * @param stopAtPenetration - If set to `false`, the linear shape-cast won’t immediately stop if\n     *   the shape is penetrating another shape at its starting point **and** its trajectory is such\n     *   that it’s on a path to exist that penetration state.\n     */\n    public castShape(\n        collider1Vel: Vector,\n        shape2: Shape,\n        shape2Pos: Vector,\n        shape2Rot: Rotation,\n        shape2Vel: Vector,\n        maxToi: number,\n        stopAtPenetration: boolean,\n    ): ShapeTOI | null {\n        let rawCollider1Vel = VectorOps.intoRaw(collider1Vel);\n        let rawShape2Pos = VectorOps.intoRaw(shape2Pos);\n        let rawShape2Rot = RotationOps.intoRaw(shape2Rot);\n        let rawShape2Vel = VectorOps.intoRaw(shape2Vel);\n        let rawShape2 = shape2.intoRaw();\n\n        let result = ShapeTOI.fromRaw(\n            this.colliderSet,\n            this.colliderSet.raw.coCastShape(\n                this.handle,\n                rawCollider1Vel,\n                rawShape2,\n                rawShape2Pos,\n                rawShape2Rot,\n                rawShape2Vel,\n                maxToi,\n                stopAtPenetration,\n            ),\n        );\n\n        rawCollider1Vel.free();\n        rawShape2Pos.free();\n        rawShape2Rot.free();\n        rawShape2Vel.free();\n        rawShape2.free();\n\n        return result;\n    }\n\n    /*\n     * Computes the smallest time between this and the given collider under translational movement are separated by a distance smaller or equal to distance.\n     *\n     * @param collider1Vel - The constant velocity of the current collider to cast (i.e. the cast direction).\n     * @param collider2 - The collider to cast against.\n     * @param collider2Vel - The constant velocity of the second collider.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the distance traveled by the shape to `shapeVel.norm() * maxToi`.\n     * @param stopAtPenetration - If set to `false`, the linear shape-cast won’t immediately stop if\n     *   the shape is penetrating another shape at its starting point **and** its trajectory is such\n     *   that it’s on a path to exist that penetration state.\n     */\n    public castCollider(\n        collider1Vel: Vector,\n        collider2: Collider,\n        collider2Vel: Vector,\n        maxToi: number,\n        stopAtPenetration: boolean,\n    ): ShapeColliderTOI | null {\n        let rawCollider1Vel = VectorOps.intoRaw(collider1Vel);\n        let rawCollider2Vel = VectorOps.intoRaw(collider2Vel);\n\n        let result = ShapeColliderTOI.fromRaw(\n            this.colliderSet,\n            this.colliderSet.raw.coCastCollider(\n                this.handle,\n                rawCollider1Vel,\n                collider2.handle,\n                rawCollider2Vel,\n                maxToi,\n                stopAtPenetration,\n            ),\n        );\n\n        rawCollider1Vel.free();\n        rawCollider2Vel.free();\n\n        return result;\n    }\n\n    public intersectsShape(\n        shape2: Shape,\n        shapePos2: Vector,\n        shapeRot2: Rotation,\n    ): boolean {\n        let rawPos2 = VectorOps.intoRaw(shapePos2);\n        let rawRot2 = RotationOps.intoRaw(shapeRot2);\n        let rawShape2 = shape2.intoRaw();\n\n        let result = this.colliderSet.raw.coIntersectsShape(\n            this.handle,\n            rawShape2,\n            rawPos2,\n            rawRot2,\n        );\n\n        rawPos2.free();\n        rawRot2.free();\n        rawShape2.free();\n\n        return result;\n    }\n\n    /**\n     * Computes one pair of contact points between the shape owned by this collider and the given shape.\n     *\n     * @param shape2 - The second shape.\n     * @param shape2Pos - The initial position of the second shape.\n     * @param shape2Rot - The rotation of the second shape.\n     * @param prediction - The prediction value, if the shapes are separated by a distance greater than this value, test will fail.\n     * @returns `null` if the shapes are separated by a distance greater than prediction, otherwise contact details. The result is given in world-space.\n     */\n    contactShape(\n        shape2: Shape,\n        shape2Pos: Vector,\n        shape2Rot: Rotation,\n        prediction: number,\n    ): ShapeContact | null {\n        let rawPos2 = VectorOps.intoRaw(shape2Pos);\n        let rawRot2 = RotationOps.intoRaw(shape2Rot);\n        let rawShape2 = shape2.intoRaw();\n\n        let result = ShapeContact.fromRaw(\n            this.colliderSet.raw.coContactShape(\n                this.handle,\n                rawShape2,\n                rawPos2,\n                rawRot2,\n                prediction,\n            ),\n        );\n\n        rawPos2.free();\n        rawRot2.free();\n        rawShape2.free();\n\n        return result;\n    }\n\n    /**\n     * Computes one pair of contact points between the collider and the given collider.\n     *\n     * @param collider2 - The second collider.\n     * @param prediction - The prediction value, if the shapes are separated by a distance greater than this value, test will fail.\n     * @returns `null` if the shapes are separated by a distance greater than prediction, otherwise contact details. The result is given in world-space.\n     */\n    contactCollider(\n        collider2: Collider,\n        prediction: number,\n    ): ShapeContact | null {\n        let result = ShapeContact.fromRaw(\n            this.colliderSet.raw.coContactCollider(\n                this.handle,\n                collider2.handle,\n                prediction,\n            ),\n        );\n\n        return result;\n    }\n\n    /*\n     * Find the closest intersection between a ray and this collider.\n     *\n     * This also computes the normal at the hit point.\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n     *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n     *   whereas `false` implies that all shapes are hollow for this ray-cast.\n     * @returns The time-of-impact between this collider and the ray, or `-1` if there is no intersection.\n     */\n    public castRay(ray: Ray, maxToi: number, solid: boolean): number {\n        let rawOrig = VectorOps.intoRaw(ray.origin);\n        let rawDir = VectorOps.intoRaw(ray.dir);\n        let result = this.colliderSet.raw.coCastRay(\n            this.handle,\n            rawOrig,\n            rawDir,\n            maxToi,\n            solid,\n        );\n\n        rawOrig.free();\n        rawDir.free();\n\n        return result;\n    }\n\n    /**\n     * Find the closest intersection between a ray and this collider.\n     *\n     * This also computes the normal at the hit point.\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n     *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n     *   whereas `false` implies that all shapes are hollow for this ray-cast.\n     */\n    public castRayAndGetNormal(\n        ray: Ray,\n        maxToi: number,\n        solid: boolean,\n    ): RayIntersection | null {\n        let rawOrig = VectorOps.intoRaw(ray.origin);\n        let rawDir = VectorOps.intoRaw(ray.dir);\n        let result = RayIntersection.fromRaw(\n            this.colliderSet.raw.coCastRayAndGetNormal(\n                this.handle,\n                rawOrig,\n                rawDir,\n                maxToi,\n                solid,\n            ),\n        );\n\n        rawOrig.free();\n        rawDir.free();\n\n        return result;\n    }\n}\n\nexport enum MassPropsMode {\n    Density,\n    Mass,\n    MassProps,\n}\n\nexport class ColliderDesc {\n    enabled: boolean;\n    shape: Shape;\n    massPropsMode: MassPropsMode;\n    mass: number;\n    centerOfMass: Vector;\n    // #if DIM3\n    principalAngularInertia: Vector;\n    angularInertiaLocalFrame: Rotation;\n    // #endif\n    density: number;\n    friction: number;\n    restitution: number;\n    rotation: Rotation;\n    translation: Vector;\n    isSensor: boolean;\n    collisionGroups: InteractionGroups;\n    solverGroups: InteractionGroups;\n    frictionCombineRule: CoefficientCombineRule;\n    restitutionCombineRule: CoefficientCombineRule;\n    activeEvents: ActiveEvents;\n    activeHooks: ActiveHooks;\n    activeCollisionTypes: ActiveCollisionTypes;\n    contactForceEventThreshold: number;\n\n    /**\n     * Initializes a collider descriptor from the collision shape.\n     *\n     * @param shape - The shape of the collider being built.\n     */\n    constructor(shape: Shape) {\n        this.enabled = true;\n        this.shape = shape;\n        this.massPropsMode = MassPropsMode.Density;\n        this.density = 1.0;\n        this.friction = 0.5;\n        this.restitution = 0.0;\n        this.rotation = RotationOps.identity();\n        this.translation = VectorOps.zeros();\n        this.isSensor = false;\n        this.collisionGroups = 0xffff_ffff;\n        this.solverGroups = 0xffff_ffff;\n        this.frictionCombineRule = CoefficientCombineRule.Average;\n        this.restitutionCombineRule = CoefficientCombineRule.Average;\n        this.activeCollisionTypes = ActiveCollisionTypes.DEFAULT;\n        this.activeEvents = ActiveEvents.NONE;\n        this.activeHooks = ActiveHooks.NONE;\n        this.mass = 0.0;\n        this.centerOfMass = VectorOps.zeros();\n        this.contactForceEventThreshold = 0.0;\n\n        // #if DIM3\n        this.principalAngularInertia = VectorOps.zeros();\n        this.angularInertiaLocalFrame = RotationOps.identity();\n        // #endif\n    }\n\n    /**\n     * Create a new collider descriptor with a ball shape.\n     *\n     * @param radius - The radius of the ball.\n     */\n    public static ball(radius: number): ColliderDesc {\n        const shape = new Ball(radius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Create a new collider descriptor with a capsule shape.\n     *\n     * @param halfHeight - The half-height of the capsule, along the `y` axis.\n     * @param radius - The radius of the capsule basis.\n     */\n    public static capsule(halfHeight: number, radius: number): ColliderDesc {\n        const shape = new Capsule(halfHeight, radius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new segment shape.\n     *\n     * @param a - The first point of the segment.\n     * @param b - The second point of the segment.\n     */\n    public static segment(a: Vector, b: Vector): ColliderDesc {\n        const shape = new Segment(a, b);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new triangle shape.\n     *\n     * @param a - The first point of the triangle.\n     * @param b - The second point of the triangle.\n     * @param c - The third point of the triangle.\n     */\n    public static triangle(a: Vector, b: Vector, c: Vector): ColliderDesc {\n        const shape = new Triangle(a, b, c);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new triangle shape with round corners.\n     *\n     * @param a - The first point of the triangle.\n     * @param b - The second point of the triangle.\n     * @param c - The third point of the triangle.\n     * @param borderRadius - The radius of the borders of this triangle. In 3D,\n     *   this is also equal to half the thickness of the triangle.\n     */\n    public static roundTriangle(\n        a: Vector,\n        b: Vector,\n        c: Vector,\n        borderRadius: number,\n    ): ColliderDesc {\n        const shape = new RoundTriangle(a, b, c, borderRadius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new collider descriptor with a polyline shape.\n     *\n     * @param vertices - The coordinates of the polyline's vertices.\n     * @param indices - The indices of the polyline's segments. If this is `undefined` or `null`,\n     *    the vertices are assumed to describe a line strip.\n     */\n    public static polyline(\n        vertices: Float32Array,\n        indices?: Uint32Array | null,\n    ): ColliderDesc {\n        const shape = new Polyline(vertices, indices);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new collider descriptor with a triangle mesh shape.\n     *\n     * @param vertices - The coordinates of the triangle mesh's vertices.\n     * @param indices - The indices of the triangle mesh's triangles.\n     */\n    public static trimesh(\n        vertices: Float32Array,\n        indices: Uint32Array,\n    ): ColliderDesc {\n        const shape = new TriMesh(vertices, indices);\n        return new ColliderDesc(shape);\n    }\n\n\n    // #if DIM3\n    /**\n     * Creates a new collider descriptor with a cuboid shape.\n     *\n     * @param hx - The half-width of the rectangle along its local `x` axis.\n     * @param hy - The half-width of the rectangle along its local `y` axis.\n     * @param hz - The half-width of the rectangle along its local `z` axis.\n     */\n    public static cuboid(hx: number, hy: number, hz: number): ColliderDesc {\n        const shape = new Cuboid(hx, hy, hz);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new collider descriptor with a rectangular shape with round borders.\n     *\n     * @param hx - The half-width of the rectangle along its local `x` axis.\n     * @param hy - The half-width of the rectangle along its local `y` axis.\n     * @param hz - The half-width of the rectangle along its local `z` axis.\n     * @param borderRadius - The radius of the cuboid's borders.\n     */\n    public static roundCuboid(\n        hx: number,\n        hy: number,\n        hz: number,\n        borderRadius: number,\n    ): ColliderDesc {\n        const shape = new RoundCuboid(hx, hy, hz, borderRadius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new collider descriptor with a heightfield shape.\n     *\n     * @param nrows − The number of rows in the heights matrix.\n     * @param ncols - The number of columns in the heights matrix.\n     * @param heights - The heights of the heightfield along its local `y` axis,\n     *                  provided as a matrix stored in column-major order.\n     * @param scale - The scale factor applied to the heightfield.\n     */\n    public static heightfield(\n        nrows: number,\n        ncols: number,\n        heights: Float32Array,\n        scale: Vector,\n    ): ColliderDesc {\n        const shape = new Heightfield(nrows, ncols, heights, scale);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Create a new collider descriptor with a cylinder shape.\n     *\n     * @param halfHeight - The half-height of the cylinder, along the `y` axis.\n     * @param radius - The radius of the cylinder basis.\n     */\n    public static cylinder(halfHeight: number, radius: number): ColliderDesc {\n        const shape = new Cylinder(halfHeight, radius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Create a new collider descriptor with a cylinder shape with rounded corners.\n     *\n     * @param halfHeight - The half-height of the cylinder, along the `y` axis.\n     * @param radius - The radius of the cylinder basis.\n     * @param borderRadius - The radius of the cylinder's rounded edges and vertices.\n     */\n    public static roundCylinder(\n        halfHeight: number,\n        radius: number,\n        borderRadius: number,\n    ): ColliderDesc {\n        const shape = new RoundCylinder(halfHeight, radius, borderRadius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Create a new collider descriptor with a cone shape.\n     *\n     * @param halfHeight - The half-height of the cone, along the `y` axis.\n     * @param radius - The radius of the cone basis.\n     */\n    public static cone(halfHeight: number, radius: number): ColliderDesc {\n        const shape = new Cone(halfHeight, radius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Create a new collider descriptor with a cone shape with rounded corners.\n     *\n     * @param halfHeight - The half-height of the cone, along the `y` axis.\n     * @param radius - The radius of the cone basis.\n     * @param borderRadius - The radius of the cone's rounded edges and vertices.\n     */\n    public static roundCone(\n        halfHeight: number,\n        radius: number,\n        borderRadius: number,\n    ): ColliderDesc {\n        const shape = new RoundCone(halfHeight, radius, borderRadius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Computes the convex-hull of the given points and use the resulting\n     * convex polyhedron as the shape for this new collider descriptor.\n     *\n     * @param points - The point that will be used to compute the convex-hull.\n     */\n    public static convexHull(points: Float32Array): ColliderDesc | null {\n        const shape = new ConvexPolyhedron(points, null);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new collider descriptor that uses the given set of points assumed\n     * to form a convex polyline (no convex-hull computation will be done).\n     *\n     * @param vertices - The vertices of the convex polyline.\n     */\n    public static convexMesh(\n        vertices: Float32Array,\n        indices?: Uint32Array | null,\n    ): ColliderDesc | null {\n        const shape = new ConvexPolyhedron(vertices, indices);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Computes the convex-hull of the given points and use the resulting\n     * convex polyhedron as the shape for this new collider descriptor. A\n     * border is added to that convex polyhedron to give it round corners.\n     *\n     * @param points - The point that will be used to compute the convex-hull.\n     * @param borderRadius - The radius of the round border added to the convex polyhedron.\n     */\n    public static roundConvexHull(\n        points: Float32Array,\n        borderRadius: number,\n    ): ColliderDesc | null {\n        const shape = new RoundConvexPolyhedron(points, null, borderRadius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new collider descriptor that uses the given set of points assumed\n     * to form a round convex polyline (no convex-hull computation will be done).\n     *\n     * @param vertices - The vertices of the convex polyline.\n     * @param borderRadius - The radius of the round border added to the convex polyline.\n     */\n    public static roundConvexMesh(\n        vertices: Float32Array,\n        indices: Uint32Array | null,\n        borderRadius: number,\n    ): ColliderDesc | null {\n        const shape = new RoundConvexPolyhedron(\n            vertices,\n            indices,\n            borderRadius,\n        );\n        return new ColliderDesc(shape);\n    }\n\n    // #endif\n\n\n    // #if DIM3\n    /**\n     * Sets the position of the collider to be created relative to the rigid-body it is attached to.\n     */\n    public setTranslation(x: number, y: number, z: number): ColliderDesc {\n        if (\n            typeof x != \"number\" ||\n            typeof y != \"number\" ||\n            typeof z != \"number\"\n        )\n            throw TypeError(\"The translation components must be numbers.\");\n\n        this.translation = {x: x, y: y, z: z};\n        return this;\n    }\n\n    // #endif\n\n    /**\n     * Sets the rotation of the collider to be created relative to the rigid-body it is attached to.\n     *\n     * @param rot - The rotation of the collider to be created relative to the rigid-body it is attached to.\n     */\n    public setRotation(rot: Rotation): ColliderDesc {\n        // #if DIM3\n        RotationOps.copy(this.rotation, rot);\n        // #endif\n        return this;\n    }\n\n    /**\n     * Sets whether or not the collider being created is a sensor.\n     *\n     * A sensor collider does not take part of the physics simulation, but generates\n     * proximity events.\n     *\n     * @param sensor - Set to `true` of the collider built is to be a sensor.\n     */\n    public setSensor(sensor: boolean): ColliderDesc {\n        this.isSensor = sensor;\n        return this;\n    }\n\n    /**\n     * Sets whether the created collider will be enabled or disabled.\n     * @param enabled − If set to `false` the collider will be disabled at creation.\n     */\n    public setEnabled(enabled: boolean): ColliderDesc {\n        this.enabled = enabled;\n        return this;\n    }\n\n    /**\n     * Sets the density of the collider being built.\n     *\n     * The mass and angular inertia tensor will be computed automatically based on this density and the collider’s shape.\n     *\n     * @param density - The density to set, must be greater or equal to 0. A density of 0 means that this collider\n     *                  will not affect the mass or angular inertia of the rigid-body it is attached to.\n     */\n    public setDensity(density: number): ColliderDesc {\n        this.massPropsMode = MassPropsMode.Density;\n        this.density = density;\n        return this;\n    }\n\n    /**\n     * Sets the mass of the collider being built.\n     *\n     * The angular inertia tensor will be computed automatically based on this mass and the collider’s shape.\n     *\n     * @param mass - The mass to set, must be greater or equal to 0.\n     */\n    public setMass(mass: number): ColliderDesc {\n        this.massPropsMode = MassPropsMode.Mass;\n        this.mass = mass;\n        return this;\n    }\n\n\n    // #if DIM3\n    /**\n     * Sets the mass properties of the collider being built.\n     *\n     * This replaces the mass-properties automatically computed from the collider's density and shape.\n     * These mass-properties will be added to the mass-properties of the rigid-body this collider will be attached to.\n     *\n     * @param mass − The mass of the collider to create.\n     * @param centerOfMass − The center-of-mass of the collider to create.\n     * @param principalAngularInertia − The initial principal angular inertia of the collider to create.\n     *                                  These are the eigenvalues of the angular inertia matrix.\n     * @param angularInertiaLocalFrame − The initial local angular inertia frame of the collider to create.\n     *                                   These are the eigenvectors of the angular inertia matrix.\n     */\n    public setMassProperties(\n        mass: number,\n        centerOfMass: Vector,\n        principalAngularInertia: Vector,\n        angularInertiaLocalFrame: Rotation,\n    ): ColliderDesc {\n        this.massPropsMode = MassPropsMode.MassProps;\n        this.mass = mass;\n        VectorOps.copy(this.centerOfMass, centerOfMass);\n        VectorOps.copy(this.principalAngularInertia, principalAngularInertia);\n        RotationOps.copy(\n            this.angularInertiaLocalFrame,\n            angularInertiaLocalFrame,\n        );\n        return this;\n    }\n    // #endif\n\n    /**\n     * Sets the restitution coefficient of the collider to be created.\n     *\n     * @param restitution - The restitution coefficient in `[0, 1]`. A value of 0 (the default) means no bouncing behavior\n     *                   while 1 means perfect bouncing (though energy may still be lost due to numerical errors of the\n     *                   constraints solver).\n     */\n    public setRestitution(restitution: number): ColliderDesc {\n        this.restitution = restitution;\n        return this;\n    }\n\n    /**\n     * Sets the friction coefficient of the collider to be created.\n     *\n     * @param friction - The friction coefficient. Must be greater or equal to 0. This is generally smaller than 1. The\n     *                   higher the coefficient, the stronger friction forces will be for contacts with the collider\n     *                   being built.\n     */\n    public setFriction(friction: number): ColliderDesc {\n        this.friction = friction;\n        return this;\n    }\n\n    /**\n     * Sets the rule used to combine the friction coefficients of two colliders\n     * colliders involved in a contact.\n     *\n     * @param rule − The combine rule to apply.\n     */\n    public setFrictionCombineRule(rule: CoefficientCombineRule): ColliderDesc {\n        this.frictionCombineRule = rule;\n        return this;\n    }\n\n    /**\n     * Sets the rule used to combine the restitution coefficients of two colliders\n     * colliders involved in a contact.\n     *\n     * @param rule − The combine rule to apply.\n     */\n    public setRestitutionCombineRule(\n        rule: CoefficientCombineRule,\n    ): ColliderDesc {\n        this.restitutionCombineRule = rule;\n        return this;\n    }\n\n    /**\n     * Sets the collision groups used by this collider.\n     *\n     * Two colliders will interact iff. their collision groups are compatible.\n     * See the documentation of `InteractionGroups` for details on teh used bit pattern.\n     *\n     * @param groups - The collision groups used for the collider being built.\n     */\n    public setCollisionGroups(groups: InteractionGroups): ColliderDesc {\n        this.collisionGroups = groups;\n        return this;\n    }\n\n    /**\n     * Sets the solver groups used by this collider.\n     *\n     * Forces between two colliders in contact will be computed iff their solver\n     * groups are compatible.\n     * See the documentation of `InteractionGroups` for details on the used bit pattern.\n     *\n     * @param groups - The solver groups used for the collider being built.\n     */\n    public setSolverGroups(groups: InteractionGroups): ColliderDesc {\n        this.solverGroups = groups;\n        return this;\n    }\n\n    /**\n     * Set the physics hooks active for this collider.\n     *\n     * Use this to enable custom filtering rules for contact/intersecstion pairs involving this collider.\n     *\n     * @param activeHooks - The hooks active for contact/intersection pairs involving this collider.\n     */\n    public setActiveHooks(activeHooks: ActiveHooks): ColliderDesc {\n        this.activeHooks = activeHooks;\n        return this;\n    }\n\n    /**\n     * Set the events active for this collider.\n     *\n     * Use this to enable contact and/or intersection event reporting for this collider.\n     *\n     * @param activeEvents - The events active for contact/intersection pairs involving this collider.\n     */\n    public setActiveEvents(activeEvents: ActiveEvents): ColliderDesc {\n        this.activeEvents = activeEvents;\n        return this;\n    }\n\n    /**\n     * Set the collision types active for this collider.\n     *\n     * @param activeCollisionTypes - The hooks active for contact/intersection pairs involving this collider.\n     */\n    public setActiveCollisionTypes(\n        activeCollisionTypes: ActiveCollisionTypes,\n    ): ColliderDesc {\n        this.activeCollisionTypes = activeCollisionTypes;\n        return this;\n    }\n\n    /**\n     * Sets the total force magnitude beyond which a contact force event can be emitted.\n     *\n     * @param threshold - The force threshold to set.\n     */\n    public setContactForceEventThreshold(threshold: number): ColliderDesc {\n        this.contactForceEventThreshold = threshold;\n        return this;\n    }\n}\n","export class Coarena<T> {\n    fconv: Float64Array;\n    uconv: Uint32Array;\n    data: Array<T>;\n    size: number;\n\n    public constructor() {\n        this.fconv = new Float64Array(1);\n        this.uconv = new Uint32Array(this.fconv.buffer);\n        this.data = new Array<T>();\n        this.size = 0;\n    }\n\n    public set(handle: number, data: T) {\n        let i = this.index(handle);\n        while (this.data.length <= i) {\n            this.data.push(null);\n        }\n\n        if (this.data[i] == null) this.size += 1;\n        this.data[i] = data;\n    }\n\n    public len(): number {\n        return this.size;\n    }\n\n    public delete(handle: number) {\n        let i = this.index(handle);\n        if (i < this.data.length) {\n            if (this.data[i] != null) this.size -= 1;\n            this.data[i] = null;\n        }\n    }\n\n    public clear() {\n        this.data = new Array<T>();\n    }\n\n    public get(handle: number): T | null {\n        let i = this.index(handle);\n        if (i < this.data.length) {\n            return this.data[i];\n        } else {\n            return null;\n        }\n    }\n\n    public forEach(f: (elt: T) => void) {\n        for (const elt of this.data) {\n            if (elt != null) f(elt);\n        }\n    }\n\n    public getAll(): Array<T> {\n        return this.data.filter((elt) => elt != null);\n    }\n\n    private index(handle: number): number {\n        /// Extracts the index part of a handle (the lower 32 bits).\n        /// This is done by first injecting the handle into an Float64Array\n        /// which is itself injected into an Uint32Array (at construction time).\n        /// The 0-th value of the Uint32Array will become the `number` integer\n        /// representation of the lower 32 bits.\n        /// Also `this.uconv[1]` then contains the generation number as a `number`,\n        /// which we don’t really need.\n        this.fconv[0] = handle;\n        return this.uconv[0];\n    }\n}\n","import {RawRigidBodySet, RawRigidBodyType} from \"../raw\";\nimport {Coarena} from \"../coarena\";\nimport {VectorOps, RotationOps} from \"../math\";\nimport {\n    RigidBody,\n    RigidBodyDesc,\n    RigidBodyHandle,\n    RigidBodyType,\n} from \"./rigid_body\";\nimport {ColliderSet} from \"../geometry\";\nimport {ImpulseJointSet} from \"./impulse_joint_set\";\nimport {MultibodyJointSet} from \"./multibody_joint_set\";\nimport {IslandManager} from \"./island_manager\";\n\n/**\n * A set of rigid bodies that can be handled by a physics pipeline.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `rigidBodySet.free()`\n * once you are done using it (and all the rigid-bodies it created).\n */\nexport class RigidBodySet {\n    raw: RawRigidBodySet;\n    private map: Coarena<RigidBody>;\n\n    /**\n     * Release the WASM memory occupied by this rigid-body set.\n     */\n    public free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n        this.raw = undefined;\n\n        if (!!this.map) {\n            this.map.clear();\n        }\n        this.map = undefined;\n    }\n\n    constructor(raw?: RawRigidBodySet) {\n        this.raw = raw || new RawRigidBodySet();\n        this.map = new Coarena<RigidBody>();\n        // deserialize\n        if (raw) {\n            raw.forEachRigidBodyHandle((handle: RigidBodyHandle) => {\n                this.map.set(handle, new RigidBody(raw, null, handle));\n            });\n        }\n    }\n\n    /**\n     * Internal method, do not call this explicitly.\n     */\n    public finalizeDeserialization(colliderSet: ColliderSet) {\n        this.map.forEach((rb) => rb.finalizeDeserialization(colliderSet));\n    }\n\n    /**\n     * Creates a new rigid-body and return its integer handle.\n     *\n     * @param desc - The description of the rigid-body to create.\n     */\n    public createRigidBody(\n        colliderSet: ColliderSet,\n        desc: RigidBodyDesc,\n    ): RigidBody {\n        let rawTra = VectorOps.intoRaw(desc.translation);\n        let rawRot = RotationOps.intoRaw(desc.rotation);\n        let rawLv = VectorOps.intoRaw(desc.linvel);\n        let rawCom = VectorOps.intoRaw(desc.centerOfMass);\n\n        // #if DIM3\n        let rawAv = VectorOps.intoRaw(desc.angvel);\n        let rawPrincipalInertia = VectorOps.intoRaw(\n            desc.principalAngularInertia,\n        );\n        let rawInertiaFrame = RotationOps.intoRaw(\n            desc.angularInertiaLocalFrame,\n        );\n        // #endif\n\n        let handle = this.raw.createRigidBody(\n            desc.enabled,\n            rawTra,\n            rawRot,\n            desc.gravityScale,\n            desc.mass,\n            desc.massOnly,\n            rawCom,\n            rawLv,\n            // #if DIM3\n            rawAv,\n            rawPrincipalInertia,\n            rawInertiaFrame,\n            desc.translationsEnabledX,\n            desc.translationsEnabledY,\n            desc.translationsEnabledZ,\n            desc.rotationsEnabledX,\n            desc.rotationsEnabledY,\n            desc.rotationsEnabledZ,\n            // #endif\n            desc.linearDamping,\n            desc.angularDamping,\n            desc.status as number as RawRigidBodyType,\n            desc.canSleep,\n            desc.sleeping,\n            desc.ccdEnabled,\n            desc.dominanceGroup,\n            desc.additionalSolverIterations,\n        );\n\n        rawTra.free();\n        rawRot.free();\n        rawLv.free();\n        rawCom.free();\n\n        // #if DIM3\n        rawAv.free();\n        rawPrincipalInertia.free();\n        rawInertiaFrame.free();\n        // #endif\n\n        const body = new RigidBody(this.raw, colliderSet, handle);\n        body.userData = desc.userData;\n\n        this.map.set(handle, body);\n\n        return body;\n    }\n\n    /**\n     * Removes a rigid-body from this set.\n     *\n     * This will also remove all the colliders and joints attached to the rigid-body.\n     *\n     * @param handle - The integer handle of the rigid-body to remove.\n     * @param colliders - The set of colliders that may contain colliders attached to the removed rigid-body.\n     * @param impulseJoints - The set of impulse joints that may contain joints attached to the removed rigid-body.\n     * @param multibodyJoints - The set of multibody joints that may contain joints attached to the removed rigid-body.\n     */\n    public remove(\n        handle: RigidBodyHandle,\n        islands: IslandManager,\n        colliders: ColliderSet,\n        impulseJoints: ImpulseJointSet,\n        multibodyJoints: MultibodyJointSet,\n    ) {\n        // Unmap the entities that will be removed automatically because of the rigid-body removals.\n        for (let i = 0; i < this.raw.rbNumColliders(handle); i += 1) {\n            colliders.unmap(this.raw.rbCollider(handle, i));\n        }\n\n        impulseJoints.forEachJointHandleAttachedToRigidBody(handle, (handle) =>\n            impulseJoints.unmap(handle),\n        );\n        multibodyJoints.forEachJointHandleAttachedToRigidBody(\n            handle,\n            (handle) => multibodyJoints.unmap(handle),\n        );\n\n        // Remove the rigid-body.\n        this.raw.remove(\n            handle,\n            islands.raw,\n            colliders.raw,\n            impulseJoints.raw,\n            multibodyJoints.raw,\n        );\n        this.map.delete(handle);\n    }\n\n    /**\n     * The number of rigid-bodies on this set.\n     */\n    public len(): number {\n        return this.map.len();\n    }\n\n    /**\n     * Does this set contain a rigid-body with the given handle?\n     *\n     * @param handle - The rigid-body handle to check.\n     */\n    public contains(handle: RigidBodyHandle): boolean {\n        return this.get(handle) != null;\n    }\n\n    /**\n     * Gets the rigid-body with the given handle.\n     *\n     * @param handle - The handle of the rigid-body to retrieve.\n     */\n    public get(handle: RigidBodyHandle): RigidBody | null {\n        return this.map.get(handle);\n    }\n\n    /**\n     * Applies the given closure to each rigid-body contained by this set.\n     *\n     * @param f - The closure to apply.\n     */\n    public forEach(f: (body: RigidBody) => void) {\n        this.map.forEach(f);\n    }\n\n    /**\n     * Applies the given closure to each active rigid-bodies contained by this set.\n     *\n     * A rigid-body is active if it is not sleeping, i.e., if it moved recently.\n     *\n     * @param f - The closure to apply.\n     */\n    public forEachActiveRigidBody(\n        islands: IslandManager,\n        f: (body: RigidBody) => void,\n    ) {\n        islands.forEachActiveRigidBodyHandle((handle) => {\n            f(this.get(handle));\n        });\n    }\n\n    /**\n     * Gets all rigid-bodies in the list.\n     *\n     * @returns rigid-bodies list.\n     */\n    public getAll(): RigidBody[] {\n        return this.map.getAll();\n    }\n}\n","import {RawIntegrationParameters} from \"../raw\";\n\nexport class IntegrationParameters {\n    raw: RawIntegrationParameters;\n\n    constructor(raw?: RawIntegrationParameters) {\n        this.raw = raw || new RawIntegrationParameters();\n    }\n\n    /**\n     * Free the WASM memory used by these integration parameters.\n     */\n    public free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n        this.raw = undefined;\n    }\n\n    /**\n     * The timestep length (default: `1.0 / 60.0`)\n     */\n    get dt(): number {\n        return this.raw.dt;\n    }\n\n    /**\n     * The Error Reduction Parameter in `[0, 1]` is the proportion of\n     * the positional error to be corrected at each time step (default: `0.2`).\n     */\n    get erp(): number {\n        return this.raw.erp;\n    }\n\n    /**\n     * Amount of penetration the engine wont attempt to correct (default: `0.001m`).\n     */\n    get allowedLinearError(): number {\n        return this.raw.allowedLinearError;\n    }\n\n    /**\n     * The maximal distance separating two objects that will generate predictive contacts (default: `0.002`).\n     */\n    get predictionDistance(): number {\n        return this.raw.predictionDistance;\n    }\n\n    /**\n     * The number of solver iterations run by the constraints solver for calculating forces (default: `4`).\n     */\n    get numSolverIterations(): number {\n        return this.raw.numSolverIterations;\n    }\n\n    /**\n     * Number of addition friction resolution iteration run during the last solver sub-step (default: `4`).\n     */\n    get numAdditionalFrictionIterations(): number {\n        return this.raw.numAdditionalFrictionIterations;\n    }\n\n    /**\n     * Number of internal Project Gauss Seidel (PGS) iterations run at each solver iteration (default: `1`).\n     */\n    get numInternalPgsIterations(): number {\n        return this.raw.numInternalPgsIterations;\n    }\n\n    /**\n     * Minimum number of dynamic bodies in each active island (default: `128`).\n     */\n    get minIslandSize(): number {\n        return this.raw.minIslandSize;\n    }\n\n    /**\n     * Maximum number of substeps performed by the  solver (default: `1`).\n     */\n    get maxCcdSubsteps(): number {\n        return this.raw.maxCcdSubsteps;\n    }\n\n    set dt(value: number) {\n        this.raw.dt = value;\n    }\n\n    set erp(value: number) {\n        this.raw.erp = value;\n    }\n\n    set allowedLinearError(value: number) {\n        this.raw.allowedLinearError = value;\n    }\n\n    set predictionDistance(value: number) {\n        this.raw.predictionDistance = value;\n    }\n\n    /**\n     * Sets the number of solver iterations run by the constraints solver for calculating forces (default: `4`).\n     */\n    set numSolverIterations(value: number) {\n        this.raw.numSolverIterations = value;\n    }\n    /**\n     * Sets the number of addition friction resolution iteration run during the last solver sub-step (default: `4`).\n     */\n    set numAdditionalFrictionIterations(value: number) {\n        this.raw.numAdditionalFrictionIterations = value;\n    }\n\n    /**\n     * Sets the number of internal Project Gauss Seidel (PGS) iterations run at each solver iteration (default: `1`).\n     */\n    set numInternalPgsIterations(value: number) {\n        this.raw.numInternalPgsIterations = value;\n    }\n\n    set minIslandSize(value: number) {\n        this.raw.minIslandSize = value;\n    }\n\n    set maxCcdSubsteps(value: number) {\n        this.raw.maxCcdSubsteps = value;\n    }\n\n    public switchToStandardPgsSolver() {\n        this.raw.switchToStandardPgsSolver();\n    }\n\n    public switchToSmallStepsPgsSolver() {\n        this.raw.switchToSmallStepsPgsSolver();\n    }\n}\n","import {RawImpulseJointSet} from \"../raw\";\nimport {Coarena} from \"../coarena\";\nimport {RigidBodySet} from \"./rigid_body_set\";\nimport {\n    RevoluteImpulseJoint,\n    FixedImpulseJoint,\n    ImpulseJoint,\n    ImpulseJointHandle,\n    JointData,\n    JointType,\n    PrismaticImpulseJoint,\n    // #if DIM3\n    SphericalImpulseJoint,\n    // #endif\n} from \"./impulse_joint\";\nimport {IslandManager} from \"./island_manager\";\nimport {RigidBodyHandle} from \"./rigid_body\";\nimport {Collider, ColliderHandle} from \"../geometry\";\n\n/**\n * A set of joints.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `jointSet.free()`\n * once you are done using it (and all the joints it created).\n */\nexport class ImpulseJointSet {\n    raw: RawImpulseJointSet;\n    private map: Coarena<ImpulseJoint>;\n\n    /**\n     * Release the WASM memory occupied by this joint set.\n     */\n    public free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n        this.raw = undefined;\n\n        if (!!this.map) {\n            this.map.clear();\n        }\n        this.map = undefined;\n    }\n\n    constructor(raw?: RawImpulseJointSet) {\n        this.raw = raw || new RawImpulseJointSet();\n        this.map = new Coarena<ImpulseJoint>();\n        // Initialize the map with the existing elements, if any.\n        if (raw) {\n            raw.forEachJointHandle((handle: ImpulseJointHandle) => {\n                this.map.set(handle, ImpulseJoint.newTyped(raw, null, handle));\n            });\n        }\n    }\n\n    /** @internal */\n    public finalizeDeserialization(bodies: RigidBodySet) {\n        this.map.forEach((joint) => joint.finalizeDeserialization(bodies));\n    }\n\n    /**\n     * Creates a new joint and return its integer handle.\n     *\n     * @param bodies - The set of rigid-bodies containing the bodies the joint is attached to.\n     * @param desc - The joint's parameters.\n     * @param parent1 - The handle of the first rigid-body this joint is attached to.\n     * @param parent2 - The handle of the second rigid-body this joint is attached to.\n     * @param wakeUp - Should the attached rigid-bodies be awakened?\n     */\n    public createJoint(\n        bodies: RigidBodySet,\n        desc: JointData,\n        parent1: RigidBodyHandle,\n        parent2: RigidBodyHandle,\n        wakeUp: boolean,\n    ): ImpulseJoint {\n        const rawParams = desc.intoRaw();\n        const handle = this.raw.createJoint(\n            rawParams,\n            parent1,\n            parent2,\n            wakeUp,\n        );\n        rawParams.free();\n        let joint = ImpulseJoint.newTyped(this.raw, bodies, handle);\n        this.map.set(handle, joint);\n        return joint;\n    }\n\n    /**\n     * Remove a joint from this set.\n     *\n     * @param handle - The integer handle of the joint.\n     * @param wakeUp - If `true`, the rigid-bodies attached by the removed joint will be woken-up automatically.\n     */\n    public remove(handle: ImpulseJointHandle, wakeUp: boolean) {\n        this.raw.remove(handle, wakeUp);\n        this.unmap(handle);\n    }\n\n    /**\n     * Calls the given closure with the integer handle of each impulse joint attached to this rigid-body.\n     *\n     * @param f - The closure called with the integer handle of each impulse joint attached to the rigid-body.\n     */\n    public forEachJointHandleAttachedToRigidBody(\n        handle: RigidBodyHandle,\n        f: (handle: ImpulseJointHandle) => void,\n    ) {\n        this.raw.forEachJointAttachedToRigidBody(handle, f);\n    }\n\n    /**\n     * Internal function, do not call directly.\n     * @param handle\n     */\n    public unmap(handle: ImpulseJointHandle) {\n        this.map.delete(handle);\n    }\n\n    /**\n     * The number of joints on this set.\n     */\n    public len(): number {\n        return this.map.len();\n    }\n\n    /**\n     * Does this set contain a joint with the given handle?\n     *\n     * @param handle - The joint handle to check.\n     */\n    public contains(handle: ImpulseJointHandle): boolean {\n        return this.get(handle) != null;\n    }\n\n    /**\n     * Gets the joint with the given handle.\n     *\n     * Returns `null` if no joint with the specified handle exists.\n     *\n     * @param handle - The integer handle of the joint to retrieve.\n     */\n    public get(handle: ImpulseJointHandle): ImpulseJoint | null {\n        return this.map.get(handle);\n    }\n\n    /**\n     * Applies the given closure to each joint contained by this set.\n     *\n     * @param f - The closure to apply.\n     */\n    public forEach(f: (joint: ImpulseJoint) => void) {\n        this.map.forEach(f);\n    }\n\n    /**\n     * Gets all joints in the list.\n     *\n     * @returns joint list.\n     */\n    public getAll(): ImpulseJoint[] {\n        return this.map.getAll();\n    }\n}\n","import {\n    RawImpulseJointSet,\n    RawJointAxis,\n    RawJointType,\n    RawMultibodyJointSet,\n} from \"../raw\";\nimport {\n    FixedImpulseJoint,\n    ImpulseJointHandle,\n    JointType,\n    MotorModel,\n    PrismaticImpulseJoint,\n    RevoluteImpulseJoint,\n} from \"./impulse_joint\";\n\n// #if DIM3\nimport {Quaternion} from \"../math\";\nimport {SphericalImpulseJoint} from \"./impulse_joint\";\n// #endif\n\n/**\n * The integer identifier of a collider added to a `ColliderSet`.\n */\nexport type MultibodyJointHandle = number;\n\nexport class MultibodyJoint {\n    protected rawSet: RawMultibodyJointSet; // The MultibodyJoint won't need to free this.\n    handle: MultibodyJointHandle;\n\n    constructor(rawSet: RawMultibodyJointSet, handle: MultibodyJointHandle) {\n        this.rawSet = rawSet;\n        this.handle = handle;\n    }\n\n    public static newTyped(\n        rawSet: RawMultibodyJointSet,\n        handle: MultibodyJointHandle,\n    ): MultibodyJoint {\n        switch (rawSet.jointType(handle)) {\n            case RawJointType.Revolute:\n                return new RevoluteMultibodyJoint(rawSet, handle);\n            case RawJointType.Prismatic:\n                return new PrismaticMultibodyJoint(rawSet, handle);\n            case RawJointType.Fixed:\n                return new FixedMultibodyJoint(rawSet, handle);\n            // #if DIM3\n            case RawJointType.Spherical:\n                return new SphericalMultibodyJoint(rawSet, handle);\n            // #endif\n            default:\n                return new MultibodyJoint(rawSet, handle);\n        }\n    }\n\n    /**\n     * Checks if this joint is still valid (i.e. that it has\n     * not been deleted from the joint set yet).\n     */\n    public isValid(): boolean {\n        return this.rawSet.contains(this.handle);\n    }\n\n    // /**\n    //  * The unique integer identifier of the first rigid-body this joint it attached to.\n    //  */\n    // public bodyHandle1(): RigidBodyHandle {\n    //     return this.rawSet.jointBodyHandle1(this.handle);\n    // }\n    //\n    // /**\n    //  * The unique integer identifier of the second rigid-body this joint is attached to.\n    //  */\n    // public bodyHandle2(): RigidBodyHandle {\n    //     return this.rawSet.jointBodyHandle2(this.handle);\n    // }\n    //\n    // /**\n    //  * The type of this joint given as a string.\n    //  */\n    // public type(): JointType {\n    //     return this.rawSet.jointType(this.handle);\n    // }\n    //\n    // // #if DIM3\n    // /**\n    //  * The rotation quaternion that aligns this joint's first local axis to the `x` axis.\n    //  */\n    // public frameX1(): Rotation {\n    //     return RotationOps.fromRaw(this.rawSet.jointFrameX1(this.handle));\n    // }\n    //\n    // // #endif\n    //\n    // // #if DIM3\n    // /**\n    //  * The rotation matrix that aligns this joint's second local axis to the `x` axis.\n    //  */\n    // public frameX2(): Rotation {\n    //     return RotationOps.fromRaw(this.rawSet.jointFrameX2(this.handle));\n    // }\n    //\n    // // #endif\n    //\n    // /**\n    //  * The position of the first anchor of this joint.\n    //  *\n    //  * The first anchor gives the position of the points application point on the\n    //  * local frame of the first rigid-body it is attached to.\n    //  */\n    // public anchor1(): Vector {\n    //     return VectorOps.fromRaw(this.rawSet.jointAnchor1(this.handle));\n    // }\n    //\n    // /**\n    //  * The position of the second anchor of this joint.\n    //  *\n    //  * The second anchor gives the position of the points application point on the\n    //  * local frame of the second rigid-body it is attached to.\n    //  */\n    // public anchor2(): Vector {\n    //     return VectorOps.fromRaw(this.rawSet.jointAnchor2(this.handle));\n    // }\n\n    /**\n     * Controls whether contacts are computed between colliders attached\n     * to the rigid-bodies linked by this joint.\n     */\n    public setContactsEnabled(enabled: boolean) {\n        this.rawSet.jointSetContactsEnabled(this.handle, enabled);\n    }\n\n    /**\n     * Indicates if contacts are enabled between colliders attached\n     * to the rigid-bodies linked by this joint.\n     */\n    public contactsEnabled(): boolean {\n        return this.rawSet.jointContactsEnabled(this.handle);\n    }\n}\n\nexport class UnitMultibodyJoint extends MultibodyJoint {\n    /**\n     * The axis left free by this joint.\n     */\n    protected rawAxis?(): RawJointAxis;\n\n    // /**\n    //  * Are the limits enabled for this joint?\n    //  */\n    // public limitsEnabled(): boolean {\n    //     return this.rawSet.jointLimitsEnabled(this.handle, this.rawAxis());\n    // }\n    //\n    // /**\n    //  * The min limit of this joint.\n    //  */\n    // public limitsMin(): number {\n    //     return this.rawSet.jointLimitsMin(this.handle, this.rawAxis());\n    // }\n    //\n    // /**\n    //  * The max limit of this joint.\n    //  */\n    // public limitsMax(): number {\n    //     return this.rawSet.jointLimitsMax(this.handle, this.rawAxis());\n    // }\n    //\n    // public configureMotorModel(model: MotorModel) {\n    //     this.rawSet.jointConfigureMotorModel(this.handle, this.rawAxis(), model);\n    // }\n    //\n    // public configureMotorVelocity(targetVel: number, factor: number) {\n    //     this.rawSet.jointConfigureMotorVelocity(this.handle, this.rawAxis(), targetVel, factor);\n    // }\n    //\n    // public configureMotorPosition(targetPos: number, stiffness: number, damping: number) {\n    //     this.rawSet.jointConfigureMotorPosition(this.handle, this.rawAxis(), targetPos, stiffness, damping);\n    // }\n    //\n    // public configureMotor(targetPos: number, targetVel: number, stiffness: number, damping: number) {\n    //     this.rawSet.jointConfigureMotor(this.handle, this.rawAxis(), targetPos, targetVel, stiffness, damping);\n    // }\n}\n\nexport class FixedMultibodyJoint extends MultibodyJoint {}\n\nexport class PrismaticMultibodyJoint extends UnitMultibodyJoint {\n    public rawAxis(): RawJointAxis {\n        return RawJointAxis.X;\n    }\n}\n\nexport class RevoluteMultibodyJoint extends UnitMultibodyJoint {\n    public rawAxis(): RawJointAxis {\n        return RawJointAxis.AngX;\n    }\n}\n\n// #if DIM3\nexport class SphericalMultibodyJoint extends MultibodyJoint {\n    /* Unsupported by this alpha release.\n    public configureMotorModel(model: MotorModel) {\n        this.rawSet.jointConfigureMotorModel(this.handle, model);\n    }\n\n    public configureMotorVelocity(targetVel: Vector, factor: number) {\n        this.rawSet.jointConfigureBallMotorVelocity(this.handle, targetVel.x, targetVel.y, targetVel.z, factor);\n    }\n\n    public configureMotorPosition(targetPos: Quaternion, stiffness: number, damping: number) {\n        this.rawSet.jointConfigureBallMotorPosition(this.handle, targetPos.w, targetPos.x, targetPos.y, targetPos.z, stiffness, damping);\n    }\n\n    public configureMotor(targetPos: Quaternion, targetVel: Vector, stiffness: number, damping: number) {\n        this.rawSet.jointConfigureBallMotor(this.handle,\n            targetPos.w, targetPos.x, targetPos.y, targetPos.z,\n            targetVel.x, targetVel.y, targetVel.z,\n            stiffness, damping);\n    }\n     */\n}\n// #endif\n","import {RawMultibodyJointSet} from \"../raw\";\nimport {Coarena} from \"../coarena\";\nimport {RigidBodySet} from \"./rigid_body_set\";\nimport {\n    MultibodyJoint,\n    MultibodyJointHandle,\n    RevoluteMultibodyJoint,\n    FixedMultibodyJoint,\n    PrismaticMultibodyJoint,\n    // #if DIM3\n    SphericalMultibodyJoint,\n    // #endif\n} from \"./multibody_joint\";\nimport {ImpulseJointHandle, JointData, JointType} from \"./impulse_joint\";\nimport {IslandManager} from \"./island_manager\";\nimport {ColliderHandle} from \"../geometry\";\nimport {RigidBodyHandle} from \"./rigid_body\";\n\n/**\n * A set of joints.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `jointSet.free()`\n * once you are done using it (and all the joints it created).\n */\nexport class MultibodyJointSet {\n    raw: RawMultibodyJointSet;\n    private map: Coarena<MultibodyJoint>;\n\n    /**\n     * Release the WASM memory occupied by this joint set.\n     */\n    public free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n        this.raw = undefined;\n\n        if (!!this.map) {\n            this.map.clear();\n        }\n        this.map = undefined;\n    }\n\n    constructor(raw?: RawMultibodyJointSet) {\n        this.raw = raw || new RawMultibodyJointSet();\n        this.map = new Coarena<MultibodyJoint>();\n        // Initialize the map with the existing elements, if any.\n        if (raw) {\n            raw.forEachJointHandle((handle: MultibodyJointHandle) => {\n                this.map.set(handle, MultibodyJoint.newTyped(this.raw, handle));\n            });\n        }\n    }\n\n    /**\n     * Creates a new joint and return its integer handle.\n     *\n     * @param desc - The joint's parameters.\n     * @param parent1 - The handle of the first rigid-body this joint is attached to.\n     * @param parent2 - The handle of the second rigid-body this joint is attached to.\n     * @param wakeUp - Should the attached rigid-bodies be awakened?\n     */\n    public createJoint(\n        desc: JointData,\n        parent1: RigidBodyHandle,\n        parent2: RigidBodyHandle,\n        wakeUp: boolean,\n    ): MultibodyJoint {\n        const rawParams = desc.intoRaw();\n        const handle = this.raw.createJoint(\n            rawParams,\n            parent1,\n            parent2,\n            wakeUp,\n        );\n        rawParams.free();\n        let joint = MultibodyJoint.newTyped(this.raw, handle);\n        this.map.set(handle, joint);\n        return joint;\n    }\n\n    /**\n     * Remove a joint from this set.\n     *\n     * @param handle - The integer handle of the joint.\n     * @param wake_up - If `true`, the rigid-bodies attached by the removed joint will be woken-up automatically.\n     */\n    public remove(handle: MultibodyJointHandle, wake_up: boolean) {\n        this.raw.remove(handle, wake_up);\n        this.map.delete(handle);\n    }\n\n    /**\n     * Internal function, do not call directly.\n     * @param handle\n     */\n    public unmap(handle: MultibodyJointHandle) {\n        this.map.delete(handle);\n    }\n\n    /**\n     * The number of joints on this set.\n     */\n    public len(): number {\n        return this.map.len();\n    }\n\n    /**\n     * Does this set contain a joint with the given handle?\n     *\n     * @param handle - The joint handle to check.\n     */\n    public contains(handle: MultibodyJointHandle): boolean {\n        return this.get(handle) != null;\n    }\n\n    /**\n     * Gets the joint with the given handle.\n     *\n     * Returns `null` if no joint with the specified handle exists.\n     *\n     * @param handle - The integer handle of the joint to retrieve.\n     */\n    public get(handle: MultibodyJointHandle): MultibodyJoint | null {\n        return this.map.get(handle);\n    }\n\n    /**\n     * Applies the given closure to each joint contained by this set.\n     *\n     * @param f - The closure to apply.\n     */\n    public forEach(f: (joint: MultibodyJoint) => void) {\n        this.map.forEach(f);\n    }\n\n    /**\n     * Calls the given closure with the integer handle of each multibody joint attached to this rigid-body.\n     *\n     * @param f - The closure called with the integer handle of each multibody joint attached to the rigid-body.\n     */\n    public forEachJointHandleAttachedToRigidBody(\n        handle: RigidBodyHandle,\n        f: (handle: MultibodyJointHandle) => void,\n    ) {\n        this.raw.forEachJointAttachedToRigidBody(handle, f);\n    }\n\n    /**\n     * Gets all joints in the list.\n     *\n     * @returns joint list.\n     */\n    public getAll(): MultibodyJoint[] {\n        return this.map.getAll();\n    }\n}\n","import {RawCCDSolver} from \"../raw\";\n\n/**\n * The CCD solver responsible for resolving Continuous Collision Detection.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `ccdSolver.free()`\n * once you are done using it.\n */\nexport class CCDSolver {\n    raw: RawCCDSolver;\n\n    /**\n     * Release the WASM memory occupied by this narrow-phase.\n     */\n    public free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n        this.raw = undefined;\n    }\n\n    constructor(raw?: RawCCDSolver) {\n        this.raw = raw || new RawCCDSolver();\n    }\n}\n","import {RawIslandManager} from \"../raw\";\nimport {RigidBodyHandle} from \"./rigid_body\";\n\n/**\n * The CCD solver responsible for resolving Continuous Collision Detection.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `ccdSolver.free()`\n * once you are done using it.\n */\nexport class IslandManager {\n    raw: RawIslandManager;\n\n    /**\n     * Release the WASM memory occupied by this narrow-phase.\n     */\n    public free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n        this.raw = undefined;\n    }\n\n    constructor(raw?: RawIslandManager) {\n        this.raw = raw || new RawIslandManager();\n    }\n\n    /**\n     * Applies the given closure to the handle of each active rigid-bodies contained by this set.\n     *\n     * A rigid-body is active if it is not sleeping, i.e., if it moved recently.\n     *\n     * @param f - The closure to apply.\n     */\n    public forEachActiveRigidBodyHandle(f: (handle: RigidBodyHandle) => void) {\n        this.raw.forEachActiveRigidBodyHandle(f);\n    }\n}\n","import {RawBroadPhase} from \"../raw\";\n\n/**\n * The broad-phase used for coarse collision-detection.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `broadPhase.free()`\n * once you are done using it.\n */\nexport class BroadPhase {\n    raw: RawBroadPhase;\n\n    /**\n     * Release the WASM memory occupied by this broad-phase.\n     */\n    public free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n        this.raw = undefined;\n    }\n\n    constructor(raw?: RawBroadPhase) {\n        this.raw = raw || new RawBroadPhase();\n    }\n}\n","import {RawNarrowPhase, RawContactManifold} from \"../raw\";\nimport {ColliderHandle} from \"./collider\";\nimport {Vector, VectorOps} from \"../math\";\n\n/**\n * The narrow-phase used for precise collision-detection.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `narrowPhase.free()`\n * once you are done using it.\n */\nexport class NarrowPhase {\n    raw: RawNarrowPhase;\n    tempManifold: TempContactManifold;\n\n    /**\n     * Release the WASM memory occupied by this narrow-phase.\n     */\n    public free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n        this.raw = undefined;\n    }\n\n    constructor(raw?: RawNarrowPhase) {\n        this.raw = raw || new RawNarrowPhase();\n        this.tempManifold = new TempContactManifold(null);\n    }\n\n    /**\n     * Enumerates all the colliders potentially in contact with the given collider.\n     *\n     * @param collider1 - The second collider involved in the contact.\n     * @param f - Closure that will be called on each collider that is in contact with `collider1`.\n     */\n    public contactPairsWith(\n        collider1: ColliderHandle,\n        f: (collider2: ColliderHandle) => void,\n    ) {\n        this.raw.contact_pairs_with(collider1, f);\n    }\n\n    /**\n     * Enumerates all the colliders intersecting the given colliders, assuming one of them\n     * is a sensor.\n     */\n    public intersectionPairsWith(\n        collider1: ColliderHandle,\n        f: (collider2: ColliderHandle) => void,\n    ) {\n        this.raw.intersection_pairs_with(collider1, f);\n    }\n\n    /**\n     * Iterates through all the contact manifolds between the given pair of colliders.\n     *\n     * @param collider1 - The first collider involved in the contact.\n     * @param collider2 - The second collider involved in the contact.\n     * @param f - Closure that will be called on each contact manifold between the two colliders. If the second argument\n     *            passed to this closure is `true`, then the contact manifold data is flipped, i.e., methods like `localNormal1`\n     *            actually apply to the `collider2` and fields like `localNormal2` apply to the `collider1`.\n     */\n    public contactPair(\n        collider1: ColliderHandle,\n        collider2: ColliderHandle,\n        f: (manifold: TempContactManifold, flipped: boolean) => void,\n    ) {\n        const rawPair = this.raw.contact_pair(collider1, collider2);\n\n        if (!!rawPair) {\n            const flipped = rawPair.collider1() != collider1;\n\n            let i;\n            for (i = 0; i < rawPair.numContactManifolds(); ++i) {\n                this.tempManifold.raw = rawPair.contactManifold(i);\n                if (!!this.tempManifold.raw) {\n                    f(this.tempManifold, flipped);\n                }\n\n                // SAFETY: The RawContactManifold stores a raw pointer that will be invalidated\n                //         at the next timestep. So we must be sure to free the pair here\n                //         to avoid unsoundness in the Rust code.\n                this.tempManifold.free();\n            }\n            rawPair.free();\n        }\n    }\n\n    /**\n     * Returns `true` if `collider1` and `collider2` intersect and at least one of them is a sensor.\n     * @param collider1 − The first collider involved in the intersection.\n     * @param collider2 − The second collider involved in the intersection.\n     */\n    public intersectionPair(\n        collider1: ColliderHandle,\n        collider2: ColliderHandle,\n    ): boolean {\n        return this.raw.intersection_pair(collider1, collider2);\n    }\n}\n\nexport class TempContactManifold {\n    raw: RawContactManifold;\n\n    public free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n        this.raw = undefined;\n    }\n\n    constructor(raw: RawContactManifold) {\n        this.raw = raw;\n    }\n\n    public normal(): Vector {\n        return VectorOps.fromRaw(this.raw.normal());\n    }\n\n    public localNormal1(): Vector {\n        return VectorOps.fromRaw(this.raw.local_n1());\n    }\n\n    public localNormal2(): Vector {\n        return VectorOps.fromRaw(this.raw.local_n2());\n    }\n\n    public subshape1(): number {\n        return this.raw.subshape1();\n    }\n\n    public subshape2(): number {\n        return this.raw.subshape2();\n    }\n\n    public numContacts(): number {\n        return this.raw.num_contacts();\n    }\n\n    public localContactPoint1(i: number): Vector | null {\n        return VectorOps.fromRaw(this.raw.contact_local_p1(i));\n    }\n\n    public localContactPoint2(i: number): Vector | null {\n        return VectorOps.fromRaw(this.raw.contact_local_p2(i));\n    }\n\n    public contactDist(i: number): number {\n        return this.raw.contact_dist(i);\n    }\n\n    public contactFid1(i: number): number {\n        return this.raw.contact_fid1(i);\n    }\n\n    public contactFid2(i: number): number {\n        return this.raw.contact_fid2(i);\n    }\n\n    public contactImpulse(i: number): number {\n        return this.raw.contact_impulse(i);\n    }\n\n\n    // #if DIM3\n    public contactTangentImpulseX(i: number): number {\n        return this.raw.contact_tangent_impulse_x(i);\n    }\n\n    public contactTangentImpulseY(i: number): number {\n        return this.raw.contact_tangent_impulse_y(i);\n    }\n    // #endif\n\n    public numSolverContacts(): number {\n        return this.raw.num_solver_contacts();\n    }\n\n    public solverContactPoint(i: number): Vector {\n        return VectorOps.fromRaw(this.raw.solver_contact_point(i));\n    }\n\n    public solverContactDist(i: number): number {\n        return this.raw.solver_contact_dist(i);\n    }\n\n    public solverContactFriction(i: number): number {\n        return this.raw.solver_contact_friction(i);\n    }\n\n    public solverContactRestitution(i: number): number {\n        return this.raw.solver_contact_restitution(i);\n    }\n\n    public solverContactTangentVelocity(i: number): Vector {\n        return VectorOps.fromRaw(this.raw.solver_contact_tangent_velocity(i));\n    }\n}\n","import {Vector, VectorOps} from \"../math\";\nimport {RawShapeContact} from \"../raw\";\n\n/**\n * The contact info between two shapes.\n */\nexport class ShapeContact {\n    /**\n     * Distance between the two contact points.\n     * If this is negative, this contact represents a penetration.\n     */\n    distance: number;\n\n    /**\n     * Position of the contact on the first shape.\n     */\n    point1: Vector;\n\n    /**\n     * Position of the contact on the second shape.\n     */\n    point2: Vector;\n\n    /**\n     * Contact normal, pointing towards the exterior of the first shape.\n     */\n    normal1: Vector;\n\n    /**\n     * Contact normal, pointing towards the exterior of the second shape.\n     * If these contact data are expressed in world-space, this normal is equal to -normal1.\n     */\n    normal2: Vector;\n\n    constructor(\n        dist: number,\n        point1: Vector,\n        point2: Vector,\n        normal1: Vector,\n        normal2: Vector,\n    ) {\n        this.distance = dist;\n        this.point1 = point1;\n        this.point2 = point2;\n        this.normal1 = normal1;\n        this.normal2 = normal2;\n    }\n\n    public static fromRaw(raw: RawShapeContact): ShapeContact {\n        if (!raw) return null;\n\n        const result = new ShapeContact(\n            raw.distance(),\n            VectorOps.fromRaw(raw.point1()),\n            VectorOps.fromRaw(raw.point2()),\n            VectorOps.fromRaw(raw.normal1()),\n            VectorOps.fromRaw(raw.normal2()),\n        );\n        raw.free();\n        return result;\n    }\n}\n","import {Collider, ColliderHandle} from \"./collider\";\nimport {Vector, VectorOps} from \"../math\";\nimport {\n    RawFeatureType,\n    RawPointColliderProjection,\n    RawPointProjection,\n} from \"../raw\";\nimport {FeatureType} from \"./feature\";\nimport {ColliderSet} from \"./collider_set\";\n\n/**\n * The projection of a point on a collider.\n */\nexport class PointProjection {\n    /**\n     * The projection of the point on the collider.\n     */\n    point: Vector;\n    /**\n     * Is the point inside of the collider?\n     */\n    isInside: boolean;\n\n    constructor(point: Vector, isInside: boolean) {\n        this.point = point;\n        this.isInside = isInside;\n    }\n\n    public static fromRaw(raw: RawPointProjection): PointProjection {\n        if (!raw) return null;\n\n        const result = new PointProjection(\n            VectorOps.fromRaw(raw.point()),\n            raw.isInside(),\n        );\n        raw.free();\n        return result;\n    }\n}\n\n/**\n * The projection of a point on a collider (includes the collider handle).\n */\nexport class PointColliderProjection {\n    /**\n     * The collider hit by the ray.\n     */\n    collider: Collider;\n    /**\n     * The projection of the point on the collider.\n     */\n    point: Vector;\n    /**\n     * Is the point inside of the collider?\n     */\n    isInside: boolean;\n\n    /**\n     * The type of the geometric feature the point was projected on.\n     */\n    featureType = FeatureType.Unknown;\n\n    /**\n     * The id of the geometric feature the point was projected on.\n     */\n    featureId: number | undefined = undefined;\n\n    constructor(\n        collider: Collider,\n        point: Vector,\n        isInside: boolean,\n        featureType?: FeatureType,\n        featureId?: number,\n    ) {\n        this.collider = collider;\n        this.point = point;\n        this.isInside = isInside;\n        if (featureId !== undefined) this.featureId = featureId;\n        if (featureType !== undefined) this.featureType = featureType;\n    }\n\n    public static fromRaw(\n        colliderSet: ColliderSet,\n        raw: RawPointColliderProjection,\n    ): PointColliderProjection {\n        if (!raw) return null;\n\n        const result = new PointColliderProjection(\n            colliderSet.get(raw.colliderHandle()),\n            VectorOps.fromRaw(raw.point()),\n            raw.isInside(),\n            raw.featureType() as number as FeatureType,\n            raw.featureId(),\n        );\n        raw.free();\n        return result;\n    }\n}\n","import {Vector, VectorOps} from \"../math\";\nimport {\n    RawFeatureType,\n    RawRayColliderIntersection,\n    RawRayColliderToi,\n    RawRayIntersection,\n} from \"../raw\";\nimport {Collider} from \"./collider\";\nimport {FeatureType} from \"./feature\";\nimport {ColliderSet} from \"./collider_set\";\n\n/**\n * A ray. This is a directed half-line.\n */\nexport class Ray {\n    /**\n     * The starting point of the ray.\n     */\n    public origin: Vector;\n    /**\n     * The direction of propagation of the ray.\n     */\n    public dir: Vector;\n\n    /**\n     * Builds a ray from its origin and direction.\n     *\n     * @param origin - The ray's starting point.\n     * @param dir - The ray's direction of propagation.\n     */\n    constructor(origin: Vector, dir: Vector) {\n        this.origin = origin;\n        this.dir = dir;\n    }\n\n    public pointAt(t: number): Vector {\n        return {\n            x: this.origin.x + this.dir.x * t,\n            y: this.origin.y + this.dir.y * t,\n            // #if DIM3\n            z: this.origin.z + this.dir.z * t,\n            // #endif\n        };\n    }\n}\n\n/**\n * The intersection between a ray and a collider.\n */\nexport class RayIntersection {\n    /**\n     * The time-of-impact of the ray with the collider.\n     *\n     * The hit point is obtained from the ray's origin and direction: `origin + dir * toi`.\n     */\n    toi: number;\n    /**\n     * The normal of the collider at the hit point.\n     */\n    normal: Vector;\n\n    /**\n     * The type of the geometric feature the point was projected on.\n     */\n    featureType = FeatureType.Unknown;\n\n    /**\n     * The id of the geometric feature the point was projected on.\n     */\n    featureId: number | undefined = undefined;\n\n    constructor(\n        toi: number,\n        normal: Vector,\n        featureType?: FeatureType,\n        featureId?: number,\n    ) {\n        this.toi = toi;\n        this.normal = normal;\n        if (featureId !== undefined) this.featureId = featureId;\n        if (featureType !== undefined) this.featureType = featureType;\n    }\n\n    public static fromRaw(raw: RawRayIntersection): RayIntersection {\n        if (!raw) return null;\n\n        const result = new RayIntersection(\n            raw.toi(),\n            VectorOps.fromRaw(raw.normal()),\n            raw.featureType() as number as FeatureType,\n            raw.featureId(),\n        );\n        raw.free();\n        return result;\n    }\n}\n\n/**\n * The intersection between a ray and a collider (includes the collider handle).\n */\nexport class RayColliderIntersection {\n    /**\n     * The collider hit by the ray.\n     */\n    collider: Collider;\n    /**\n     * The time-of-impact of the ray with the collider.\n     *\n     * The hit point is obtained from the ray's origin and direction: `origin + dir * toi`.\n     */\n    toi: number;\n    /**\n     * The normal of the collider at the hit point.\n     */\n    normal: Vector;\n\n    /**\n     * The type of the geometric feature the point was projected on.\n     */\n    featureType = FeatureType.Unknown;\n\n    /**\n     * The id of the geometric feature the point was projected on.\n     */\n    featureId: number | undefined = undefined;\n\n    constructor(\n        collider: Collider,\n        toi: number,\n        normal: Vector,\n        featureType?: FeatureType,\n        featureId?: number,\n    ) {\n        this.collider = collider;\n        this.toi = toi;\n        this.normal = normal;\n        if (featureId !== undefined) this.featureId = featureId;\n        if (featureType !== undefined) this.featureType = featureType;\n    }\n\n    public static fromRaw(\n        colliderSet: ColliderSet,\n        raw: RawRayColliderIntersection,\n    ): RayColliderIntersection {\n        if (!raw) return null;\n\n        const result = new RayColliderIntersection(\n            colliderSet.get(raw.colliderHandle()),\n            raw.toi(),\n            VectorOps.fromRaw(raw.normal()),\n            raw.featureType() as number as FeatureType,\n            raw.featureId(),\n        );\n        raw.free();\n        return result;\n    }\n}\n\n/**\n * The time of impact between a ray and a collider.\n */\nexport class RayColliderToi {\n    /**\n     * The handle of the collider hit by the ray.\n     */\n    collider: Collider;\n    /**\n     * The time-of-impact of the ray with the collider.\n     *\n     * The hit point is obtained from the ray's origin and direction: `origin + dir * toi`.\n     */\n    toi: number;\n\n    constructor(collider: Collider, toi: number) {\n        this.collider = collider;\n        this.toi = toi;\n    }\n\n    public static fromRaw(\n        colliderSet: ColliderSet,\n        raw: RawRayColliderToi,\n    ): RayColliderToi {\n        if (!raw) return null;\n\n        const result = new RayColliderToi(\n            colliderSet.get(raw.colliderHandle()),\n            raw.toi(),\n        );\n        raw.free();\n        return result;\n    }\n}\n","import {Collider} from \"./collider\";\nimport {Vector, VectorOps} from \"../math\";\nimport {RawShapeTOI, RawShapeColliderTOI} from \"../raw\";\nimport {ColliderSet} from \"./collider_set\";\n\n/**\n * The intersection between a ray and a collider.\n */\nexport class ShapeTOI {\n    /**\n     * The time of impact of the two shapes.\n     */\n    toi: number;\n    /**\n     * The local-space contact point on the first shape, at\n     * the time of impact.\n     */\n    witness1: Vector;\n    /**\n     * The local-space contact point on the second shape, at\n     * the time of impact.\n     */\n    witness2: Vector;\n    /**\n     * The local-space normal on the first shape, at\n     * the time of impact.\n     */\n    normal1: Vector;\n    /**\n     * The local-space normal on the second shape, at\n     * the time of impact.\n     */\n    normal2: Vector;\n\n    constructor(\n        toi: number,\n        witness1: Vector,\n        witness2: Vector,\n        normal1: Vector,\n        normal2: Vector,\n    ) {\n        this.toi = toi;\n        this.witness1 = witness1;\n        this.witness2 = witness2;\n        this.normal1 = normal1;\n        this.normal2 = normal2;\n    }\n\n    public static fromRaw(\n        colliderSet: ColliderSet,\n        raw: RawShapeTOI,\n    ): ShapeTOI {\n        if (!raw) return null;\n\n        const result = new ShapeTOI(\n            raw.toi(),\n            VectorOps.fromRaw(raw.witness1()),\n            VectorOps.fromRaw(raw.witness2()),\n            VectorOps.fromRaw(raw.normal1()),\n            VectorOps.fromRaw(raw.normal2()),\n        );\n        raw.free();\n        return result;\n    }\n}\n\n/**\n * The intersection between a ray and a collider.\n */\nexport class ShapeColliderTOI extends ShapeTOI {\n    /**\n     * The handle of the collider hit by the ray.\n     */\n    collider: Collider;\n\n    constructor(\n        collider: Collider,\n        toi: number,\n        witness1: Vector,\n        witness2: Vector,\n        normal1: Vector,\n        normal2: Vector,\n    ) {\n        super(toi, witness1, witness2, normal1, normal2);\n        this.collider = collider;\n    }\n\n    public static fromRaw(\n        colliderSet: ColliderSet,\n        raw: RawShapeColliderTOI,\n    ): ShapeColliderTOI {\n        if (!raw) return null;\n\n        const result = new ShapeColliderTOI(\n            colliderSet.get(raw.colliderHandle()),\n            raw.toi(),\n            VectorOps.fromRaw(raw.witness1()),\n            VectorOps.fromRaw(raw.witness2()),\n            VectorOps.fromRaw(raw.normal1()),\n            VectorOps.fromRaw(raw.normal2()),\n        );\n        raw.free();\n        return result;\n    }\n}\n","import {RawPhysicsPipeline} from \"../raw\";\nimport {Vector, VectorOps} from \"../math\";\nimport {\n    IntegrationParameters,\n    ImpulseJointSet,\n    MultibodyJointSet,\n    RigidBodyHandle,\n    RigidBodySet,\n    CCDSolver,\n    IslandManager,\n} from \"../dynamics\";\nimport {\n    BroadPhase,\n    ColliderHandle,\n    ColliderSet,\n    NarrowPhase,\n} from \"../geometry\";\nimport {EventQueue} from \"./event_queue\";\nimport {PhysicsHooks} from \"./physics_hooks\";\n\nexport class PhysicsPipeline {\n    raw: RawPhysicsPipeline;\n\n    public free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n        this.raw = undefined;\n    }\n\n    constructor(raw?: RawPhysicsPipeline) {\n        this.raw = raw || new RawPhysicsPipeline();\n    }\n\n    public step(\n        gravity: Vector,\n        integrationParameters: IntegrationParameters,\n        islands: IslandManager,\n        broadPhase: BroadPhase,\n        narrowPhase: NarrowPhase,\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        impulseJoints: ImpulseJointSet,\n        multibodyJoints: MultibodyJointSet,\n        ccdSolver: CCDSolver,\n        eventQueue?: EventQueue,\n        hooks?: PhysicsHooks,\n    ) {\n        let rawG = VectorOps.intoRaw(gravity);\n\n        if (!!eventQueue) {\n            this.raw.stepWithEvents(\n                rawG,\n                integrationParameters.raw,\n                islands.raw,\n                broadPhase.raw,\n                narrowPhase.raw,\n                bodies.raw,\n                colliders.raw,\n                impulseJoints.raw,\n                multibodyJoints.raw,\n                ccdSolver.raw,\n                eventQueue.raw,\n                hooks,\n                !!hooks ? hooks.filterContactPair : null,\n                !!hooks ? hooks.filterIntersectionPair : null,\n            );\n        } else {\n            this.raw.step(\n                rawG,\n                integrationParameters.raw,\n                islands.raw,\n                broadPhase.raw,\n                narrowPhase.raw,\n                bodies.raw,\n                colliders.raw,\n                impulseJoints.raw,\n                multibodyJoints.raw,\n                ccdSolver.raw,\n            );\n        }\n\n        rawG.free();\n    }\n}\n","import {RawSerializationPipeline} from \"../raw\";\nimport {Vector, VectorOps} from \"../math\";\nimport {\n    IntegrationParameters,\n    IslandManager,\n    ImpulseJointSet,\n    MultibodyJointSet,\n    RigidBodySet,\n} from \"../dynamics\";\nimport {BroadPhase, ColliderSet, NarrowPhase} from \"../geometry\";\nimport {World} from \"./world\";\n\n/**\n * A pipeline for serializing the physics scene.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `queryPipeline.free()`\n * once you are done using it (and all the rigid-bodies it created).\n */\nexport class SerializationPipeline {\n    raw: RawSerializationPipeline;\n\n    /**\n     * Release the WASM memory occupied by this serialization pipeline.\n     */\n    free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n        this.raw = undefined;\n    }\n\n    constructor(raw?: RawSerializationPipeline) {\n        this.raw = raw || new RawSerializationPipeline();\n    }\n\n    /**\n     * Serialize a complete physics state into a single byte array.\n     * @param gravity - The current gravity affecting the simulation.\n     * @param integrationParameters - The integration parameters of the simulation.\n     * @param broadPhase - The broad-phase of the simulation.\n     * @param narrowPhase - The narrow-phase of the simulation.\n     * @param bodies - The rigid-bodies taking part into the simulation.\n     * @param colliders - The colliders taking part into the simulation.\n     * @param impulseJoints - The impulse joints taking part into the simulation.\n     * @param multibodyJoints - The multibody joints taking part into the simulation.\n     */\n    public serializeAll(\n        gravity: Vector,\n        integrationParameters: IntegrationParameters,\n        islands: IslandManager,\n        broadPhase: BroadPhase,\n        narrowPhase: NarrowPhase,\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        impulseJoints: ImpulseJointSet,\n        multibodyJoints: MultibodyJointSet,\n    ): Uint8Array {\n        let rawGra = VectorOps.intoRaw(gravity);\n\n        const res = this.raw.serializeAll(\n            rawGra,\n            integrationParameters.raw,\n            islands.raw,\n            broadPhase.raw,\n            narrowPhase.raw,\n            bodies.raw,\n            colliders.raw,\n            impulseJoints.raw,\n            multibodyJoints.raw,\n        );\n        rawGra.free();\n\n        return res;\n    }\n\n    /**\n     * Deserialize the complete physics state from a single byte array.\n     *\n     * @param data - The byte array to deserialize.\n     */\n    public deserializeAll(data: Uint8Array): World {\n        return World.fromRaw(this.raw.deserializeAll(data));\n    }\n}\n","import {RawDebugRenderPipeline} from \"../raw\";\nimport {Vector, VectorOps} from \"../math\";\nimport {\n    IntegrationParameters,\n    IslandManager,\n    ImpulseJointSet,\n    MultibodyJointSet,\n    RigidBodySet,\n} from \"../dynamics\";\nimport {BroadPhase, ColliderSet, NarrowPhase} from \"../geometry\";\n\n/**\n * The vertex and color buffers for debug-redering the physics scene.\n */\nexport class DebugRenderBuffers {\n    /**\n     * The lines to render. This is a flat array containing all the lines\n     * to render. Each line is described as two consecutive point. Each\n     * point is described as two (in 2D) or three (in 3D) consecutive\n     * floats. For example, in 2D, the array: `[1, 2, 3, 4, 5, 6, 7, 8]`\n     * describes the two segments `[[1, 2], [3, 4]]` and `[[5, 6], [7, 8]]`.\n     */\n    public vertices: Float32Array;\n    /**\n     * The color buffer. There is one color per vertex, and each color\n     * has four consecutive components (in RGBA format).\n     */\n    public colors: Float32Array;\n\n    constructor(vertices: Float32Array, colors: Float32Array) {\n        this.vertices = vertices;\n        this.colors = colors;\n    }\n}\n\n/**\n * A pipeline for rendering the physics scene.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `debugRenderPipeline.free()`\n * once you are done using it (and all the rigid-bodies it created).\n */\nexport class DebugRenderPipeline {\n    raw: RawDebugRenderPipeline;\n    public vertices: Float32Array;\n    public colors: Float32Array;\n\n    /**\n     * Release the WASM memory occupied by this serialization pipeline.\n     */\n    free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n        this.raw = undefined;\n        this.vertices = undefined;\n        this.colors = undefined;\n    }\n\n    constructor(raw?: RawDebugRenderPipeline) {\n        this.raw = raw || new RawDebugRenderPipeline();\n    }\n\n    public render(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        impulse_joints: ImpulseJointSet,\n        multibody_joints: MultibodyJointSet,\n        narrow_phase: NarrowPhase,\n    ) {\n        this.raw.render(\n            bodies.raw,\n            colliders.raw,\n            impulse_joints.raw,\n            multibody_joints.raw,\n            narrow_phase.raw,\n        );\n        this.vertices = this.raw.vertices();\n        this.colors = this.raw.colors();\n    }\n}\n","import {RawKinematicCharacterController, RawCharacterCollision} from \"../raw\";\nimport {Rotation, Vector, VectorOps} from \"../math\";\nimport {Collider, ColliderSet, InteractionGroups, Shape} from \"../geometry\";\nimport {QueryFilterFlags, QueryPipeline, World} from \"../pipeline\";\nimport {IntegrationParameters, RigidBody, RigidBodySet} from \"../dynamics\";\n\n/**\n * A collision between the character and an obstacle hit on its path.\n */\nexport class CharacterCollision {\n    /** The collider involved in the collision. Null if the collider no longer exists in the physics world. */\n    public collider: Collider | null;\n    /** The translation delta applied to the character before this collision took place. */\n    public translationDeltaApplied: Vector;\n    /** The translation delta the character would move after this collision if there is no other obstacles. */\n    public translationDeltaRemaining: Vector;\n    /** The time-of-impact between the character and the obstacles. */\n    public toi: number;\n    /** The world-space contact point on the collider when the collision happens. */\n    public witness1: Vector;\n    /** The local-space contact point on the character when the collision happens. */\n    public witness2: Vector;\n    /** The world-space outward contact normal on the collider when the collision happens. */\n    public normal1: Vector;\n    /** The local-space outward contact normal on the character when the collision happens. */\n    public normal2: Vector;\n}\n\n/**\n * A character controller for controlling kinematic bodies and parentless colliders by hitting\n * and sliding against obstacles.\n */\nexport class KinematicCharacterController {\n    private raw: RawKinematicCharacterController;\n    private rawCharacterCollision: RawCharacterCollision;\n\n    private params: IntegrationParameters;\n    private bodies: RigidBodySet;\n    private colliders: ColliderSet;\n    private queries: QueryPipeline;\n    private _applyImpulsesToDynamicBodies: boolean;\n    private _characterMass: number | null;\n\n    constructor(\n        offset: number,\n        params: IntegrationParameters,\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        queries: QueryPipeline,\n    ) {\n        this.params = params;\n        this.bodies = bodies;\n        this.colliders = colliders;\n        this.queries = queries;\n        this.raw = new RawKinematicCharacterController(offset);\n        this.rawCharacterCollision = new RawCharacterCollision();\n        this._applyImpulsesToDynamicBodies = false;\n        this._characterMass = null;\n    }\n\n    /** @internal */\n    public free() {\n        if (!!this.raw) {\n            this.raw.free();\n            this.rawCharacterCollision.free();\n        }\n\n        this.raw = undefined;\n        this.rawCharacterCollision = undefined;\n    }\n\n    /**\n     * The direction that goes \"up\". Used to determine where the floor is, and the floor’s angle.\n     */\n    public up(): Vector {\n        return this.raw.up();\n    }\n\n    /**\n     * Sets the direction that goes \"up\". Used to determine where the floor is, and the floor’s angle.\n     */\n    public setUp(vector: Vector) {\n        let rawVect = VectorOps.intoRaw(vector);\n        return this.raw.setUp(rawVect);\n        rawVect.free();\n    }\n\n    public applyImpulsesToDynamicBodies(): boolean {\n        return this._applyImpulsesToDynamicBodies;\n    }\n\n    public setApplyImpulsesToDynamicBodies(enabled: boolean) {\n        this._applyImpulsesToDynamicBodies = enabled;\n    }\n\n    /**\n     * Returns the custom value of the character mass, if it was set by `this.setCharacterMass`.\n     */\n    public characterMass(): number | null {\n        return this._characterMass;\n    }\n\n    /**\n     * Set the mass of the character to be used for impulse resolution if `self.applyImpulsesToDynamicBodies`\n     * is set to `true`.\n     *\n     * If no character mass is set explicitly (or if it is set to `null`) it is automatically assumed to be equal\n     * to the mass of the rigid-body the character collider is attached to; or equal to 0 if the character collider\n     * isn’t attached to any rigid-body.\n     *\n     * @param mass - The mass to set.\n     */\n    public setCharacterMass(mass: number | null) {\n        this._characterMass = mass;\n    }\n\n    /**\n     * A small gap to preserve between the character and its surroundings.\n     *\n     * This value should not be too large to avoid visual artifacts, but shouldn’t be too small\n     * (must not be zero) to improve numerical stability of the character controller.\n     */\n    public offset(): number {\n        return this.raw.offset();\n    }\n\n    /**\n     * Sets a small gap to preserve between the character and its surroundings.\n     *\n     * This value should not be too large to avoid visual artifacts, but shouldn’t be too small\n     * (must not be zero) to improve numerical stability of the character controller.\n     */\n    public setOffset(value: number) {\n        this.raw.setOffset(value);\n    }\n\n    /**\n     * Is sliding against obstacles enabled?\n     */\n    public slideEnabled(): boolean {\n        return this.raw.slideEnabled();\n    }\n\n    /**\n     * Enable or disable sliding against obstacles.\n     */\n    public setSlideEnabled(enabled: boolean) {\n        this.raw.setSlideEnabled(enabled);\n    }\n\n    /**\n     * The maximum step height a character can automatically step over.\n     */\n    public autostepMaxHeight(): number | null {\n        return this.raw.autostepMaxHeight();\n    }\n\n    /**\n     * The minimum width of free space that must be available after stepping on a stair.\n     */\n    public autostepMinWidth(): number | null {\n        return this.raw.autostepMinWidth();\n    }\n\n    /**\n     * Can the character automatically step over dynamic bodies too?\n     */\n    public autostepIncludesDynamicBodies(): boolean | null {\n        return this.raw.autostepIncludesDynamicBodies();\n    }\n\n    /**\n     * Is automatically stepping over small objects enabled?\n     */\n    public autostepEnabled(): boolean {\n        return this.raw.autostepEnabled();\n    }\n\n    /**\n     * Enabled automatically stepping over small objects.\n     *\n     * @param maxHeight - The maximum step height a character can automatically step over.\n     * @param minWidth - The minimum width of free space that must be available after stepping on a stair.\n     * @param includeDynamicBodies - Can the character automatically step over dynamic bodies too?\n     */\n    public enableAutostep(\n        maxHeight: number,\n        minWidth: number,\n        includeDynamicBodies: boolean,\n    ) {\n        this.raw.enableAutostep(maxHeight, minWidth, includeDynamicBodies);\n    }\n\n    /**\n     * Disable automatically stepping over small objects.\n     */\n    public disableAutostep() {\n        return this.raw.disableAutostep();\n    }\n\n    /**\n     * The maximum angle (radians) between the floor’s normal and the `up` vector that the\n     * character is able to climb.\n     */\n    public maxSlopeClimbAngle(): number {\n        return this.raw.maxSlopeClimbAngle();\n    }\n\n    /**\n     * Sets the maximum angle (radians) between the floor’s normal and the `up` vector that the\n     * character is able to climb.\n     */\n    public setMaxSlopeClimbAngle(angle: number) {\n        this.raw.setMaxSlopeClimbAngle(angle);\n    }\n\n    /**\n     * The minimum angle (radians) between the floor’s normal and the `up` vector before the\n     * character starts to slide down automatically.\n     */\n    public minSlopeSlideAngle(): number {\n        return this.raw.minSlopeSlideAngle();\n    }\n\n    /**\n     * Sets the minimum angle (radians) between the floor’s normal and the `up` vector before the\n     * character starts to slide down automatically.\n     */\n    public setMinSlopeSlideAngle(angle: number) {\n        this.raw.setMinSlopeSlideAngle(angle);\n    }\n\n    /**\n     * If snap-to-ground is enabled, should the character be automatically snapped to the ground if\n     * the distance between the ground and its feet are smaller than the specified threshold?\n     */\n    public snapToGroundDistance(): number | null {\n        return this.raw.snapToGroundDistance();\n    }\n\n    /**\n     * Enables automatically snapping the character to the ground if the distance between\n     * the ground and its feet are smaller than the specified threshold.\n     */\n    public enableSnapToGround(distance: number) {\n        this.raw.enableSnapToGround(distance);\n    }\n\n    /**\n     * Disables automatically snapping the character to the ground.\n     */\n    public disableSnapToGround() {\n        this.raw.disableSnapToGround();\n    }\n\n    /**\n     * Is automatically snapping the character to the ground enabled?\n     */\n    public snapToGroundEnabled(): boolean {\n        return this.raw.snapToGroundEnabled();\n    }\n\n    /**\n     * Computes the movement the given collider is able to execute after hitting and sliding on obstacles.\n     *\n     * @param collider - The collider to move.\n     * @param desiredTranslationDelta - The desired collider movement.\n     * @param filterFlags - Flags for excluding whole subsets of colliders from the obstacles taken into account.\n     * @param filterGroups - Groups for excluding colliders with incompatible collision groups from the obstacles\n     *                       taken into account.\n     * @param filterPredicate - Any collider for which this closure returns `false` will be excluded from the\n     *                          obstacles taken into account.\n     */\n    public computeColliderMovement(\n        collider: Collider,\n        desiredTranslationDelta: Vector,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterPredicate?: (collider: Collider) => boolean,\n    ) {\n        let rawTranslationDelta = VectorOps.intoRaw(desiredTranslationDelta);\n        this.raw.computeColliderMovement(\n            this.params.dt,\n            this.bodies.raw,\n            this.colliders.raw,\n            this.queries.raw,\n            collider.handle,\n            rawTranslationDelta,\n            this._applyImpulsesToDynamicBodies,\n            this._characterMass,\n            filterFlags,\n            filterGroups,\n            this.colliders.castClosure(filterPredicate),\n        );\n        rawTranslationDelta.free();\n    }\n\n    /**\n     * The movement computed by the last call to `this.computeColliderMovement`.\n     */\n    public computedMovement(): Vector {\n        return VectorOps.fromRaw(this.raw.computedMovement());\n    }\n\n    /**\n     * The result of ground detection computed by the last call to `this.computeColliderMovement`.\n     */\n    public computedGrounded(): boolean {\n        return this.raw.computedGrounded();\n    }\n\n    /**\n     * The number of collisions against obstacles detected along the path of the last call\n     * to `this.computeColliderMovement`.\n     */\n    public numComputedCollisions(): number {\n        return this.raw.numComputedCollisions();\n    }\n\n    /**\n     * Returns the collision against one of the obstacles detected along the path of the last\n     * call to `this.computeColliderMovement`.\n     *\n     * @param i - The i-th collision will be returned.\n     * @param out - If this argument is set, it will be filled with the collision information.\n     */\n    public computedCollision(\n        i: number,\n        out?: CharacterCollision,\n    ): CharacterCollision | null {\n        if (!this.raw.computedCollision(i, this.rawCharacterCollision)) {\n            return null;\n        } else {\n            let c = this.rawCharacterCollision;\n            out = out ?? new CharacterCollision();\n            out.translationDeltaApplied = VectorOps.fromRaw(\n                c.translationDeltaApplied(),\n            );\n            out.translationDeltaRemaining = VectorOps.fromRaw(\n                c.translationDeltaRemaining(),\n            );\n            out.toi = c.toi();\n            out.witness1 = VectorOps.fromRaw(c.worldWitness1());\n            out.witness2 = VectorOps.fromRaw(c.worldWitness2());\n            out.normal1 = VectorOps.fromRaw(c.worldNormal1());\n            out.normal2 = VectorOps.fromRaw(c.worldNormal2());\n            out.collider = this.colliders.get(c.handle());\n            return out;\n        }\n    }\n}\n","import {RawDynamicRayCastVehicleController} from \"../raw\";\nimport {Vector, VectorOps} from \"../math\";\nimport {Collider, ColliderSet, InteractionGroups} from \"../geometry\";\nimport {QueryFilterFlags, QueryPipeline} from \"../pipeline\";\nimport {RigidBody, RigidBodyHandle, RigidBodySet} from \"../dynamics\";\n\n/**\n * A character controller to simulate vehicles using ray-casting for the wheels.\n */\nexport class DynamicRayCastVehicleController {\n    private raw: RawDynamicRayCastVehicleController;\n    private bodies: RigidBodySet;\n    private colliders: ColliderSet;\n    private queries: QueryPipeline;\n    private _chassis: RigidBody;\n\n    constructor(\n        chassis: RigidBody,\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        queries: QueryPipeline,\n    ) {\n        this.raw = new RawDynamicRayCastVehicleController(chassis.handle);\n        this.bodies = bodies;\n        this.colliders = colliders;\n        this.queries = queries;\n        this._chassis = chassis;\n    }\n\n    /** @internal */\n    public free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n\n        this.raw = undefined;\n    }\n\n    /**\n     * Updates the vehicle’s velocity based on its suspension, engine force, and brake.\n     *\n     * This directly updates the velocity of its chassis rigid-body.\n     *\n     * @param dt - Time increment used to integrate forces.\n     * @param filterFlags - Flag to exclude categories of objects from the wheels’ ray-cast.\n     * @param filterGroups - Only colliders compatible with these groups will be hit by the wheels’ ray-casts.\n     * @param filterPredicate - Callback to filter out which collider will be hit by the wheels’ ray-casts.\n     */\n    public updateVehicle(\n        dt: number,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterPredicate?: (collider: Collider) => boolean,\n    ) {\n        this.raw.update_vehicle(\n            dt,\n            this.bodies.raw,\n            this.colliders.raw,\n            this.queries.raw,\n            filterFlags,\n            filterGroups,\n            this.colliders.castClosure(filterPredicate),\n        );\n    }\n\n    /**\n     * The current forward speed of the vehicle.\n     */\n    public currentVehicleSpeed(): number {\n        return this.raw.current_vehicle_speed();\n    }\n\n    /**\n     * The rigid-body used as the chassis.\n     */\n    public chassis(): RigidBody {\n        return this._chassis;\n    }\n\n    /**\n     * The chassis’ local _up_ direction (`0 = x, 1 = y, 2 = z`).\n     */\n    get indexUpAxis(): number {\n        return this.raw.index_up_axis();\n    }\n\n    /**\n     * Sets the chassis’ local _up_ direction (`0 = x, 1 = y, 2 = z`).\n     */\n    set indexUpAxis(axis: number) {\n        this.raw.set_index_up_axis(axis);\n    }\n\n    /**\n     * The chassis’ local _forward_ direction (`0 = x, 1 = y, 2 = z`).\n     */\n    get indexForwardAxis(): number {\n        return this.raw.index_forward_axis();\n    }\n\n    /**\n     * Sets the chassis’ local _forward_ direction (`0 = x, 1 = y, 2 = z`).\n     */\n    set setIndexForwardAxis(axis: number) {\n        this.raw.set_index_forward_axis(axis);\n    }\n\n    /**\n     * Adds a new wheel attached to this vehicle.\n     * @param chassisConnectionCs  - The position of the wheel relative to the chassis.\n     * @param directionCs - The direction of the wheel’s suspension, relative to the chassis. The ray-casting will\n     *                      happen following this direction to detect the ground.\n     * @param axleCs - The wheel’s axle axis, relative to the chassis.\n     * @param suspensionRestLength - The rest length of the wheel’s suspension spring.\n     * @param radius - The wheel’s radius.\n     */\n    public addWheel(\n        chassisConnectionCs: Vector,\n        directionCs: Vector,\n        axleCs: Vector,\n        suspensionRestLength: number,\n        radius: number,\n    ) {\n        let rawChassisConnectionCs = VectorOps.intoRaw(chassisConnectionCs);\n        let rawDirectionCs = VectorOps.intoRaw(directionCs);\n        let rawAxleCs = VectorOps.intoRaw(axleCs);\n\n        this.raw.add_wheel(\n            rawChassisConnectionCs,\n            rawDirectionCs,\n            rawAxleCs,\n            suspensionRestLength,\n            radius,\n        );\n\n        rawChassisConnectionCs.free();\n        rawDirectionCs.free();\n        rawAxleCs.free();\n    }\n\n    /**\n     * The number of wheels attached to this vehicle.\n     */\n    public numWheels(): number {\n        return this.raw.num_wheels();\n    }\n\n    /*\n     *\n     * Access to wheel properties.\n     *\n     */\n    /*\n     * Getters + setters\n     */\n    /**\n     * The position of the i-th wheel, relative to the chassis.\n     */\n    public wheelChassisConnectionPointCs(i: number): Vector | null {\n        return VectorOps.fromRaw(this.raw.wheel_chassis_connection_point_cs(i));\n    }\n\n    /**\n     * Sets the position of the i-th wheel, relative to the chassis.\n     */\n    public setWheelChassisConnectionPointCs(i: number, value: Vector) {\n        let rawValue = VectorOps.intoRaw(value);\n        this.raw.set_wheel_chassis_connection_point_cs(i, rawValue);\n        rawValue.free();\n    }\n\n    /**\n     * The rest length of the i-th wheel’s suspension spring.\n     */\n    public wheelSuspensionRestLength(i: number): number | null {\n        return this.raw.wheel_suspension_rest_length(i);\n    }\n\n    /**\n     * Sets the rest length of the i-th wheel’s suspension spring.\n     */\n    public setWheelSuspensionRestLength(i: number, value: number) {\n        this.raw.set_wheel_suspension_rest_length(i, value);\n    }\n\n    /**\n     * The maximum distance the i-th wheel suspension can travel before and after its resting length.\n     */\n    public wheelMaxSuspensionTravel(i: number): number | null {\n        return this.raw.wheel_max_suspension_travel(i);\n    }\n\n    /**\n     * Sets the maximum distance the i-th wheel suspension can travel before and after its resting length.\n     */\n    public setWheelMaxSuspensionTravel(i: number, value: number) {\n        this.raw.set_wheel_max_suspension_travel(i, value);\n    }\n\n    /**\n     * The i-th wheel’s radius.\n     */\n    public wheelRadius(i: number): number | null {\n        return this.raw.wheel_radius(i);\n    }\n\n    /**\n     * Sets the i-th wheel’s radius.\n     */\n    public setWheelRadius(i: number, value: number) {\n        this.raw.set_wheel_radius(i, value);\n    }\n\n    /**\n     * The i-th wheel’s suspension stiffness.\n     *\n     * Increase this value if the suspension appears to not push the vehicle strong enough.\n     */\n    public wheelSuspensionStiffness(i: number): number | null {\n        return this.raw.wheel_suspension_stiffness(i);\n    }\n\n    /**\n     * Sets the i-th wheel’s suspension stiffness.\n     *\n     * Increase this value if the suspension appears to not push the vehicle strong enough.\n     */\n    public setWheelSuspensionStiffness(i: number, value: number) {\n        this.raw.set_wheel_suspension_stiffness(i, value);\n    }\n\n    /**\n     * The i-th wheel’s suspension’s damping when it is being compressed.\n     */\n    public wheelSuspensionCompression(i: number): number | null {\n        return this.raw.wheel_suspension_compression(i);\n    }\n\n    /**\n     * The i-th wheel’s suspension’s damping when it is being compressed.\n     */\n    public setWheelSuspensionCompression(i: number, value: number) {\n        this.raw.set_wheel_suspension_compression(i, value);\n    }\n\n    /**\n     * The i-th wheel’s suspension’s damping when it is being released.\n     *\n     * Increase this value if the suspension appears to overshoot.\n     */\n    public wheelSuspensionRelaxation(i: number): number | null {\n        return this.raw.wheel_suspension_relaxation(i);\n    }\n\n    /**\n     * Sets the i-th wheel’s suspension’s damping when it is being released.\n     *\n     * Increase this value if the suspension appears to overshoot.\n     */\n    public setWheelSuspensionRelaxation(i: number, value: number) {\n        this.raw.set_wheel_suspension_relaxation(i, value);\n    }\n\n    /**\n     * The maximum force applied by the i-th wheel’s suspension.\n     */\n    public wheelMaxSuspensionForce(i: number): number | null {\n        return this.raw.wheel_max_suspension_force(i);\n    }\n\n    /**\n     * Sets the maximum force applied by the i-th wheel’s suspension.\n     */\n    public setWheelMaxSuspensionForce(i: number, value: number) {\n        this.raw.set_wheel_max_suspension_force(i, value);\n    }\n\n    /**\n     * The maximum amount of braking impulse applied on the i-th wheel to slow down the vehicle.\n     */\n    public wheelBrake(i: number): number | null {\n        return this.raw.wheel_brake(i);\n    }\n\n    /**\n     * Set the maximum amount of braking impulse applied on the i-th wheel to slow down the vehicle.\n     */\n    public setWheelBrake(i: number, value: number) {\n        this.raw.set_wheel_brake(i, value);\n    }\n\n    /**\n     * The steering angle (radians) for the i-th wheel.\n     */\n    public wheelSteering(i: number): number | null {\n        return this.raw.wheel_steering(i);\n    }\n\n    /**\n     * Sets the steering angle (radians) for the i-th wheel.\n     */\n    public setWheelSteering(i: number, value: number) {\n        this.raw.set_wheel_steering(i, value);\n    }\n\n    /**\n     * The forward force applied by the i-th wheel on the chassis.\n     */\n    public wheelEngineForce(i: number): number | null {\n        return this.raw.wheel_engine_force(i);\n    }\n\n    /**\n     * Sets the forward force applied by the i-th wheel on the chassis.\n     */\n    public setWheelEngineForce(i: number, value: number) {\n        this.raw.set_wheel_engine_force(i, value);\n    }\n\n    /**\n     * The direction of the i-th wheel’s suspension, relative to the chassis.\n     *\n     * The ray-casting will happen following this direction to detect the ground.\n     */\n    public wheelDirectionCs(i: number): Vector | null {\n        return VectorOps.fromRaw(this.raw.wheel_direction_cs(i));\n    }\n\n    /**\n     * Sets the direction of the i-th wheel’s suspension, relative to the chassis.\n     *\n     * The ray-casting will happen following this direction to detect the ground.\n     */\n    public setWheelDirectionCs(i: number, value: Vector) {\n        let rawValue = VectorOps.intoRaw(value);\n        this.raw.set_wheel_direction_cs(i, rawValue);\n        rawValue.free();\n    }\n\n    /**\n     * The i-th wheel’s axle axis, relative to the chassis.\n     *\n     * The axis index defined as 0 = X, 1 = Y, 2 = Z.\n     */\n    public wheelAxleCs(i: number): Vector | null {\n        return VectorOps.fromRaw(this.raw.wheel_axle_cs(i));\n    }\n\n    /**\n     * Sets the i-th wheel’s axle axis, relative to the chassis.\n     *\n     * The axis index defined as 0 = X, 1 = Y, 2 = Z.\n     */\n    public setWheelAxleCs(i: number, value: Vector) {\n        let rawValue = VectorOps.intoRaw(value);\n        this.raw.set_wheel_axle_cs(i, rawValue);\n        rawValue.free();\n    }\n\n    /**\n     * Parameter controlling how much traction the tire has.\n     *\n     * The larger the value, the more instantaneous braking will happen (with the risk of\n     * causing the vehicle to flip if it’s too strong).\n     */\n    public wheelFrictionSlip(i: number): number | null {\n        return this.raw.wheel_friction_slip(i);\n    }\n\n    /**\n     * Sets the parameter controlling how much traction the tire has.\n     *\n     * The larger the value, the more instantaneous braking will happen (with the risk of\n     * causing the vehicle to flip if it’s too strong).\n     */\n    public setWheelFrictionSlip(i: number, value: number) {\n        this.raw.set_wheel_friction_slip(i, value);\n    }\n\n    /**\n     * The multiplier of friction between a tire and the collider it’s on top of.\n     *\n     * The larger the value, the stronger side friction will be.\n     */\n    public wheelSideFrictionStiffness(i: number): number | null {\n        return this.raw.wheel_side_friction_stiffness(i);\n    }\n\n    /**\n     * The multiplier of friction between a tire and the collider it’s on top of.\n     *\n     * The larger the value, the stronger side friction will be.\n     */\n    public setWheelSideFrictionStiffness(i: number, value: number) {\n        this.raw.set_wheel_side_friction_stiffness(i, value);\n    }\n\n    /*\n     * Getters only.\n     */\n\n    /**\n     *  The i-th wheel’s current rotation angle (radians) on its axle.\n     */\n    public wheelRotation(i: number): number | null {\n        return this.raw.wheel_rotation(i);\n    }\n\n    /**\n     *  The forward impulses applied by the i-th wheel on the chassis.\n     */\n    public wheelForwardImpulse(i: number): number | null {\n        return this.raw.wheel_forward_impulse(i);\n    }\n\n    /**\n     *  The side impulses applied by the i-th wheel on the chassis.\n     */\n    public wheelSideImpulse(i: number): number | null {\n        return this.raw.wheel_side_impulse(i);\n    }\n\n    /**\n     *  The force applied by the i-th wheel suspension.\n     */\n    public wheelSuspensionForce(i: number): number | null {\n        return this.raw.wheel_suspension_force(i);\n    }\n\n    /**\n     *  The (world-space) contact normal between the i-th wheel and the floor.\n     */\n    public wheelContactNormal(i: number): Vector | null {\n        return VectorOps.fromRaw(this.raw.wheel_contact_normal_ws(i));\n    }\n\n    /**\n     *  The (world-space) point hit by the wheel’s ray-cast for the i-th wheel.\n     */\n    public wheelContactPoint(i: number): Vector | null {\n        return VectorOps.fromRaw(this.raw.wheel_contact_point_ws(i));\n    }\n\n    /**\n     *  The suspension length for the i-th wheel.\n     */\n    public wheelSuspensionLength(i: number): number | null {\n        return this.raw.wheel_suspension_length(i);\n    }\n\n    /**\n     *  The (world-space) starting point of the ray-cast for the i-th wheel.\n     */\n    public wheelHardPoint(i: number): Vector | null {\n        return VectorOps.fromRaw(this.raw.wheel_hard_point_ws(i));\n    }\n\n    /**\n     *  Is the i-th wheel in contact with the ground?\n     */\n    public wheelIsInContact(i: number): boolean {\n        return this.raw.wheel_is_in_contact(i);\n    }\n\n    /**\n     *  The collider hit by the ray-cast for the i-th wheel.\n     */\n    public wheelGroundObject(i: number): Collider | null {\n        return this.colliders.get(this.raw.wheel_ground_object(i));\n    }\n}\n","import {\n    RawBroadPhase,\n    RawCCDSolver,\n    RawColliderSet,\n    RawDeserializedWorld,\n    RawIntegrationParameters,\n    RawIslandManager,\n    RawImpulseJointSet,\n    RawMultibodyJointSet,\n    RawNarrowPhase,\n    RawPhysicsPipeline,\n    RawQueryPipeline,\n    RawRigidBodySet,\n    RawSerializationPipeline,\n    RawDebugRenderPipeline,\n} from \"../raw\";\n\nimport {\n    BroadPhase,\n    Collider,\n    ColliderDesc,\n    ColliderHandle,\n    ColliderSet,\n    InteractionGroups,\n    NarrowPhase,\n    PointColliderProjection,\n    Ray,\n    RayColliderIntersection,\n    RayColliderToi,\n    Shape,\n    ShapeColliderTOI,\n    TempContactManifold,\n} from \"../geometry\";\nimport {\n    CCDSolver,\n    IntegrationParameters,\n    IslandManager,\n    ImpulseJoint,\n    ImpulseJointHandle,\n    MultibodyJoint,\n    MultibodyJointHandle,\n    JointData,\n    ImpulseJointSet,\n    MultibodyJointSet,\n    RigidBody,\n    RigidBodyDesc,\n    RigidBodyHandle,\n    RigidBodySet,\n} from \"../dynamics\";\nimport {Rotation, Vector, VectorOps} from \"../math\";\nimport {PhysicsPipeline} from \"./physics_pipeline\";\nimport {QueryFilterFlags, QueryPipeline} from \"./query_pipeline\";\nimport {SerializationPipeline} from \"./serialization_pipeline\";\nimport {EventQueue} from \"./event_queue\";\nimport {PhysicsHooks} from \"./physics_hooks\";\nimport {DebugRenderBuffers, DebugRenderPipeline} from \"./debug_render_pipeline\";\nimport {KinematicCharacterController} from \"../control\";\nimport {Coarena} from \"../coarena\";\n\n// #if DIM3\nimport {DynamicRayCastVehicleController} from \"../control\";\n// #endif\n\n/**\n * The physics world.\n *\n * This contains all the data-structures necessary for creating and simulating\n * bodies with contacts, joints, and external forces.\n */\nexport class World {\n    public gravity: Vector;\n    integrationParameters: IntegrationParameters;\n    islands: IslandManager;\n    broadPhase: BroadPhase;\n    narrowPhase: NarrowPhase;\n    bodies: RigidBodySet;\n    colliders: ColliderSet;\n    impulseJoints: ImpulseJointSet;\n    multibodyJoints: MultibodyJointSet;\n    ccdSolver: CCDSolver;\n    queryPipeline: QueryPipeline;\n    physicsPipeline: PhysicsPipeline;\n    serializationPipeline: SerializationPipeline;\n    debugRenderPipeline: DebugRenderPipeline;\n    characterControllers: Set<KinematicCharacterController>;\n\n    // #if DIM3\n    vehicleControllers: Set<DynamicRayCastVehicleController>;\n    // #endif\n\n    /**\n     * Release the WASM memory occupied by this physics world.\n     *\n     * All the fields of this physics world will be freed as well,\n     * so there is no need to call their `.free()` methods individually.\n     */\n    public free() {\n        this.integrationParameters.free();\n        this.islands.free();\n        this.broadPhase.free();\n        this.narrowPhase.free();\n        this.bodies.free();\n        this.colliders.free();\n        this.impulseJoints.free();\n        this.multibodyJoints.free();\n        this.ccdSolver.free();\n        this.queryPipeline.free();\n        this.physicsPipeline.free();\n        this.serializationPipeline.free();\n        this.debugRenderPipeline.free();\n        this.characterControllers.forEach((controller) => controller.free());\n\n        // #if DIM3\n        this.vehicleControllers.forEach((controller) => controller.free());\n        // #endif\n\n        this.integrationParameters = undefined;\n        this.islands = undefined;\n        this.broadPhase = undefined;\n        this.narrowPhase = undefined;\n        this.bodies = undefined;\n        this.colliders = undefined;\n        this.ccdSolver = undefined;\n        this.impulseJoints = undefined;\n        this.multibodyJoints = undefined;\n        this.queryPipeline = undefined;\n        this.physicsPipeline = undefined;\n        this.serializationPipeline = undefined;\n        this.debugRenderPipeline = undefined;\n        this.characterControllers = undefined;\n\n        // #if DIM3\n        this.vehicleControllers = undefined;\n        // #endif\n    }\n\n    constructor(\n        gravity: Vector,\n        rawIntegrationParameters?: RawIntegrationParameters,\n        rawIslands?: RawIslandManager,\n        rawBroadPhase?: RawBroadPhase,\n        rawNarrowPhase?: RawNarrowPhase,\n        rawBodies?: RawRigidBodySet,\n        rawColliders?: RawColliderSet,\n        rawImpulseJoints?: RawImpulseJointSet,\n        rawMultibodyJoints?: RawMultibodyJointSet,\n        rawCCDSolver?: RawCCDSolver,\n        rawQueryPipeline?: RawQueryPipeline,\n        rawPhysicsPipeline?: RawPhysicsPipeline,\n        rawSerializationPipeline?: RawSerializationPipeline,\n        rawDebugRenderPipeline?: RawDebugRenderPipeline,\n    ) {\n        this.gravity = gravity;\n        this.integrationParameters = new IntegrationParameters(\n            rawIntegrationParameters,\n        );\n        this.islands = new IslandManager(rawIslands);\n        this.broadPhase = new BroadPhase(rawBroadPhase);\n        this.narrowPhase = new NarrowPhase(rawNarrowPhase);\n        this.bodies = new RigidBodySet(rawBodies);\n        this.colliders = new ColliderSet(rawColliders);\n        this.impulseJoints = new ImpulseJointSet(rawImpulseJoints);\n        this.multibodyJoints = new MultibodyJointSet(rawMultibodyJoints);\n        this.ccdSolver = new CCDSolver(rawCCDSolver);\n        this.queryPipeline = new QueryPipeline(rawQueryPipeline);\n        this.physicsPipeline = new PhysicsPipeline(rawPhysicsPipeline);\n        this.serializationPipeline = new SerializationPipeline(\n            rawSerializationPipeline,\n        );\n        this.debugRenderPipeline = new DebugRenderPipeline(\n            rawDebugRenderPipeline,\n        );\n        this.characterControllers = new Set<KinematicCharacterController>();\n\n        // #if DIM3\n        this.vehicleControllers = new Set<DynamicRayCastVehicleController>();\n        // #endif\n\n        this.impulseJoints.finalizeDeserialization(this.bodies);\n        this.bodies.finalizeDeserialization(this.colliders);\n        this.colliders.finalizeDeserialization(this.bodies);\n    }\n\n    public static fromRaw(raw: RawDeserializedWorld): World {\n        if (!raw) return null;\n\n        return new World(\n            VectorOps.fromRaw(raw.takeGravity()),\n            raw.takeIntegrationParameters(),\n            raw.takeIslandManager(),\n            raw.takeBroadPhase(),\n            raw.takeNarrowPhase(),\n            raw.takeBodies(),\n            raw.takeColliders(),\n            raw.takeImpulseJoints(),\n            raw.takeMultibodyJoints(),\n        );\n    }\n\n    /**\n     * Takes a snapshot of this world.\n     *\n     * Use `World.restoreSnapshot` to create a new physics world with a state identical to\n     * the state when `.takeSnapshot()` is called.\n     */\n    public takeSnapshot(): Uint8Array {\n        return this.serializationPipeline.serializeAll(\n            this.gravity,\n            this.integrationParameters,\n            this.islands,\n            this.broadPhase,\n            this.narrowPhase,\n            this.bodies,\n            this.colliders,\n            this.impulseJoints,\n            this.multibodyJoints,\n        );\n    }\n\n    /**\n     * Creates a new physics world from a snapshot.\n     *\n     * This new physics world will be an identical copy of the snapshoted physics world.\n     */\n    public static restoreSnapshot(data: Uint8Array): World {\n        let deser = new SerializationPipeline();\n        return deser.deserializeAll(data);\n    }\n\n    /**\n     * Computes all the lines (and their colors) needed to render the scene.\n     */\n    public debugRender(): DebugRenderBuffers {\n        this.debugRenderPipeline.render(\n            this.bodies,\n            this.colliders,\n            this.impulseJoints,\n            this.multibodyJoints,\n            this.narrowPhase,\n        );\n        return new DebugRenderBuffers(\n            this.debugRenderPipeline.vertices,\n            this.debugRenderPipeline.colors,\n        );\n    }\n\n    /**\n     * Advance the simulation by one time step.\n     *\n     * All events generated by the physics engine are ignored.\n     *\n     * @param EventQueue - (optional) structure responsible for collecting\n     *   events generated by the physics engine.\n     */\n    public step(eventQueue?: EventQueue, hooks?: PhysicsHooks) {\n        this.physicsPipeline.step(\n            this.gravity,\n            this.integrationParameters,\n            this.islands,\n            this.broadPhase,\n            this.narrowPhase,\n            this.bodies,\n            this.colliders,\n            this.impulseJoints,\n            this.multibodyJoints,\n            this.ccdSolver,\n            eventQueue,\n            hooks,\n        );\n        this.queryPipeline.update(this.bodies, this.colliders);\n    }\n\n    /**\n     * Update colliders positions after rigid-bodies moved.\n     *\n     * When a rigid-body moves, the positions of the colliders attached to it need to be updated. This update is\n     * generally automatically done at the beginning and the end of each simulation step with World.step.\n     * If the positions need to be updated without running a simulation step this method can be called manually.\n     */\n    public propagateModifiedBodyPositionsToColliders() {\n        this.bodies.raw.propagateModifiedBodyPositionsToColliders(\n            this.colliders.raw,\n        );\n    }\n\n    /**\n     * Ensure subsequent scene queries take into account the collider positions set before this method is called.\n     *\n     * This does not step the physics simulation forward.\n     */\n    public updateSceneQueries() {\n        this.propagateModifiedBodyPositionsToColliders();\n        this.queryPipeline.update(this.bodies, this.colliders);\n    }\n\n    /**\n     * The current simulation timestep.\n     */\n    get timestep(): number {\n        return this.integrationParameters.dt;\n    }\n\n    /**\n     * Sets the new simulation timestep.\n     *\n     * The simulation timestep governs by how much the physics state of the world will\n     * be integrated. A simulation timestep should:\n     * - be as small as possible. Typical values evolve around 0.016 (assuming the chosen unit is milliseconds,\n     * corresponds to the time between two frames of a game running at 60FPS).\n     * - not vary too much during the course of the simulation. A timestep with large variations may\n     * cause instabilities in the simulation.\n     *\n     * @param dt - The timestep length, in seconds.\n     */\n    set timestep(dt: number) {\n        this.integrationParameters.dt = dt;\n    }\n\n    /**\n     * The number of solver iterations run by the constraints solver for calculating forces (default: `4`).\n     */\n    get numSolverIterations(): number {\n        return this.integrationParameters.numSolverIterations;\n    }\n\n    /**\n     * Sets the number of solver iterations run by the constraints solver for calculating forces (default: `4`).\n     *\n     * The greater this value is, the most rigid and realistic the physics simulation will be.\n     * However a greater number of iterations is more computationally intensive.\n     *\n     * @param niter - The new number of solver iterations.\n     */\n    set numSolverIterations(niter: number) {\n        this.integrationParameters.numSolverIterations = niter;\n    }\n\n    /**\n     * Number of addition friction resolution iteration run during the last solver sub-step (default: `4`).\n     */\n    get numAdditionalFrictionIterations(): number {\n        return this.integrationParameters.numAdditionalFrictionIterations;\n    }\n\n    /**\n     * Sets the number of addition friction resolution iteration run during the last solver sub-step (default: `4`).\n     *\n     * The greater this value is, the most realistic friction will be.\n     * However a greater number of iterations is more computationally intensive.\n     *\n     * @param niter - The new number of additional friction iterations.\n     */\n    set numAdditionalFrictionIterations(niter: number) {\n        this.integrationParameters.numAdditionalFrictionIterations = niter;\n    }\n\n    /**\n     * Number of internal Project Gauss Seidel (PGS) iterations run at each solver iteration (default: `1`).\n     */\n    get numInternalPgsIterations(): number {\n        return this.integrationParameters.numInternalPgsIterations;\n    }\n\n    /**\n     * Sets the Number of internal Project Gauss Seidel (PGS) iterations run at each solver iteration (default: `1`).\n     *\n     * Increasing this parameter will improve stability of the simulation. It will have a lesser effect than\n     * increasing `numSolverIterations` but is also less computationally expensive.\n     *\n     * @param niter - The new number of internal PGS iterations.\n     */\n    set numInternalPgsIterations(niter: number) {\n        this.integrationParameters.numInternalPgsIterations = niter;\n    }\n\n    /// Configures the integration parameters to match the old PGS solver\n    /// from Rapier JS version <= 0.11.\n    ///\n    /// This solver was slightly faster than the new one but resulted\n    /// in less stable joints and worse convergence rates.\n    ///\n    /// This should only be used for comparison purpose or if you are\n    /// experiencing problems with the new solver.\n    ///\n    /// NOTE: this does not affect any `RigidBody.additional_solver_iterations` that will\n    ///       still create solver iterations based on the new \"small-steps\" PGS solver.\n    public switchToStandardPgsSolver() {\n        this.integrationParameters.switchToStandardPgsSolver();\n    }\n\n    /// Configures the integration parameters to match the new \"small-steps\" PGS solver\n    /// from Rapier version >= 0.12.\n    ///\n    /// The \"small-steps\" PGS solver is the default one when creating the physics world. So\n    /// calling this function is generally not needed unless `World.switch_to_standard_pgs_solver`\n    /// was called.\n    ///\n    /// This solver results in more stable joints and significantly better convergence\n    /// rates but is slightly slower in its default settings.\n    public switchToSmallStepsPgsSolver() {\n        this.integrationParameters.switchToSmallStepsPgsSolver();\n    }\n\n    /**\n     * Creates a new rigid-body from the given rigid-body descriptor.\n     *\n     * @param body - The description of the rigid-body to create.\n     */\n    public createRigidBody(body: RigidBodyDesc): RigidBody {\n        return this.bodies.createRigidBody(this.colliders, body);\n    }\n\n    /**\n     * Creates a new character controller.\n     *\n     * @param offset - The artificial gap added between the character’s chape and its environment.\n     */\n    public createCharacterController(\n        offset: number,\n    ): KinematicCharacterController {\n        let controller = new KinematicCharacterController(\n            offset,\n            this.integrationParameters,\n            this.bodies,\n            this.colliders,\n            this.queryPipeline,\n        );\n        this.characterControllers.add(controller);\n        return controller;\n    }\n\n    /**\n     * Removes a character controller from this world.\n     *\n     * @param controller - The character controller to remove.\n     */\n    public removeCharacterController(controller: KinematicCharacterController) {\n        this.characterControllers.delete(controller);\n        controller.free();\n    }\n\n    // #if DIM3\n    /**\n     * Creates a new vehicle controller.\n     *\n     * @param chassis - The rigid-body used as the chassis of the vehicle controller. When the vehicle\n     *                  controller is updated, it will change directly the rigid-body’s velocity. This\n     *                  rigid-body must be a dynamic or kinematic-velocity-based rigid-body.\n     */\n    public createVehicleController(\n        chassis: RigidBody,\n    ): DynamicRayCastVehicleController {\n        let controller = new DynamicRayCastVehicleController(\n            chassis,\n            this.bodies,\n            this.colliders,\n            this.queryPipeline,\n        );\n        this.vehicleControllers.add(controller);\n        return controller;\n    }\n\n    /**\n     * Removes a vehicle controller from this world.\n     *\n     * @param controller - The vehicle controller to remove.\n     */\n    public removeVehicleController(\n        controller: DynamicRayCastVehicleController,\n    ) {\n        this.vehicleControllers.delete(controller);\n        controller.free();\n    }\n    // #endif\n\n    /**\n     * Creates a new collider.\n     *\n     * @param desc - The description of the collider.\n     * @param parent - The rigid-body this collider is attached to.\n     */\n    public createCollider(desc: ColliderDesc, parent?: RigidBody): Collider {\n        let parentHandle = parent ? parent.handle : undefined;\n        return this.colliders.createCollider(this.bodies, desc, parentHandle);\n    }\n\n    /**\n     * Creates a new impulse joint from the given joint descriptor.\n     *\n     * @param params - The description of the joint to create.\n     * @param parent1 - The first rigid-body attached to this joint.\n     * @param parent2 - The second rigid-body attached to this joint.\n     * @param wakeUp - Should the attached rigid-bodies be awakened?\n     */\n    public createImpulseJoint(\n        params: JointData,\n        parent1: RigidBody,\n        parent2: RigidBody,\n        wakeUp: boolean,\n    ): ImpulseJoint {\n        return this.impulseJoints.createJoint(\n            this.bodies,\n            params,\n            parent1.handle,\n            parent2.handle,\n            wakeUp,\n        );\n    }\n\n    /**\n     * Creates a new multibody joint from the given joint descriptor.\n     *\n     * @param params - The description of the joint to create.\n     * @param parent1 - The first rigid-body attached to this joint.\n     * @param parent2 - The second rigid-body attached to this joint.\n     * @param wakeUp - Should the attached rigid-bodies be awakened?\n     */\n    public createMultibodyJoint(\n        params: JointData,\n        parent1: RigidBody,\n        parent2: RigidBody,\n        wakeUp: boolean,\n    ): MultibodyJoint {\n        return this.multibodyJoints.createJoint(\n            params,\n            parent1.handle,\n            parent2.handle,\n            wakeUp,\n        );\n    }\n\n    /**\n     * Retrieves a rigid-body from its handle.\n     *\n     * @param handle - The integer handle of the rigid-body to retrieve.\n     */\n    public getRigidBody(handle: RigidBodyHandle): RigidBody {\n        return this.bodies.get(handle);\n    }\n\n    /**\n     * Retrieves a collider from its handle.\n     *\n     * @param handle - The integer handle of the collider to retrieve.\n     */\n    public getCollider(handle: ColliderHandle): Collider {\n        return this.colliders.get(handle);\n    }\n\n    /**\n     * Retrieves an impulse joint from its handle.\n     *\n     * @param handle - The integer handle of the impulse joint to retrieve.\n     */\n    public getImpulseJoint(handle: ImpulseJointHandle): ImpulseJoint {\n        return this.impulseJoints.get(handle);\n    }\n\n    /**\n     * Retrieves an multibody joint from its handle.\n     *\n     * @param handle - The integer handle of the multibody joint to retrieve.\n     */\n    public getMultibodyJoint(handle: MultibodyJointHandle): MultibodyJoint {\n        return this.multibodyJoints.get(handle);\n    }\n\n    /**\n     * Removes the given rigid-body from this physics world.\n     *\n     * This will remove this rigid-body as well as all its attached colliders and joints.\n     * Every other bodies touching or attached by joints to this rigid-body will be woken-up.\n     *\n     * @param body - The rigid-body to remove.\n     */\n    public removeRigidBody(body: RigidBody) {\n        if (this.bodies) {\n            this.bodies.remove(\n                body.handle,\n                this.islands,\n                this.colliders,\n                this.impulseJoints,\n                this.multibodyJoints,\n            );\n        }\n    }\n\n    /**\n     * Removes the given collider from this physics world.\n     *\n     * @param collider - The collider to remove.\n     * @param wakeUp - If set to `true`, the rigid-body this collider is attached to will be awaken.\n     */\n    public removeCollider(collider: Collider, wakeUp: boolean) {\n        if (this.colliders) {\n            this.colliders.remove(\n                collider.handle,\n                this.islands,\n                this.bodies,\n                wakeUp,\n            );\n        }\n    }\n\n    /**\n     * Removes the given impulse joint from this physics world.\n     *\n     * @param joint - The impulse joint to remove.\n     * @param wakeUp - If set to `true`, the rigid-bodies attached by this joint will be awaken.\n     */\n    public removeImpulseJoint(joint: ImpulseJoint, wakeUp: boolean) {\n        if (this.impulseJoints) {\n            this.impulseJoints.remove(joint.handle, wakeUp);\n        }\n    }\n\n    /**\n     * Removes the given multibody joint from this physics world.\n     *\n     * @param joint - The multibody joint to remove.\n     * @param wakeUp - If set to `true`, the rigid-bodies attached by this joint will be awaken.\n     */\n    public removeMultibodyJoint(joint: MultibodyJoint, wakeUp: boolean) {\n        if (this.impulseJoints) {\n            this.multibodyJoints.remove(joint.handle, wakeUp);\n        }\n    }\n\n    /**\n     * Applies the given closure to each collider managed by this physics world.\n     *\n     * @param f(collider) - The function to apply to each collider managed by this physics world. Called as `f(collider)`.\n     */\n    public forEachCollider(f: (collider: Collider) => void) {\n        this.colliders.forEach(f);\n    }\n\n    /**\n     * Applies the given closure to each rigid-body managed by this physics world.\n     *\n     * @param f(body) - The function to apply to each rigid-body managed by this physics world. Called as `f(collider)`.\n     */\n    public forEachRigidBody(f: (body: RigidBody) => void) {\n        this.bodies.forEach(f);\n    }\n\n    /**\n     * Applies the given closure to each active rigid-body managed by this physics world.\n     *\n     * After a short time of inactivity, a rigid-body is automatically deactivated (\"asleep\") by\n     * the physics engine in order to save computational power. A sleeping rigid-body never moves\n     * unless it is moved manually by the user.\n     *\n     * @param f - The function to apply to each active rigid-body managed by this physics world. Called as `f(collider)`.\n     */\n    public forEachActiveRigidBody(f: (body: RigidBody) => void) {\n        this.bodies.forEachActiveRigidBody(this.islands, f);\n    }\n\n    /**\n     * Find the closest intersection between a ray and the physics world.\n     *\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n     *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n     *   whereas `false` implies that all shapes are hollow for this ray-cast.\n     * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n     * @param filter - The callback to filter out which collider will be hit.\n     */\n    public castRay(\n        ray: Ray,\n        maxToi: number,\n        solid: boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ): RayColliderToi | null {\n        return this.queryPipeline.castRay(\n            this.bodies,\n            this.colliders,\n            ray,\n            maxToi,\n            solid,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            this.colliders.castClosure(filterPredicate),\n        );\n    }\n\n    /**\n     * Find the closest intersection between a ray and the physics world.\n     *\n     * This also computes the normal at the hit point.\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n     *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n     *   whereas `false` implies that all shapes are hollow for this ray-cast.\n     * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n     */\n    public castRayAndGetNormal(\n        ray: Ray,\n        maxToi: number,\n        solid: boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ): RayColliderIntersection | null {\n        return this.queryPipeline.castRayAndGetNormal(\n            this.bodies,\n            this.colliders,\n            ray,\n            maxToi,\n            solid,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            this.colliders.castClosure(filterPredicate),\n        );\n    }\n\n    /**\n     * Cast a ray and collects all the intersections between a ray and the scene.\n     *\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n     *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n     *   whereas `false` implies that all shapes are hollow for this ray-cast.\n     * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n     * @param callback - The callback called once per hit (in no particular order) between a ray and a collider.\n     *   If this callback returns `false`, then the cast will stop and no further hits will be detected/reported.\n     */\n    public intersectionsWithRay(\n        ray: Ray,\n        maxToi: number,\n        solid: boolean,\n        callback: (intersect: RayColliderIntersection) => boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ) {\n        this.queryPipeline.intersectionsWithRay(\n            this.bodies,\n            this.colliders,\n            ray,\n            maxToi,\n            solid,\n            callback,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            this.colliders.castClosure(filterPredicate),\n        );\n    }\n\n    /**\n     * Gets the handle of up to one collider intersecting the given shape.\n     *\n     * @param shapePos - The position of the shape used for the intersection test.\n     * @param shapeRot - The orientation of the shape used for the intersection test.\n     * @param shape - The shape used for the intersection test.\n     * @param groups - The bit groups and filter associated to the ray, in order to only\n     *   hit the colliders with collision groups compatible with the ray's group.\n     */\n    public intersectionWithShape(\n        shapePos: Vector,\n        shapeRot: Rotation,\n        shape: Shape,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ): Collider | null {\n        let handle = this.queryPipeline.intersectionWithShape(\n            this.bodies,\n            this.colliders,\n            shapePos,\n            shapeRot,\n            shape,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            this.colliders.castClosure(filterPredicate),\n        );\n        return handle != null ? this.colliders.get(handle) : null;\n    }\n\n    /**\n     * Find the projection of a point on the closest collider.\n     *\n     * @param point - The point to project.\n     * @param solid - If this is set to `true` then the collider shapes are considered to\n     *   be plain (if the point is located inside of a plain shape, its projection is the point\n     *   itself). If it is set to `false` the collider shapes are considered to be hollow\n     *   (if the point is located inside of an hollow shape, it is projected on the shape's\n     *   boundary).\n     * @param groups - The bit groups and filter associated to the point to project, in order to only\n     *   project on colliders with collision groups compatible with the ray's group.\n     */\n    public projectPoint(\n        point: Vector,\n        solid: boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ): PointColliderProjection | null {\n        return this.queryPipeline.projectPoint(\n            this.bodies,\n            this.colliders,\n            point,\n            solid,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            this.colliders.castClosure(filterPredicate),\n        );\n    }\n\n    /**\n     * Find the projection of a point on the closest collider.\n     *\n     * @param point - The point to project.\n     * @param groups - The bit groups and filter associated to the point to project, in order to only\n     *   project on colliders with collision groups compatible with the ray's group.\n     */\n    public projectPointAndGetFeature(\n        point: Vector,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ): PointColliderProjection | null {\n        return this.queryPipeline.projectPointAndGetFeature(\n            this.bodies,\n            this.colliders,\n            point,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            this.colliders.castClosure(filterPredicate),\n        );\n    }\n\n    /**\n     * Find all the colliders containing the given point.\n     *\n     * @param point - The point used for the containment test.\n     * @param groups - The bit groups and filter associated to the point to test, in order to only\n     *   test on colliders with collision groups compatible with the ray's group.\n     * @param callback - A function called with the handles of each collider with a shape\n     *   containing the `point`.\n     */\n    public intersectionsWithPoint(\n        point: Vector,\n        callback: (handle: Collider) => boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ) {\n        this.queryPipeline.intersectionsWithPoint(\n            this.bodies,\n            this.colliders,\n            point,\n            this.colliders.castClosure(callback),\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            this.colliders.castClosure(filterPredicate),\n        );\n    }\n\n    /**\n     * Casts a shape at a constant linear velocity and retrieve the first collider it hits.\n     * This is similar to ray-casting except that we are casting a whole shape instead of\n     * just a point (the ray origin).\n     *\n     * @param shapePos - The initial position of the shape to cast.\n     * @param shapeRot - The initial rotation of the shape to cast.\n     * @param shapeVel - The constant velocity of the shape to cast (i.e. the cast direction).\n     * @param shape - The shape to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the distance traveled by the shape to `shapeVel.norm() * maxToi`.\n     * @param stopAtPenetration - If set to `false`, the linear shape-cast won’t immediately stop if\n     *   the shape is penetrating another shape at its starting point **and** its trajectory is such\n     *   that it’s on a path to exist that penetration state.\n     * @param groups - The bit groups and filter associated to the shape to cast, in order to only\n     *   test on colliders with collision groups compatible with this group.\n     */\n    public castShape(\n        shapePos: Vector,\n        shapeRot: Rotation,\n        shapeVel: Vector,\n        shape: Shape,\n        maxToi: number,\n        stopAtPenetration: boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ): ShapeColliderTOI | null {\n        return this.queryPipeline.castShape(\n            this.bodies,\n            this.colliders,\n            shapePos,\n            shapeRot,\n            shapeVel,\n            shape,\n            maxToi,\n            stopAtPenetration,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            this.colliders.castClosure(filterPredicate),\n        );\n    }\n\n    /**\n     * Retrieve all the colliders intersecting the given shape.\n     *\n     * @param shapePos - The position of the shape to test.\n     * @param shapeRot - The orientation of the shape to test.\n     * @param shape - The shape to test.\n     * @param groups - The bit groups and filter associated to the shape to test, in order to only\n     *   test on colliders with collision groups compatible with this group.\n     * @param callback - A function called with the handles of each collider intersecting the `shape`.\n     */\n    public intersectionsWithShape(\n        shapePos: Vector,\n        shapeRot: Rotation,\n        shape: Shape,\n        callback: (collider: Collider) => boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ) {\n        this.queryPipeline.intersectionsWithShape(\n            this.bodies,\n            this.colliders,\n            shapePos,\n            shapeRot,\n            shape,\n            this.colliders.castClosure(callback),\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            this.colliders.castClosure(filterPredicate),\n        );\n    }\n\n    /**\n     * Finds the handles of all the colliders with an AABB intersecting the given AABB.\n     *\n     * @param aabbCenter - The center of the AABB to test.\n     * @param aabbHalfExtents - The half-extents of the AABB to test.\n     * @param callback - The callback that will be called with the handles of all the colliders\n     *                   currently intersecting the given AABB.\n     */\n    public collidersWithAabbIntersectingAabb(\n        aabbCenter: Vector,\n        aabbHalfExtents: Vector,\n        callback: (handle: Collider) => boolean,\n    ) {\n        this.queryPipeline.collidersWithAabbIntersectingAabb(\n            aabbCenter,\n            aabbHalfExtents,\n            this.colliders.castClosure(callback),\n        );\n    }\n\n    /**\n     * Enumerates all the colliders potentially in contact with the given collider.\n     *\n     * @param collider1 - The second collider involved in the contact.\n     * @param f - Closure that will be called on each collider that is in contact with `collider1`.\n     */\n    public contactPairsWith(\n        collider1: Collider,\n        f: (collider2: Collider) => void,\n    ) {\n        this.narrowPhase.contactPairsWith(\n            collider1.handle,\n            this.colliders.castClosure(f),\n        );\n    }\n\n    /**\n     * Enumerates all the colliders intersecting the given colliders, assuming one of them\n     * is a sensor.\n     */\n    public intersectionPairsWith(\n        collider1: Collider,\n        f: (collider2: Collider) => void,\n    ) {\n        this.narrowPhase.intersectionPairsWith(\n            collider1.handle,\n            this.colliders.castClosure(f),\n        );\n    }\n\n    /**\n     * Iterates through all the contact manifolds between the given pair of colliders.\n     *\n     * @param collider1 - The first collider involved in the contact.\n     * @param collider2 - The second collider involved in the contact.\n     * @param f - Closure that will be called on each contact manifold between the two colliders. If the second argument\n     *            passed to this closure is `true`, then the contact manifold data is flipped, i.e., methods like `localNormal1`\n     *            actually apply to the `collider2` and fields like `localNormal2` apply to the `collider1`.\n     */\n    public contactPair(\n        collider1: Collider,\n        collider2: Collider,\n        f: (manifold: TempContactManifold, flipped: boolean) => void,\n    ) {\n        this.narrowPhase.contactPair(collider1.handle, collider2.handle, f);\n    }\n\n    /**\n     * Returns `true` if `collider1` and `collider2` intersect and at least one of them is a sensor.\n     * @param collider1 − The first collider involved in the intersection.\n     * @param collider2 − The second collider involved in the intersection.\n     */\n    public intersectionPair(collider1: Collider, collider2: Collider): boolean {\n        return this.narrowPhase.intersectionPair(\n            collider1.handle,\n            collider2.handle,\n        );\n    }\n}\n","import {RawColliderSet} from \"../raw\";\nimport {Coarena} from \"../coarena\";\nimport {RotationOps, VectorOps} from \"../math\";\nimport {Collider, ColliderDesc, ColliderHandle} from \"./collider\";\nimport {ImpulseJointHandle, IslandManager, RigidBodyHandle} from \"../dynamics\";\nimport {RigidBodySet} from \"../dynamics\";\n\n/**\n * A set of rigid bodies that can be handled by a physics pipeline.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `colliderSet.free()`\n * once you are done using it (and all the rigid-bodies it created).\n */\nexport class ColliderSet {\n    raw: RawColliderSet;\n    private map: Coarena<Collider>;\n\n    /**\n     * Release the WASM memory occupied by this collider set.\n     */\n    public free() {\n        if (!!this.raw) {\n            this.raw.free();\n        }\n        this.raw = undefined;\n\n        if (!!this.map) {\n            this.map.clear();\n        }\n        this.map = undefined;\n    }\n\n    constructor(raw?: RawColliderSet) {\n        this.raw = raw || new RawColliderSet();\n        this.map = new Coarena<Collider>();\n        // Initialize the map with the existing elements, if any.\n        if (raw) {\n            raw.forEachColliderHandle((handle: ColliderHandle) => {\n                this.map.set(handle, new Collider(this, handle, null));\n            });\n        }\n    }\n\n    /** @internal */\n    public castClosure<Res>(\n        f?: (collider: Collider) => Res,\n    ): (handle: ColliderHandle) => Res | undefined {\n        return (handle) => {\n            if (!!f) {\n                return f(this.get(handle));\n            } else {\n                return undefined;\n            }\n        };\n    }\n\n    /** @internal */\n    public finalizeDeserialization(bodies: RigidBodySet) {\n        this.map.forEach((collider) =>\n            collider.finalizeDeserialization(bodies),\n        );\n    }\n\n    /**\n     * Creates a new collider and return its integer handle.\n     *\n     * @param bodies - The set of bodies where the collider's parent can be found.\n     * @param desc - The collider's description.\n     * @param parentHandle - The integer handle of the rigid-body this collider is attached to.\n     */\n    public createCollider(\n        bodies: RigidBodySet,\n        desc: ColliderDesc,\n        parentHandle: RigidBodyHandle,\n    ): Collider {\n        let hasParent = parentHandle != undefined && parentHandle != null;\n\n        if (hasParent && isNaN(parentHandle))\n            throw Error(\n                \"Cannot create a collider with a parent rigid-body handle that is not a number.\",\n            );\n\n        let rawShape = desc.shape.intoRaw();\n        let rawTra = VectorOps.intoRaw(desc.translation);\n        let rawRot = RotationOps.intoRaw(desc.rotation);\n        let rawCom = VectorOps.intoRaw(desc.centerOfMass);\n\n        // #if DIM3\n        let rawPrincipalInertia = VectorOps.intoRaw(\n            desc.principalAngularInertia,\n        );\n        let rawInertiaFrame = RotationOps.intoRaw(\n            desc.angularInertiaLocalFrame,\n        );\n        // #endif\n\n        let handle = this.raw.createCollider(\n            desc.enabled,\n            rawShape,\n            rawTra,\n            rawRot,\n            desc.massPropsMode,\n            desc.mass,\n            rawCom,\n            // #if DIM3\n            rawPrincipalInertia,\n            rawInertiaFrame,\n            // #endif\n            desc.density,\n            desc.friction,\n            desc.restitution,\n            desc.frictionCombineRule,\n            desc.restitutionCombineRule,\n            desc.isSensor,\n            desc.collisionGroups,\n            desc.solverGroups,\n            desc.activeCollisionTypes,\n            desc.activeHooks,\n            desc.activeEvents,\n            desc.contactForceEventThreshold,\n            hasParent,\n            hasParent ? parentHandle : 0,\n            bodies.raw,\n        );\n\n        rawShape.free();\n        rawTra.free();\n        rawRot.free();\n        rawCom.free();\n\n        // #if DIM3\n        rawPrincipalInertia.free();\n        rawInertiaFrame.free();\n        // #endif\n\n        let parent = hasParent ? bodies.get(parentHandle) : null;\n        let collider = new Collider(this, handle, parent, desc.shape);\n        this.map.set(handle, collider);\n        return collider;\n    }\n\n    /**\n     * Remove a collider from this set.\n     *\n     * @param handle - The integer handle of the collider to remove.\n     * @param bodies - The set of rigid-body containing the rigid-body the collider is attached to.\n     * @param wakeUp - If `true`, the rigid-body the removed collider is attached to will be woken-up automatically.\n     */\n    public remove(\n        handle: ColliderHandle,\n        islands: IslandManager,\n        bodies: RigidBodySet,\n        wakeUp: boolean,\n    ) {\n        this.raw.remove(handle, islands.raw, bodies.raw, wakeUp);\n        this.unmap(handle);\n    }\n\n    /**\n     * Internal function, do not call directly.\n     * @param handle\n     */\n    public unmap(handle: ImpulseJointHandle) {\n        this.map.delete(handle);\n    }\n\n    /**\n     * Gets the rigid-body with the given handle.\n     *\n     * @param handle - The handle of the rigid-body to retrieve.\n     */\n    public get(handle: ColliderHandle): Collider | null {\n        return this.map.get(handle);\n    }\n\n    /**\n     * The number of colliders on this set.\n     */\n    public len(): number {\n        return this.map.len();\n    }\n\n    /**\n     * Does this set contain a collider with the given handle?\n     *\n     * @param handle - The collider handle to check.\n     */\n    public contains(handle: ColliderHandle): boolean {\n        return this.get(handle) != null;\n    }\n\n    /**\n     * Applies the given closure to each collider contained by this set.\n     *\n     * @param f - The closure to apply.\n     */\n    public forEach(f: (collider: Collider) => void) {\n        this.map.forEach(f);\n    }\n\n    /**\n     * Gets all colliders in the list.\n     *\n     * @returns collider list.\n     */\n    public getAll(): Collider[] {\n        return this.map.getAll();\n    }\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","// @ts-ignore\nimport wasmBase64 from \"../pkg3d/rapier_wasm3d_bg.wasm\";\nimport wasmInit from \"../pkg3d/rapier_wasm3d\";\nimport base64 from \"base64-js\";\n\n/**\n * Initializes RAPIER.\n * Has to be called and awaited before using any library methods.\n */\nexport async function init() {\n    await wasmInit(base64.toByteArray(wasmBase64 as unknown as string).buffer);\n}\n","import {version as vers} from \"./raw\";\n\nexport function version(): string {\n    return vers();\n}\n\nexport * from \"./math\";\nexport * from \"./dynamics\";\nexport * from \"./geometry\";\nexport * from \"./pipeline\";\nexport * from \"./init\";\nexport * from \"./control\";\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}