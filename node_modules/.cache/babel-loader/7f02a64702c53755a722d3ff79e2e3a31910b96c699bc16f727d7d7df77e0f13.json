{"ast":null,"code":"import { BufferGeometry, Float32BufferAttribute, LineSegments, LineBasicMaterial, Matrix3, Vector3 } from 'three';\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _normalMatrix = new Matrix3();\nclass VertexNormalsHelper extends LineSegments {\n  constructor(object, size = 1, color = 0xff0000) {\n    const geometry = new BufferGeometry();\n    const nNormals = object.geometry.attributes.normal.count;\n    const positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n    geometry.setAttribute('position', positions);\n    super(geometry, new LineBasicMaterial({\n      color,\n      toneMapped: false\n    }));\n    this.object = object;\n    this.size = size;\n    this.type = 'VertexNormalsHelper';\n\n    //\n\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n  update() {\n    this.object.updateMatrixWorld(true);\n    _normalMatrix.getNormalMatrix(this.object.matrixWorld);\n    const matrixWorld = this.object.matrixWorld;\n    const position = this.geometry.attributes.position;\n\n    //\n\n    const objGeometry = this.object.geometry;\n    if (objGeometry) {\n      const objPos = objGeometry.attributes.position;\n      const objNorm = objGeometry.attributes.normal;\n      let idx = 0;\n\n      // for simplicity, ignore index and drawcalls, and render every normal\n\n      for (let j = 0, jl = objPos.count; j < jl; j++) {\n        _v1.fromBufferAttribute(objPos, j).applyMatrix4(matrixWorld);\n        _v2.fromBufferAttribute(objNorm, j);\n        _v2.applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\n        position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n        idx = idx + 1;\n        position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n        idx = idx + 1;\n      }\n    }\n    position.needsUpdate = true;\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\nexport { VertexNormalsHelper };","map":{"version":3,"names":["BufferGeometry","Float32BufferAttribute","LineSegments","LineBasicMaterial","Matrix3","Vector3","_v1","_v2","_normalMatrix","VertexNormalsHelper","constructor","object","size","color","geometry","nNormals","attributes","normal","count","positions","setAttribute","toneMapped","type","matrixAutoUpdate","update","updateMatrixWorld","getNormalMatrix","matrixWorld","position","objGeometry","objPos","objNorm","idx","j","jl","fromBufferAttribute","applyMatrix4","applyMatrix3","normalize","multiplyScalar","add","setXYZ","x","y","z","needsUpdate","dispose","material"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/three/examples/jsm/helpers/VertexNormalsHelper.js"],"sourcesContent":["import {\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tLineSegments,\n\tLineBasicMaterial,\n\tMatrix3,\n\tVector3\n} from 'three';\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _normalMatrix = new Matrix3();\n\nclass VertexNormalsHelper extends LineSegments {\n\n\tconstructor( object, size = 1, color = 0xff0000 ) {\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst nNormals = object.geometry.attributes.normal.count;\n\t\tconst positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.setAttribute( 'position', positions );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.size = size;\n\t\tthis.type = 'VertexNormalsHelper';\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\t_normalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tconst matrixWorld = this.object.matrixWorld;\n\n\t\tconst position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tconst objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry ) {\n\n\t\t\tconst objPos = objGeometry.attributes.position;\n\n\t\t\tconst objNorm = objGeometry.attributes.normal;\n\n\t\t\tlet idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( let j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\t_v1.fromBufferAttribute( objPos, j ).applyMatrix4( matrixWorld );\n\n\t\t\t\t_v2.fromBufferAttribute( objNorm, j );\n\n\t\t\t\t_v2.applyMatrix3( _normalMatrix ).normalize().multiplyScalar( this.size ).add( _v1 );\n\n\t\t\t\tposition.setXYZ( idx, _v1.x, _v1.y, _v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, _v2.x, _v2.y, _v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nexport { VertexNormalsHelper };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}