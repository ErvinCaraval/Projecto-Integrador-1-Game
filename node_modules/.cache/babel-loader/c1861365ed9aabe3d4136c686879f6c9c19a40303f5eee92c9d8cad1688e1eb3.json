{"ast":null,"code":"var _jsxFileName = \"/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/src/pages/level1/characters/avatar/Avatar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { useAvatar } from \"../../../../context/AvatarContext\";\nimport { useAnimations, useGLTF } from \"@react-three/drei\";\nimport { RigidBody } from \"@react-three/rapier\";\nimport { CapsuleCollider } from \"@react-three/cannon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Avatar() {\n  _s();\n  const avatarRef = useRef();\n  const {\n    avatar\n  } = useAvatar();\n  const {\n    nodes,\n    animations\n  } = useGLTF('/assets/models/avatar/comadreja.glb');\n  const {\n    actions\n  } = useAnimations(animations, avatarRef);\n  useEffect(() => {\n    if (avatar.animation && actions[avatar.animation]) {\n      actions[avatar.animation].reset().fadeIn(0.5).play();\n    }\n    return () => {\n      if (avatar.animation && actions[avatar.animation]) {\n        actions[avatar.animation].fadeOut(0.5);\n      }\n    };\n  }, [actions, avatar.animation]);\n  return /*#__PURE__*/_jsxDEV(RigidBody, {\n    ref: avatarRef,\n    position: [0.004, 0.275, 0.042],\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      name: \"Scene\",\n      children: /*#__PURE__*/_jsxDEV(\"group\", {\n        name: \"Armature\",\n        position: [0, 0, 0],\n        rotation: [0, 0, 0],\n        scale: [1, 1, 1],\n        children: [/*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n          name: \"Cube004\",\n          geometry: nodes.Cube004.geometry,\n          material: nodes.Cube004.material,\n          skeleton: nodes.Cube004.skeleton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n          name: \"Cube004_1\",\n          geometry: nodes.Cube004_1.geometry,\n          material: nodes.Cube004_1.material,\n          skeleton: nodes.Cube004_1.skeleton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n          name: \"Cube004_2\",\n          geometry: nodes.Cube004_2.geometry,\n          material: nodes.Cube004_2.material,\n          skeleton: nodes.Cube004_2.skeleton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CapsuleCollider, {\n          args: [0.5, 0.5]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Avatar, \"wDvrn84VbLDr/JddLKd0pa7I2+o=\", false, function () {\n  return [useAvatar, useGLTF, useAnimations];\n});\n_c = Avatar;\nvar _c;\n$RefreshReg$(_c, \"Avatar\");","map":{"version":3,"names":["React","useEffect","useRef","useAvatar","useAnimations","useGLTF","RigidBody","CapsuleCollider","jsxDEV","_jsxDEV","Avatar","_s","avatarRef","avatar","nodes","animations","actions","animation","reset","fadeIn","play","fadeOut","ref","position","children","name","rotation","scale","geometry","Cube004","material","skeleton","fileName","_jsxFileName","lineNumber","columnNumber","Cube004_1","Cube004_2","args","_c","$RefreshReg$"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/src/pages/level1/characters/avatar/Avatar.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useAvatar } from \"../../../../context/AvatarContext\";\nimport { useAnimations, useGLTF } from \"@react-three/drei\";\nimport { RigidBody } from \"@react-three/rapier\";\nimport { CapsuleCollider } from \"@react-three/cannon\";\n\nexport default function Avatar() {\n  const avatarRef = useRef();\n  const { avatar } = useAvatar();\n  const { nodes, animations } = useGLTF('/assets/models/avatar/comadreja.glb');\n\n  const { actions } = useAnimations(animations, avatarRef);\n  \n  useEffect(() => {\n    if (avatar.animation && actions[avatar.animation]) {\n      actions[avatar.animation].reset().fadeIn(0.5).play();\n    }\n    return () => {\n      if (avatar.animation && actions[avatar.animation]) {\n        actions[avatar.animation].fadeOut(0.5);\n      }\n    }\n  }, [actions, avatar.animation]);\n\n  return (\n    <RigidBody ref={avatarRef} position={[0.004, 0.275, 0.042]}>\n      <group name=\"Scene\">\n        <group name=\"Armature\" position={[0, 0, 0]} rotation={[0, 0, 0]} scale={[1, 1, 1]}>\n          <skinnedMesh\n            name=\"Cube004\"\n            geometry={nodes.Cube004.geometry}\n            material={nodes.Cube004.material}\n            skeleton={nodes.Cube004.skeleton}\n          />\n          <skinnedMesh\n            name=\"Cube004_1\"\n            geometry={nodes.Cube004_1.geometry}\n            material={nodes.Cube004_1.material}\n            skeleton={nodes.Cube004_1.skeleton}\n          />\n          <skinnedMesh\n            name=\"Cube004_2\"\n            geometry={nodes.Cube004_2.geometry}\n            material={nodes.Cube004_2.material}\n            skeleton={nodes.Cube004_2.skeleton}\n          />\n          <CapsuleCollider args={[0.5, 0.5]} />\n        </group>\n      </group>\n    </RigidBody>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}