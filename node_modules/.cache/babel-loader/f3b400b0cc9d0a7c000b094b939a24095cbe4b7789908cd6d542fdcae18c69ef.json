{"ast":null,"code":"import { AnimationMixer, Object3D, Quaternion, Vector3 } from 'three';\nimport { CCDIKSolver } from '../animation/CCDIKSolver.js';\nimport { MMDPhysics } from '../animation/MMDPhysics.js';\n\n/**\n * MMDAnimationHelper handles animation of MMD assets loaded by MMDLoader\n * with MMD special features as IK, Grant, and Physics.\n *\n * Dependencies\n *  - ammo.js https://github.com/kripken/ammo.js\n *  - MMDPhysics\n *  - CCDIKSolver\n *\n * TODO\n *  - more precise grant skinning support.\n */\nclass MMDAnimationHelper {\n  /**\n   * @param {Object} params - (optional)\n   * @param {boolean} params.sync - Whether animation durations of added objects are synched. Default is true.\n   * @param {Number} params.afterglow - Default is 0.0.\n   * @param {boolean} params.resetPhysicsOnLoop - Default is true.\n   */\n  constructor(params = {}) {\n    this.meshes = [];\n    this.camera = null;\n    this.cameraTarget = new Object3D();\n    this.cameraTarget.name = 'target';\n    this.audio = null;\n    this.audioManager = null;\n    this.objects = new WeakMap();\n    this.configuration = {\n      sync: params.sync !== undefined ? params.sync : true,\n      afterglow: params.afterglow !== undefined ? params.afterglow : 0.0,\n      resetPhysicsOnLoop: params.resetPhysicsOnLoop !== undefined ? params.resetPhysicsOnLoop : true,\n      pmxAnimation: params.pmxAnimation !== undefined ? params.pmxAnimation : false\n    };\n    this.enabled = {\n      animation: true,\n      ik: true,\n      grant: true,\n      physics: true,\n      cameraAnimation: true\n    };\n    this.onBeforePhysics = function /* mesh */ () {};\n\n    // experimental\n    this.sharedPhysics = false;\n    this.masterPhysics = null;\n  }\n\n  /**\n   * Adds an Three.js Object to helper and setups animation.\n   * The anmation durations of added objects are synched\n   * if this.configuration.sync is true.\n   *\n   * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\n   * @param {Object} params - (optional)\n   * @param {THREE.AnimationClip|Array<THREE.AnimationClip>} params.animation - Only for THREE.SkinnedMesh and THREE.Camera. Default is undefined.\n   * @param {boolean} params.physics - Only for THREE.SkinnedMesh. Default is true.\n   * @param {Integer} params.warmup - Only for THREE.SkinnedMesh and physics is true. Default is 60.\n   * @param {Number} params.unitStep - Only for THREE.SkinnedMesh and physics is true. Default is 1 / 65.\n   * @param {Integer} params.maxStepNum - Only for THREE.SkinnedMesh and physics is true. Default is 3.\n   * @param {Vector3} params.gravity - Only for THREE.SkinnedMesh and physics is true. Default ( 0, - 9.8 * 10, 0 ).\n   * @param {Number} params.delayTime - Only for THREE.Audio. Default is 0.0.\n   * @return {MMDAnimationHelper}\n   */\n  add(object, params = {}) {\n    if (object.isSkinnedMesh) {\n      this._addMesh(object, params);\n    } else if (object.isCamera) {\n      this._setupCamera(object, params);\n    } else if (object.type === 'Audio') {\n      this._setupAudio(object, params);\n    } else {\n      throw new Error('THREE.MMDAnimationHelper.add: ' + 'accepts only ' + 'THREE.SkinnedMesh or ' + 'THREE.Camera or ' + 'THREE.Audio instance.');\n    }\n    if (this.configuration.sync) this._syncDuration();\n    return this;\n  }\n\n  /**\n   * Removes an Three.js Object from helper.\n   *\n   * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\n   * @return {MMDAnimationHelper}\n   */\n  remove(object) {\n    if (object.isSkinnedMesh) {\n      this._removeMesh(object);\n    } else if (object.isCamera) {\n      this._clearCamera(object);\n    } else if (object.type === 'Audio') {\n      this._clearAudio(object);\n    } else {\n      throw new Error('THREE.MMDAnimationHelper.remove: ' + 'accepts only ' + 'THREE.SkinnedMesh or ' + 'THREE.Camera or ' + 'THREE.Audio instance.');\n    }\n    if (this.configuration.sync) this._syncDuration();\n    return this;\n  }\n\n  /**\n   * Updates the animation.\n   *\n   * @param {Number} delta\n   * @return {MMDAnimationHelper}\n   */\n  update(delta) {\n    if (this.audioManager !== null) this.audioManager.control(delta);\n    for (let i = 0; i < this.meshes.length; i++) {\n      this._animateMesh(this.meshes[i], delta);\n    }\n    if (this.sharedPhysics) this._updateSharedPhysics(delta);\n    if (this.camera !== null) this._animateCamera(this.camera, delta);\n    return this;\n  }\n\n  /**\n   * Changes the pose of SkinnedMesh as VPD specifies.\n   *\n   * @param {THREE.SkinnedMesh} mesh\n   * @param {Object} vpd - VPD content parsed MMDParser\n   * @param {Object} params - (optional)\n   * @param {boolean} params.resetPose - Default is true.\n   * @param {boolean} params.ik - Default is true.\n   * @param {boolean} params.grant - Default is true.\n   * @return {MMDAnimationHelper}\n   */\n  pose(mesh, vpd, params = {}) {\n    if (params.resetPose !== false) mesh.pose();\n    const bones = mesh.skeleton.bones;\n    const boneParams = vpd.bones;\n    const boneNameDictionary = {};\n    for (let i = 0, il = bones.length; i < il; i++) {\n      boneNameDictionary[bones[i].name] = i;\n    }\n    const vector = new Vector3();\n    const quaternion = new Quaternion();\n    for (let i = 0, il = boneParams.length; i < il; i++) {\n      const boneParam = boneParams[i];\n      const boneIndex = boneNameDictionary[boneParam.name];\n      if (boneIndex === undefined) continue;\n      const bone = bones[boneIndex];\n      bone.position.add(vector.fromArray(boneParam.translation));\n      bone.quaternion.multiply(quaternion.fromArray(boneParam.quaternion));\n    }\n    mesh.updateMatrixWorld(true);\n\n    // PMX animation system special path\n    if (this.configuration.pmxAnimation && mesh.geometry.userData.MMD && mesh.geometry.userData.MMD.format === 'pmx') {\n      const sortedBonesData = this._sortBoneDataArray(mesh.geometry.userData.MMD.bones.slice());\n      const ikSolver = params.ik !== false ? this._createCCDIKSolver(mesh) : null;\n      const grantSolver = params.grant !== false ? this.createGrantSolver(mesh) : null;\n      this._animatePMXMesh(mesh, sortedBonesData, ikSolver, grantSolver);\n    } else {\n      if (params.ik !== false) {\n        this._createCCDIKSolver(mesh).update();\n      }\n      if (params.grant !== false) {\n        this.createGrantSolver(mesh).update();\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Enabes/Disables an animation feature.\n   *\n   * @param {string} key\n   * @param {boolean} enabled\n   * @return {MMDAnimationHelper}\n   */\n  enable(key, enabled) {\n    if (this.enabled[key] === undefined) {\n      throw new Error('THREE.MMDAnimationHelper.enable: ' + 'unknown key ' + key);\n    }\n    this.enabled[key] = enabled;\n    if (key === 'physics') {\n      for (let i = 0, il = this.meshes.length; i < il; i++) {\n        this._optimizeIK(this.meshes[i], enabled);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Creates an GrantSolver instance.\n   *\n   * @param {THREE.SkinnedMesh} mesh\n   * @return {GrantSolver}\n   */\n  createGrantSolver(mesh) {\n    return new GrantSolver(mesh, mesh.geometry.userData.MMD.grants);\n  }\n\n  // private methods\n\n  _addMesh(mesh, params) {\n    if (this.meshes.indexOf(mesh) >= 0) {\n      throw new Error('THREE.MMDAnimationHelper._addMesh: ' + 'SkinnedMesh \\'' + mesh.name + '\\' has already been added.');\n    }\n    this.meshes.push(mesh);\n    this.objects.set(mesh, {\n      looped: false\n    });\n    this._setupMeshAnimation(mesh, params.animation);\n    if (params.physics !== false) {\n      this._setupMeshPhysics(mesh, params);\n    }\n    return this;\n  }\n  _setupCamera(camera, params) {\n    if (this.camera === camera) {\n      throw new Error('THREE.MMDAnimationHelper._setupCamera: ' + 'Camera \\'' + camera.name + '\\' has already been set.');\n    }\n    if (this.camera) this.clearCamera(this.camera);\n    this.camera = camera;\n    camera.add(this.cameraTarget);\n    this.objects.set(camera, {});\n    if (params.animation !== undefined) {\n      this._setupCameraAnimation(camera, params.animation);\n    }\n    return this;\n  }\n  _setupAudio(audio, params) {\n    if (this.audio === audio) {\n      throw new Error('THREE.MMDAnimationHelper._setupAudio: ' + 'Audio \\'' + audio.name + '\\' has already been set.');\n    }\n    if (this.audio) this.clearAudio(this.audio);\n    this.audio = audio;\n    this.audioManager = new AudioManager(audio, params);\n    this.objects.set(this.audioManager, {\n      duration: this.audioManager.duration\n    });\n    return this;\n  }\n  _removeMesh(mesh) {\n    let found = false;\n    let writeIndex = 0;\n    for (let i = 0, il = this.meshes.length; i < il; i++) {\n      if (this.meshes[i] === mesh) {\n        this.objects.delete(mesh);\n        found = true;\n        continue;\n      }\n      this.meshes[writeIndex++] = this.meshes[i];\n    }\n    if (!found) {\n      throw new Error('THREE.MMDAnimationHelper._removeMesh: ' + 'SkinnedMesh \\'' + mesh.name + '\\' has not been added yet.');\n    }\n    this.meshes.length = writeIndex;\n    return this;\n  }\n  _clearCamera(camera) {\n    if (camera !== this.camera) {\n      throw new Error('THREE.MMDAnimationHelper._clearCamera: ' + 'Camera \\'' + camera.name + '\\' has not been set yet.');\n    }\n    this.camera.remove(this.cameraTarget);\n    this.objects.delete(this.camera);\n    this.camera = null;\n    return this;\n  }\n  _clearAudio(audio) {\n    if (audio !== this.audio) {\n      throw new Error('THREE.MMDAnimationHelper._clearAudio: ' + 'Audio \\'' + audio.name + '\\' has not been set yet.');\n    }\n    this.objects.delete(this.audioManager);\n    this.audio = null;\n    this.audioManager = null;\n    return this;\n  }\n  _setupMeshAnimation(mesh, animation) {\n    const objects = this.objects.get(mesh);\n    if (animation !== undefined) {\n      const animations = Array.isArray(animation) ? animation : [animation];\n      objects.mixer = new AnimationMixer(mesh);\n      for (let i = 0, il = animations.length; i < il; i++) {\n        objects.mixer.clipAction(animations[i]).play();\n      }\n\n      // TODO: find a workaround not to access ._clip looking like a private property\n      objects.mixer.addEventListener('loop', function (event) {\n        const tracks = event.action._clip.tracks;\n        if (tracks.length > 0 && tracks[0].name.slice(0, 6) !== '.bones') return;\n        objects.looped = true;\n      });\n    }\n    objects.ikSolver = this._createCCDIKSolver(mesh);\n    objects.grantSolver = this.createGrantSolver(mesh);\n    return this;\n  }\n  _setupCameraAnimation(camera, animation) {\n    const animations = Array.isArray(animation) ? animation : [animation];\n    const objects = this.objects.get(camera);\n    objects.mixer = new AnimationMixer(camera);\n    for (let i = 0, il = animations.length; i < il; i++) {\n      objects.mixer.clipAction(animations[i]).play();\n    }\n  }\n  _setupMeshPhysics(mesh, params) {\n    const objects = this.objects.get(mesh);\n\n    // shared physics is experimental\n\n    if (params.world === undefined && this.sharedPhysics) {\n      const masterPhysics = this._getMasterPhysics();\n      if (masterPhysics !== null) world = masterPhysics.world; // eslint-disable-line no-undef\n    }\n    objects.physics = this._createMMDPhysics(mesh, params);\n    if (objects.mixer && params.animationWarmup !== false) {\n      this._animateMesh(mesh, 0);\n      objects.physics.reset();\n    }\n    objects.physics.warmup(params.warmup !== undefined ? params.warmup : 60);\n    this._optimizeIK(mesh, true);\n  }\n  _animateMesh(mesh, delta) {\n    const objects = this.objects.get(mesh);\n    const mixer = objects.mixer;\n    const ikSolver = objects.ikSolver;\n    const grantSolver = objects.grantSolver;\n    const physics = objects.physics;\n    const looped = objects.looped;\n    if (mixer && this.enabled.animation) {\n      // alternate solution to save/restore bones but less performant?\n      //mesh.pose();\n      //this._updatePropertyMixersBuffer( mesh );\n\n      this._restoreBones(mesh);\n      mixer.update(delta);\n      this._saveBones(mesh);\n\n      // PMX animation system special path\n      if (this.configuration.pmxAnimation && mesh.geometry.userData.MMD && mesh.geometry.userData.MMD.format === 'pmx') {\n        if (!objects.sortedBonesData) objects.sortedBonesData = this._sortBoneDataArray(mesh.geometry.userData.MMD.bones.slice());\n        this._animatePMXMesh(mesh, objects.sortedBonesData, ikSolver && this.enabled.ik ? ikSolver : null, grantSolver && this.enabled.grant ? grantSolver : null);\n      } else {\n        if (ikSolver && this.enabled.ik) {\n          mesh.updateMatrixWorld(true);\n          ikSolver.update();\n        }\n        if (grantSolver && this.enabled.grant) {\n          grantSolver.update();\n        }\n      }\n    }\n    if (looped === true && this.enabled.physics) {\n      if (physics && this.configuration.resetPhysicsOnLoop) physics.reset();\n      objects.looped = false;\n    }\n    if (physics && this.enabled.physics && !this.sharedPhysics) {\n      this.onBeforePhysics(mesh);\n      physics.update(delta);\n    }\n  }\n\n  // Sort bones in order by 1. transformationClass and 2. bone index.\n  // In PMX animation system, bone transformations should be processed\n  // in this order.\n  _sortBoneDataArray(boneDataArray) {\n    return boneDataArray.sort(function (a, b) {\n      if (a.transformationClass !== b.transformationClass) {\n        return a.transformationClass - b.transformationClass;\n      } else {\n        return a.index - b.index;\n      }\n    });\n  }\n\n  // PMX Animation system is a bit too complex and doesn't great match to\n  // Three.js Animation system. This method attempts to simulate it as much as\n  // possible but doesn't perfectly simulate.\n  // This method is more costly than the regular one so\n  // you are recommended to set constructor parameter \"pmxAnimation: true\"\n  // only if your PMX model animation doesn't work well.\n  // If you need better method you would be required to write your own.\n  _animatePMXMesh(mesh, sortedBonesData, ikSolver, grantSolver) {\n    _quaternionIndex = 0;\n    _grantResultMap.clear();\n    for (let i = 0, il = sortedBonesData.length; i < il; i++) {\n      updateOne(mesh, sortedBonesData[i].index, ikSolver, grantSolver);\n    }\n    mesh.updateMatrixWorld(true);\n    return this;\n  }\n  _animateCamera(camera, delta) {\n    const mixer = this.objects.get(camera).mixer;\n    if (mixer && this.enabled.cameraAnimation) {\n      mixer.update(delta);\n      camera.updateProjectionMatrix();\n      camera.up.set(0, 1, 0);\n      camera.up.applyQuaternion(camera.quaternion);\n      camera.lookAt(this.cameraTarget.position);\n    }\n  }\n  _optimizeIK(mesh, physicsEnabled) {\n    const iks = mesh.geometry.userData.MMD.iks;\n    const bones = mesh.geometry.userData.MMD.bones;\n    for (let i = 0, il = iks.length; i < il; i++) {\n      const ik = iks[i];\n      const links = ik.links;\n      for (let j = 0, jl = links.length; j < jl; j++) {\n        const link = links[j];\n        if (physicsEnabled === true) {\n          // disable IK of the bone the corresponding rigidBody type of which is 1 or 2\n          // because its rotation will be overriden by physics\n          link.enabled = bones[link.index].rigidBodyType > 0 ? false : true;\n        } else {\n          link.enabled = true;\n        }\n      }\n    }\n  }\n  _createCCDIKSolver(mesh) {\n    if (CCDIKSolver === undefined) {\n      throw new Error('THREE.MMDAnimationHelper: Import CCDIKSolver.');\n    }\n    return new CCDIKSolver(mesh, mesh.geometry.userData.MMD.iks);\n  }\n  _createMMDPhysics(mesh, params) {\n    if (MMDPhysics === undefined) {\n      throw new Error('THREE.MMDPhysics: Import MMDPhysics.');\n    }\n    return new MMDPhysics(mesh, mesh.geometry.userData.MMD.rigidBodies, mesh.geometry.userData.MMD.constraints, params);\n  }\n\n  /*\n   * Detects the longest duration and then sets it to them to sync.\n   * TODO: Not to access private properties ( ._actions and ._clip )\n   */\n  _syncDuration() {\n    let max = 0.0;\n    const objects = this.objects;\n    const meshes = this.meshes;\n    const camera = this.camera;\n    const audioManager = this.audioManager;\n\n    // get the longest duration\n\n    for (let i = 0, il = meshes.length; i < il; i++) {\n      const mixer = this.objects.get(meshes[i]).mixer;\n      if (mixer === undefined) continue;\n      for (let j = 0; j < mixer._actions.length; j++) {\n        const clip = mixer._actions[j]._clip;\n        if (!objects.has(clip)) {\n          objects.set(clip, {\n            duration: clip.duration\n          });\n        }\n        max = Math.max(max, objects.get(clip).duration);\n      }\n    }\n    if (camera !== null) {\n      const mixer = this.objects.get(camera).mixer;\n      if (mixer !== undefined) {\n        for (let i = 0, il = mixer._actions.length; i < il; i++) {\n          const clip = mixer._actions[i]._clip;\n          if (!objects.has(clip)) {\n            objects.set(clip, {\n              duration: clip.duration\n            });\n          }\n          max = Math.max(max, objects.get(clip).duration);\n        }\n      }\n    }\n    if (audioManager !== null) {\n      max = Math.max(max, objects.get(audioManager).duration);\n    }\n    max += this.configuration.afterglow;\n\n    // update the duration\n\n    for (let i = 0, il = this.meshes.length; i < il; i++) {\n      const mixer = this.objects.get(this.meshes[i]).mixer;\n      if (mixer === undefined) continue;\n      for (let j = 0, jl = mixer._actions.length; j < jl; j++) {\n        mixer._actions[j]._clip.duration = max;\n      }\n    }\n    if (camera !== null) {\n      const mixer = this.objects.get(camera).mixer;\n      if (mixer !== undefined) {\n        for (let i = 0, il = mixer._actions.length; i < il; i++) {\n          mixer._actions[i]._clip.duration = max;\n        }\n      }\n    }\n    if (audioManager !== null) {\n      audioManager.duration = max;\n    }\n  }\n\n  // workaround\n\n  _updatePropertyMixersBuffer(mesh) {\n    const mixer = this.objects.get(mesh).mixer;\n    const propertyMixers = mixer._bindings;\n    const accuIndex = mixer._accuIndex;\n    for (let i = 0, il = propertyMixers.length; i < il; i++) {\n      const propertyMixer = propertyMixers[i];\n      const buffer = propertyMixer.buffer;\n      const stride = propertyMixer.valueSize;\n      const offset = (accuIndex + 1) * stride;\n      propertyMixer.binding.getValue(buffer, offset);\n    }\n  }\n\n  /*\n   * Avoiding these two issues by restore/save bones before/after mixer animation.\n   *\n   * 1. PropertyMixer used by AnimationMixer holds cache value in .buffer.\n   *    Calculating IK, Grant, and Physics after mixer animation can break\n   *    the cache coherency.\n   *\n   * 2. Applying Grant two or more times without reset the posing breaks model.\n   */\n  _saveBones(mesh) {\n    const objects = this.objects.get(mesh);\n    const bones = mesh.skeleton.bones;\n    let backupBones = objects.backupBones;\n    if (backupBones === undefined) {\n      backupBones = new Float32Array(bones.length * 7);\n      objects.backupBones = backupBones;\n    }\n    for (let i = 0, il = bones.length; i < il; i++) {\n      const bone = bones[i];\n      bone.position.toArray(backupBones, i * 7);\n      bone.quaternion.toArray(backupBones, i * 7 + 3);\n    }\n  }\n  _restoreBones(mesh) {\n    const objects = this.objects.get(mesh);\n    const backupBones = objects.backupBones;\n    if (backupBones === undefined) return;\n    const bones = mesh.skeleton.bones;\n    for (let i = 0, il = bones.length; i < il; i++) {\n      const bone = bones[i];\n      bone.position.fromArray(backupBones, i * 7);\n      bone.quaternion.fromArray(backupBones, i * 7 + 3);\n    }\n  }\n\n  // experimental\n\n  _getMasterPhysics() {\n    if (this.masterPhysics !== null) return this.masterPhysics;\n    for (let i = 0, il = this.meshes.length; i < il; i++) {\n      const physics = this.meshes[i].physics;\n      if (physics !== undefined && physics !== null) {\n        this.masterPhysics = physics;\n        return this.masterPhysics;\n      }\n    }\n    return null;\n  }\n  _updateSharedPhysics(delta) {\n    if (this.meshes.length === 0 || !this.enabled.physics || !this.sharedPhysics) return;\n    const physics = this._getMasterPhysics();\n    if (physics === null) return;\n    for (let i = 0, il = this.meshes.length; i < il; i++) {\n      const p = this.meshes[i].physics;\n      if (p !== null && p !== undefined) {\n        p.updateRigidBodies();\n      }\n    }\n    physics.stepSimulation(delta);\n    for (let i = 0, il = this.meshes.length; i < il; i++) {\n      const p = this.meshes[i].physics;\n      if (p !== null && p !== undefined) {\n        p.updateBones();\n      }\n    }\n  }\n}\n\n// Keep working quaternions for less GC\nconst _quaternions = [];\nlet _quaternionIndex = 0;\nfunction getQuaternion() {\n  if (_quaternionIndex >= _quaternions.length) {\n    _quaternions.push(new Quaternion());\n  }\n  return _quaternions[_quaternionIndex++];\n}\n\n// Save rotation whose grant and IK are already applied\n// used by grant children\nconst _grantResultMap = new Map();\nfunction updateOne(mesh, boneIndex, ikSolver, grantSolver) {\n  const bones = mesh.skeleton.bones;\n  const bonesData = mesh.geometry.userData.MMD.bones;\n  const boneData = bonesData[boneIndex];\n  const bone = bones[boneIndex];\n\n  // Return if already updated by being referred as a grant parent.\n  if (_grantResultMap.has(boneIndex)) return;\n  const quaternion = getQuaternion();\n\n  // Initialize grant result here to prevent infinite loop.\n  // If it's referred before updating with actual result later\n  // result without applyting IK or grant is gotten\n  // but better than composing of infinite loop.\n  _grantResultMap.set(boneIndex, quaternion.copy(bone.quaternion));\n\n  // @TODO: Support global grant and grant position\n  if (grantSolver && boneData.grant && !boneData.grant.isLocal && boneData.grant.affectRotation) {\n    const parentIndex = boneData.grant.parentIndex;\n    const ratio = boneData.grant.ratio;\n    if (!_grantResultMap.has(parentIndex)) {\n      updateOne(mesh, parentIndex, ikSolver, grantSolver);\n    }\n    grantSolver.addGrantRotation(bone, _grantResultMap.get(parentIndex), ratio);\n  }\n  if (ikSolver && boneData.ik) {\n    // @TODO: Updating world matrices every time solving an IK bone is\n    // costly. Optimize if possible.\n    mesh.updateMatrixWorld(true);\n    ikSolver.updateOne(boneData.ik);\n\n    // No confident, but it seems the grant results with ik links should be updated?\n    const links = boneData.ik.links;\n    for (let i = 0, il = links.length; i < il; i++) {\n      const link = links[i];\n      if (link.enabled === false) continue;\n      const linkIndex = link.index;\n      if (_grantResultMap.has(linkIndex)) {\n        _grantResultMap.set(linkIndex, _grantResultMap.get(linkIndex).copy(bones[linkIndex].quaternion));\n      }\n    }\n  }\n\n  // Update with the actual result here\n  quaternion.copy(bone.quaternion);\n}\n\n//\n\nclass AudioManager {\n  /**\n   * @param {THREE.Audio} audio\n   * @param {Object} params - (optional)\n   * @param {Nuumber} params.delayTime\n   */\n  constructor(audio, params = {}) {\n    this.audio = audio;\n    this.elapsedTime = 0.0;\n    this.currentTime = 0.0;\n    this.delayTime = params.delayTime !== undefined ? params.delayTime : 0.0;\n    this.audioDuration = this.audio.buffer.duration;\n    this.duration = this.audioDuration + this.delayTime;\n  }\n\n  /**\n   * @param {Number} delta\n   * @return {AudioManager}\n   */\n  control(delta) {\n    this.elapsed += delta;\n    this.currentTime += delta;\n    if (this._shouldStopAudio()) this.audio.stop();\n    if (this._shouldStartAudio()) this.audio.play();\n    return this;\n  }\n\n  // private methods\n\n  _shouldStartAudio() {\n    if (this.audio.isPlaying) return false;\n    while (this.currentTime >= this.duration) {\n      this.currentTime -= this.duration;\n    }\n    if (this.currentTime < this.delayTime) return false;\n\n    // 'duration' can be bigger than 'audioDuration + delayTime' because of sync configuration\n    if (this.currentTime - this.delayTime > this.audioDuration) return false;\n    return true;\n  }\n  _shouldStopAudio() {\n    return this.audio.isPlaying && this.currentTime >= this.duration;\n  }\n}\nconst _q = new Quaternion();\n\n/**\n * Solver for Grant (Fuyo in Japanese. I just google translated because\n * Fuyo may be MMD specific term and may not be common word in 3D CG terms.)\n * Grant propagates a bone's transform to other bones transforms even if\n * they are not children.\n * @param {THREE.SkinnedMesh} mesh\n * @param {Array<Object>} grants\n */\nclass GrantSolver {\n  constructor(mesh, grants = []) {\n    this.mesh = mesh;\n    this.grants = grants;\n  }\n\n  /**\n   * Solve all the grant bones\n   * @return {GrantSolver}\n   */\n  update() {\n    const grants = this.grants;\n    for (let i = 0, il = grants.length; i < il; i++) {\n      this.updateOne(grants[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Solve a grant bone\n   * @param {Object} grant - grant parameter\n   * @return {GrantSolver}\n   */\n  updateOne(grant) {\n    const bones = this.mesh.skeleton.bones;\n    const bone = bones[grant.index];\n    const parentBone = bones[grant.parentIndex];\n    if (grant.isLocal) {\n      // TODO: implement\n      if (grant.affectPosition) {}\n\n      // TODO: implement\n      if (grant.affectRotation) {}\n    } else {\n      // TODO: implement\n      if (grant.affectPosition) {}\n      if (grant.affectRotation) {\n        this.addGrantRotation(bone, parentBone.quaternion, grant.ratio);\n      }\n    }\n    return this;\n  }\n  addGrantRotation(bone, q, ratio) {\n    _q.set(0, 0, 0, 1);\n    _q.slerp(q, ratio);\n    bone.quaternion.multiply(_q);\n    return this;\n  }\n}\nexport { MMDAnimationHelper };","map":{"version":3,"names":["AnimationMixer","Object3D","Quaternion","Vector3","CCDIKSolver","MMDPhysics","MMDAnimationHelper","constructor","params","meshes","camera","cameraTarget","name","audio","audioManager","objects","WeakMap","configuration","sync","undefined","afterglow","resetPhysicsOnLoop","pmxAnimation","enabled","animation","ik","grant","physics","cameraAnimation","onBeforePhysics","sharedPhysics","masterPhysics","add","object","isSkinnedMesh","_addMesh","isCamera","_setupCamera","type","_setupAudio","Error","_syncDuration","remove","_removeMesh","_clearCamera","_clearAudio","update","delta","control","i","length","_animateMesh","_updateSharedPhysics","_animateCamera","pose","mesh","vpd","resetPose","bones","skeleton","boneParams","boneNameDictionary","il","vector","quaternion","boneParam","boneIndex","bone","position","fromArray","translation","multiply","updateMatrixWorld","geometry","userData","MMD","format","sortedBonesData","_sortBoneDataArray","slice","ikSolver","_createCCDIKSolver","grantSolver","createGrantSolver","_animatePMXMesh","enable","key","_optimizeIK","GrantSolver","grants","indexOf","push","set","looped","_setupMeshAnimation","_setupMeshPhysics","clearCamera","_setupCameraAnimation","clearAudio","AudioManager","duration","found","writeIndex","delete","get","animations","Array","isArray","mixer","clipAction","play","addEventListener","event","tracks","action","_clip","world","_getMasterPhysics","_createMMDPhysics","animationWarmup","reset","warmup","_restoreBones","_saveBones","boneDataArray","sort","a","b","transformationClass","index","_quaternionIndex","_grantResultMap","clear","updateOne","updateProjectionMatrix","up","applyQuaternion","lookAt","physicsEnabled","iks","links","j","jl","link","rigidBodyType","rigidBodies","constraints","max","_actions","clip","has","Math","_updatePropertyMixersBuffer","propertyMixers","_bindings","accuIndex","_accuIndex","propertyMixer","buffer","stride","valueSize","offset","binding","getValue","backupBones","Float32Array","toArray","p","updateRigidBodies","stepSimulation","updateBones","_quaternions","getQuaternion","Map","bonesData","boneData","copy","isLocal","affectRotation","parentIndex","ratio","addGrantRotation","linkIndex","elapsedTime","currentTime","delayTime","audioDuration","elapsed","_shouldStopAudio","stop","_shouldStartAudio","isPlaying","_q","parentBone","affectPosition","q","slerp"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/three/examples/jsm/animation/MMDAnimationHelper.js"],"sourcesContent":["import {\n\tAnimationMixer,\n\tObject3D,\n\tQuaternion,\n\tVector3\n} from 'three';\nimport { CCDIKSolver } from '../animation/CCDIKSolver.js';\nimport { MMDPhysics } from '../animation/MMDPhysics.js';\n\n/**\n * MMDAnimationHelper handles animation of MMD assets loaded by MMDLoader\n * with MMD special features as IK, Grant, and Physics.\n *\n * Dependencies\n *  - ammo.js https://github.com/kripken/ammo.js\n *  - MMDPhysics\n *  - CCDIKSolver\n *\n * TODO\n *  - more precise grant skinning support.\n */\nclass MMDAnimationHelper {\n\n\t/**\n\t * @param {Object} params - (optional)\n\t * @param {boolean} params.sync - Whether animation durations of added objects are synched. Default is true.\n\t * @param {Number} params.afterglow - Default is 0.0.\n\t * @param {boolean} params.resetPhysicsOnLoop - Default is true.\n\t */\n\tconstructor( params = {} ) {\n\n\t\tthis.meshes = [];\n\n\t\tthis.camera = null;\n\t\tthis.cameraTarget = new Object3D();\n\t\tthis.cameraTarget.name = 'target';\n\n\t\tthis.audio = null;\n\t\tthis.audioManager = null;\n\n\t\tthis.objects = new WeakMap();\n\n\t\tthis.configuration = {\n\t\t\tsync: params.sync !== undefined ? params.sync : true,\n\t\t\tafterglow: params.afterglow !== undefined ? params.afterglow : 0.0,\n\t\t\tresetPhysicsOnLoop: params.resetPhysicsOnLoop !== undefined ? params.resetPhysicsOnLoop : true,\n\t\t\tpmxAnimation: params.pmxAnimation !== undefined ? params.pmxAnimation : false\n\t\t};\n\n\t\tthis.enabled = {\n\t\t\tanimation: true,\n\t\t\tik: true,\n\t\t\tgrant: true,\n\t\t\tphysics: true,\n\t\t\tcameraAnimation: true\n\t\t};\n\n\t\tthis.onBeforePhysics = function ( /* mesh */ ) {};\n\n\t\t// experimental\n\t\tthis.sharedPhysics = false;\n\t\tthis.masterPhysics = null;\n\n\t}\n\n\t/**\n\t * Adds an Three.js Object to helper and setups animation.\n\t * The anmation durations of added objects are synched\n\t * if this.configuration.sync is true.\n\t *\n\t * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\n\t * @param {Object} params - (optional)\n\t * @param {THREE.AnimationClip|Array<THREE.AnimationClip>} params.animation - Only for THREE.SkinnedMesh and THREE.Camera. Default is undefined.\n\t * @param {boolean} params.physics - Only for THREE.SkinnedMesh. Default is true.\n\t * @param {Integer} params.warmup - Only for THREE.SkinnedMesh and physics is true. Default is 60.\n\t * @param {Number} params.unitStep - Only for THREE.SkinnedMesh and physics is true. Default is 1 / 65.\n\t * @param {Integer} params.maxStepNum - Only for THREE.SkinnedMesh and physics is true. Default is 3.\n\t * @param {Vector3} params.gravity - Only for THREE.SkinnedMesh and physics is true. Default ( 0, - 9.8 * 10, 0 ).\n\t * @param {Number} params.delayTime - Only for THREE.Audio. Default is 0.0.\n\t * @return {MMDAnimationHelper}\n\t */\n\tadd( object, params = {} ) {\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tthis._addMesh( object, params );\n\n\t\t} else if ( object.isCamera ) {\n\n\t\t\tthis._setupCamera( object, params );\n\n\t\t} else if ( object.type === 'Audio' ) {\n\n\t\t\tthis._setupAudio( object, params );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.MMDAnimationHelper.add: '\n\t\t\t\t+ 'accepts only '\n\t\t\t\t+ 'THREE.SkinnedMesh or '\n\t\t\t\t+ 'THREE.Camera or '\n\t\t\t\t+ 'THREE.Audio instance.' );\n\n\t\t}\n\n\t\tif ( this.configuration.sync ) this._syncDuration();\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Removes an Three.js Object from helper.\n\t *\n\t * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\n\t * @return {MMDAnimationHelper}\n\t */\n\tremove( object ) {\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tthis._removeMesh( object );\n\n\t\t} else if ( object.isCamera ) {\n\n\t\t\tthis._clearCamera( object );\n\n\t\t} else if ( object.type === 'Audio' ) {\n\n\t\t\tthis._clearAudio( object );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.MMDAnimationHelper.remove: '\n\t\t\t\t+ 'accepts only '\n\t\t\t\t+ 'THREE.SkinnedMesh or '\n\t\t\t\t+ 'THREE.Camera or '\n\t\t\t\t+ 'THREE.Audio instance.' );\n\n\t\t}\n\n\t\tif ( this.configuration.sync ) this._syncDuration();\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Updates the animation.\n\t *\n\t * @param {Number} delta\n\t * @return {MMDAnimationHelper}\n\t */\n\tupdate( delta ) {\n\n\t\tif ( this.audioManager !== null ) this.audioManager.control( delta );\n\n\t\tfor ( let i = 0; i < this.meshes.length; i ++ ) {\n\n\t\t\tthis._animateMesh( this.meshes[ i ], delta );\n\n\t\t}\n\n\t\tif ( this.sharedPhysics ) this._updateSharedPhysics( delta );\n\n\t\tif ( this.camera !== null ) this._animateCamera( this.camera, delta );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Changes the pose of SkinnedMesh as VPD specifies.\n\t *\n\t * @param {THREE.SkinnedMesh} mesh\n\t * @param {Object} vpd - VPD content parsed MMDParser\n\t * @param {Object} params - (optional)\n\t * @param {boolean} params.resetPose - Default is true.\n\t * @param {boolean} params.ik - Default is true.\n\t * @param {boolean} params.grant - Default is true.\n\t * @return {MMDAnimationHelper}\n\t */\n\tpose( mesh, vpd, params = {} ) {\n\n\t\tif ( params.resetPose !== false ) mesh.pose();\n\n\t\tconst bones = mesh.skeleton.bones;\n\t\tconst boneParams = vpd.bones;\n\n\t\tconst boneNameDictionary = {};\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\tboneNameDictionary[ bones[ i ].name ] = i;\n\n\t\t}\n\n\t\tconst vector = new Vector3();\n\t\tconst quaternion = new Quaternion();\n\n\t\tfor ( let i = 0, il = boneParams.length; i < il; i ++ ) {\n\n\t\t\tconst boneParam = boneParams[ i ];\n\t\t\tconst boneIndex = boneNameDictionary[ boneParam.name ];\n\n\t\t\tif ( boneIndex === undefined ) continue;\n\n\t\t\tconst bone = bones[ boneIndex ];\n\t\t\tbone.position.add( vector.fromArray( boneParam.translation ) );\n\t\t\tbone.quaternion.multiply( quaternion.fromArray( boneParam.quaternion ) );\n\n\t\t}\n\n\t\tmesh.updateMatrixWorld( true );\n\n\t\t// PMX animation system special path\n\t\tif ( this.configuration.pmxAnimation &&\n\t\t\tmesh.geometry.userData.MMD && mesh.geometry.userData.MMD.format === 'pmx' ) {\n\n\t\t\tconst sortedBonesData = this._sortBoneDataArray( mesh.geometry.userData.MMD.bones.slice() );\n\t\t\tconst ikSolver = params.ik !== false ? this._createCCDIKSolver( mesh ) : null;\n\t\t\tconst grantSolver = params.grant !== false ? this.createGrantSolver( mesh ) : null;\n\t\t\tthis._animatePMXMesh( mesh, sortedBonesData, ikSolver, grantSolver );\n\n\t\t} else {\n\n\t\t\tif ( params.ik !== false ) {\n\n\t\t\t\tthis._createCCDIKSolver( mesh ).update();\n\n\t\t\t}\n\n\t\t\tif ( params.grant !== false ) {\n\n\t\t\t\tthis.createGrantSolver( mesh ).update();\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Enabes/Disables an animation feature.\n\t *\n\t * @param {string} key\n\t * @param {boolean} enabled\n\t * @return {MMDAnimationHelper}\n\t */\n\tenable( key, enabled ) {\n\n\t\tif ( this.enabled[ key ] === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.MMDAnimationHelper.enable: '\n\t\t\t\t+ 'unknown key ' + key );\n\n\t\t}\n\n\t\tthis.enabled[ key ] = enabled;\n\n\t\tif ( key === 'physics' ) {\n\n\t\t\tfor ( let i = 0, il = this.meshes.length; i < il; i ++ ) {\n\n\t\t\t\tthis._optimizeIK( this.meshes[ i ], enabled );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Creates an GrantSolver instance.\n\t *\n\t * @param {THREE.SkinnedMesh} mesh\n\t * @return {GrantSolver}\n\t */\n\tcreateGrantSolver( mesh ) {\n\n\t\treturn new GrantSolver( mesh, mesh.geometry.userData.MMD.grants );\n\n\t}\n\n\t// private methods\n\n\t_addMesh( mesh, params ) {\n\n\t\tif ( this.meshes.indexOf( mesh ) >= 0 ) {\n\n\t\t\tthrow new Error( 'THREE.MMDAnimationHelper._addMesh: '\n\t\t\t\t+ 'SkinnedMesh \\'' + mesh.name + '\\' has already been added.' );\n\n\t\t}\n\n\t\tthis.meshes.push( mesh );\n\t\tthis.objects.set( mesh, { looped: false } );\n\n\t\tthis._setupMeshAnimation( mesh, params.animation );\n\n\t\tif ( params.physics !== false ) {\n\n\t\t\tthis._setupMeshPhysics( mesh, params );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t_setupCamera( camera, params ) {\n\n\t\tif ( this.camera === camera ) {\n\n\t\t\tthrow new Error( 'THREE.MMDAnimationHelper._setupCamera: '\n\t\t\t\t+ 'Camera \\'' + camera.name + '\\' has already been set.' );\n\n\t\t}\n\n\t\tif ( this.camera ) this.clearCamera( this.camera );\n\n\t\tthis.camera = camera;\n\n\t\tcamera.add( this.cameraTarget );\n\n\t\tthis.objects.set( camera, {} );\n\n\t\tif ( params.animation !== undefined ) {\n\n\t\t\tthis._setupCameraAnimation( camera, params.animation );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t_setupAudio( audio, params ) {\n\n\t\tif ( this.audio === audio ) {\n\n\t\t\tthrow new Error( 'THREE.MMDAnimationHelper._setupAudio: '\n\t\t\t\t+ 'Audio \\'' + audio.name + '\\' has already been set.' );\n\n\t\t}\n\n\t\tif ( this.audio ) this.clearAudio( this.audio );\n\n\t\tthis.audio = audio;\n\t\tthis.audioManager = new AudioManager( audio, params );\n\n\t\tthis.objects.set( this.audioManager, {\n\t\t\tduration: this.audioManager.duration\n\t\t} );\n\n\t\treturn this;\n\n\t}\n\n\t_removeMesh( mesh ) {\n\n\t\tlet found = false;\n\t\tlet writeIndex = 0;\n\n\t\tfor ( let i = 0, il = this.meshes.length; i < il; i ++ ) {\n\n\t\t\tif ( this.meshes[ i ] === mesh ) {\n\n\t\t\t\tthis.objects.delete( mesh );\n\t\t\t\tfound = true;\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tthis.meshes[ writeIndex ++ ] = this.meshes[ i ];\n\n\t\t}\n\n\t\tif ( ! found ) {\n\n\t\t\tthrow new Error( 'THREE.MMDAnimationHelper._removeMesh: '\n\t\t\t\t+ 'SkinnedMesh \\'' + mesh.name + '\\' has not been added yet.' );\n\n\t\t}\n\n\t\tthis.meshes.length = writeIndex;\n\n\t\treturn this;\n\n\t}\n\n\t_clearCamera( camera ) {\n\n\t\tif ( camera !== this.camera ) {\n\n\t\t\tthrow new Error( 'THREE.MMDAnimationHelper._clearCamera: '\n\t\t\t\t+ 'Camera \\'' + camera.name + '\\' has not been set yet.' );\n\n\t\t}\n\n\t\tthis.camera.remove( this.cameraTarget );\n\n\t\tthis.objects.delete( this.camera );\n\t\tthis.camera = null;\n\n\t\treturn this;\n\n\t}\n\n\t_clearAudio( audio ) {\n\n\t\tif ( audio !== this.audio ) {\n\n\t\t\tthrow new Error( 'THREE.MMDAnimationHelper._clearAudio: '\n\t\t\t\t+ 'Audio \\'' + audio.name + '\\' has not been set yet.' );\n\n\t\t}\n\n\t\tthis.objects.delete( this.audioManager );\n\n\t\tthis.audio = null;\n\t\tthis.audioManager = null;\n\n\t\treturn this;\n\n\t}\n\n\t_setupMeshAnimation( mesh, animation ) {\n\n\t\tconst objects = this.objects.get( mesh );\n\n\t\tif ( animation !== undefined ) {\n\n\t\t\tconst animations = Array.isArray( animation )\n\t\t\t\t? animation : [ animation ];\n\n\t\t\tobjects.mixer = new AnimationMixer( mesh );\n\n\t\t\tfor ( let i = 0, il = animations.length; i < il; i ++ ) {\n\n\t\t\t\tobjects.mixer.clipAction( animations[ i ] ).play();\n\n\t\t\t}\n\n\t\t\t// TODO: find a workaround not to access ._clip looking like a private property\n\t\t\tobjects.mixer.addEventListener( 'loop', function ( event ) {\n\n\t\t\t\tconst tracks = event.action._clip.tracks;\n\n\t\t\t\tif ( tracks.length > 0 && tracks[ 0 ].name.slice( 0, 6 ) !== '.bones' ) return;\n\n\t\t\t\tobjects.looped = true;\n\n\t\t\t} );\n\n\t\t}\n\n\t\tobjects.ikSolver = this._createCCDIKSolver( mesh );\n\t\tobjects.grantSolver = this.createGrantSolver( mesh );\n\n\t\treturn this;\n\n\t}\n\n\t_setupCameraAnimation( camera, animation ) {\n\n\t\tconst animations = Array.isArray( animation )\n\t\t\t? animation : [ animation ];\n\n\t\tconst objects = this.objects.get( camera );\n\n\t\tobjects.mixer = new AnimationMixer( camera );\n\n\t\tfor ( let i = 0, il = animations.length; i < il; i ++ ) {\n\n\t\t\tobjects.mixer.clipAction( animations[ i ] ).play();\n\n\t\t}\n\n\t}\n\n\t_setupMeshPhysics( mesh, params ) {\n\n\t\tconst objects = this.objects.get( mesh );\n\n\t\t// shared physics is experimental\n\n\t\tif ( params.world === undefined && this.sharedPhysics ) {\n\n\t\t\tconst masterPhysics = this._getMasterPhysics();\n\n\t\t\tif ( masterPhysics !== null ) world = masterPhysics.world; // eslint-disable-line no-undef\n\n\t\t}\n\n\t\tobjects.physics = this._createMMDPhysics( mesh, params );\n\n\t\tif ( objects.mixer && params.animationWarmup !== false ) {\n\n\t\t\tthis._animateMesh( mesh, 0 );\n\t\t\tobjects.physics.reset();\n\n\t\t}\n\n\t\tobjects.physics.warmup( params.warmup !== undefined ? params.warmup : 60 );\n\n\t\tthis._optimizeIK( mesh, true );\n\n\t}\n\n\t_animateMesh( mesh, delta ) {\n\n\t\tconst objects = this.objects.get( mesh );\n\n\t\tconst mixer = objects.mixer;\n\t\tconst ikSolver = objects.ikSolver;\n\t\tconst grantSolver = objects.grantSolver;\n\t\tconst physics = objects.physics;\n\t\tconst looped = objects.looped;\n\n\t\tif ( mixer && this.enabled.animation ) {\n\n\t\t\t// alternate solution to save/restore bones but less performant?\n\t\t\t//mesh.pose();\n\t\t\t//this._updatePropertyMixersBuffer( mesh );\n\n\t\t\tthis._restoreBones( mesh );\n\n\t\t\tmixer.update( delta );\n\n\t\t\tthis._saveBones( mesh );\n\n\t\t\t// PMX animation system special path\n\t\t\tif ( this.configuration.pmxAnimation &&\n\t\t\t\tmesh.geometry.userData.MMD && mesh.geometry.userData.MMD.format === 'pmx' ) {\n\n\t\t\t\tif ( ! objects.sortedBonesData ) objects.sortedBonesData = this._sortBoneDataArray( mesh.geometry.userData.MMD.bones.slice() );\n\n\t\t\t\tthis._animatePMXMesh(\n\t\t\t\t\tmesh,\n\t\t\t\t\tobjects.sortedBonesData,\n\t\t\t\t\tikSolver && this.enabled.ik ? ikSolver : null,\n\t\t\t\t\tgrantSolver && this.enabled.grant ? grantSolver : null\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tif ( ikSolver && this.enabled.ik ) {\n\n\t\t\t\t\tmesh.updateMatrixWorld( true );\n\t\t\t\t\tikSolver.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( grantSolver && this.enabled.grant ) {\n\n\t\t\t\t\tgrantSolver.update();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( looped === true && this.enabled.physics ) {\n\n\t\t\tif ( physics && this.configuration.resetPhysicsOnLoop ) physics.reset();\n\n\t\t\tobjects.looped = false;\n\n\t\t}\n\n\t\tif ( physics && this.enabled.physics && ! this.sharedPhysics ) {\n\n\t\t\tthis.onBeforePhysics( mesh );\n\t\t\tphysics.update( delta );\n\n\t\t}\n\n\t}\n\n\t// Sort bones in order by 1. transformationClass and 2. bone index.\n\t// In PMX animation system, bone transformations should be processed\n\t// in this order.\n\t_sortBoneDataArray( boneDataArray ) {\n\n\t\treturn boneDataArray.sort( function ( a, b ) {\n\n\t\t\tif ( a.transformationClass !== b.transformationClass ) {\n\n\t\t\t\treturn a.transformationClass - b.transformationClass;\n\n\t\t\t} else {\n\n\t\t\t\treturn a.index - b.index;\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t// PMX Animation system is a bit too complex and doesn't great match to\n\t// Three.js Animation system. This method attempts to simulate it as much as\n\t// possible but doesn't perfectly simulate.\n\t// This method is more costly than the regular one so\n\t// you are recommended to set constructor parameter \"pmxAnimation: true\"\n\t// only if your PMX model animation doesn't work well.\n\t// If you need better method you would be required to write your own.\n\t_animatePMXMesh( mesh, sortedBonesData, ikSolver, grantSolver ) {\n\n\t\t_quaternionIndex = 0;\n\t\t_grantResultMap.clear();\n\n\t\tfor ( let i = 0, il = sortedBonesData.length; i < il; i ++ ) {\n\n\t\t\tupdateOne( mesh, sortedBonesData[ i ].index, ikSolver, grantSolver );\n\n\t\t}\n\n\t\tmesh.updateMatrixWorld( true );\n\t\treturn this;\n\n\t}\n\n\t_animateCamera( camera, delta ) {\n\n\t\tconst mixer = this.objects.get( camera ).mixer;\n\n\t\tif ( mixer && this.enabled.cameraAnimation ) {\n\n\t\t\tmixer.update( delta );\n\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\tcamera.up.set( 0, 1, 0 );\n\t\t\tcamera.up.applyQuaternion( camera.quaternion );\n\t\t\tcamera.lookAt( this.cameraTarget.position );\n\n\t\t}\n\n\t}\n\n\t_optimizeIK( mesh, physicsEnabled ) {\n\n\t\tconst iks = mesh.geometry.userData.MMD.iks;\n\t\tconst bones = mesh.geometry.userData.MMD.bones;\n\n\t\tfor ( let i = 0, il = iks.length; i < il; i ++ ) {\n\n\t\t\tconst ik = iks[ i ];\n\t\t\tconst links = ik.links;\n\n\t\t\tfor ( let j = 0, jl = links.length; j < jl; j ++ ) {\n\n\t\t\t\tconst link = links[ j ];\n\n\t\t\t\tif ( physicsEnabled === true ) {\n\n\t\t\t\t\t// disable IK of the bone the corresponding rigidBody type of which is 1 or 2\n\t\t\t\t\t// because its rotation will be overriden by physics\n\t\t\t\t\tlink.enabled = bones[ link.index ].rigidBodyType > 0 ? false : true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlink.enabled = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_createCCDIKSolver( mesh ) {\n\n\t\tif ( CCDIKSolver === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.MMDAnimationHelper: Import CCDIKSolver.' );\n\n\t\t}\n\n\t\treturn new CCDIKSolver( mesh, mesh.geometry.userData.MMD.iks );\n\n\t}\n\n\t_createMMDPhysics( mesh, params ) {\n\n\t\tif ( MMDPhysics === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.MMDPhysics: Import MMDPhysics.' );\n\n\t\t}\n\n\t\treturn new MMDPhysics(\n\t\t\tmesh,\n\t\t\tmesh.geometry.userData.MMD.rigidBodies,\n\t\t\tmesh.geometry.userData.MMD.constraints,\n\t\t\tparams );\n\n\t}\n\n\t/*\n\t * Detects the longest duration and then sets it to them to sync.\n\t * TODO: Not to access private properties ( ._actions and ._clip )\n\t */\n\t_syncDuration() {\n\n\t\tlet max = 0.0;\n\n\t\tconst objects = this.objects;\n\t\tconst meshes = this.meshes;\n\t\tconst camera = this.camera;\n\t\tconst audioManager = this.audioManager;\n\n\t\t// get the longest duration\n\n\t\tfor ( let i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\tconst mixer = this.objects.get( meshes[ i ] ).mixer;\n\n\t\t\tif ( mixer === undefined ) continue;\n\n\t\t\tfor ( let j = 0; j < mixer._actions.length; j ++ ) {\n\n\t\t\t\tconst clip = mixer._actions[ j ]._clip;\n\n\t\t\t\tif ( ! objects.has( clip ) ) {\n\n\t\t\t\t\tobjects.set( clip, {\n\t\t\t\t\t\tduration: clip.duration\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tmax = Math.max( max, objects.get( clip ).duration );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( camera !== null ) {\n\n\t\t\tconst mixer = this.objects.get( camera ).mixer;\n\n\t\t\tif ( mixer !== undefined ) {\n\n\t\t\t\tfor ( let i = 0, il = mixer._actions.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst clip = mixer._actions[ i ]._clip;\n\n\t\t\t\t\tif ( ! objects.has( clip ) ) {\n\n\t\t\t\t\t\tobjects.set( clip, {\n\t\t\t\t\t\t\tduration: clip.duration\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmax = Math.max( max, objects.get( clip ).duration );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( audioManager !== null ) {\n\n\t\t\tmax = Math.max( max, objects.get( audioManager ).duration );\n\n\t\t}\n\n\t\tmax += this.configuration.afterglow;\n\n\t\t// update the duration\n\n\t\tfor ( let i = 0, il = this.meshes.length; i < il; i ++ ) {\n\n\t\t\tconst mixer = this.objects.get( this.meshes[ i ] ).mixer;\n\n\t\t\tif ( mixer === undefined ) continue;\n\n\t\t\tfor ( let j = 0, jl = mixer._actions.length; j < jl; j ++ ) {\n\n\t\t\t\tmixer._actions[ j ]._clip.duration = max;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( camera !== null ) {\n\n\t\t\tconst mixer = this.objects.get( camera ).mixer;\n\n\t\t\tif ( mixer !== undefined ) {\n\n\t\t\t\tfor ( let i = 0, il = mixer._actions.length; i < il; i ++ ) {\n\n\t\t\t\t\tmixer._actions[ i ]._clip.duration = max;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( audioManager !== null ) {\n\n\t\t\taudioManager.duration = max;\n\n\t\t}\n\n\t}\n\n\t// workaround\n\n\t_updatePropertyMixersBuffer( mesh ) {\n\n\t\tconst mixer = this.objects.get( mesh ).mixer;\n\n\t\tconst propertyMixers = mixer._bindings;\n\t\tconst accuIndex = mixer._accuIndex;\n\n\t\tfor ( let i = 0, il = propertyMixers.length; i < il; i ++ ) {\n\n\t\t\tconst propertyMixer = propertyMixers[ i ];\n\t\t\tconst buffer = propertyMixer.buffer;\n\t\t\tconst stride = propertyMixer.valueSize;\n\t\t\tconst offset = ( accuIndex + 1 ) * stride;\n\n\t\t\tpropertyMixer.binding.getValue( buffer, offset );\n\n\t\t}\n\n\t}\n\n\t/*\n\t * Avoiding these two issues by restore/save bones before/after mixer animation.\n\t *\n\t * 1. PropertyMixer used by AnimationMixer holds cache value in .buffer.\n\t *    Calculating IK, Grant, and Physics after mixer animation can break\n\t *    the cache coherency.\n\t *\n\t * 2. Applying Grant two or more times without reset the posing breaks model.\n\t */\n\t_saveBones( mesh ) {\n\n\t\tconst objects = this.objects.get( mesh );\n\n\t\tconst bones = mesh.skeleton.bones;\n\n\t\tlet backupBones = objects.backupBones;\n\n\t\tif ( backupBones === undefined ) {\n\n\t\t\tbackupBones = new Float32Array( bones.length * 7 );\n\t\t\tobjects.backupBones = backupBones;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tbone.position.toArray( backupBones, i * 7 );\n\t\t\tbone.quaternion.toArray( backupBones, i * 7 + 3 );\n\n\t\t}\n\n\t}\n\n\t_restoreBones( mesh ) {\n\n\t\tconst objects = this.objects.get( mesh );\n\n\t\tconst backupBones = objects.backupBones;\n\n\t\tif ( backupBones === undefined ) return;\n\n\t\tconst bones = mesh.skeleton.bones;\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tbone.position.fromArray( backupBones, i * 7 );\n\t\t\tbone.quaternion.fromArray( backupBones, i * 7 + 3 );\n\n\t\t}\n\n\t}\n\n\t// experimental\n\n\t_getMasterPhysics() {\n\n\t\tif ( this.masterPhysics !== null ) return this.masterPhysics;\n\n\t\tfor ( let i = 0, il = this.meshes.length; i < il; i ++ ) {\n\n\t\t\tconst physics = this.meshes[ i ].physics;\n\n\t\t\tif ( physics !== undefined && physics !== null ) {\n\n\t\t\t\tthis.masterPhysics = physics;\n\t\t\t\treturn this.masterPhysics;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t_updateSharedPhysics( delta ) {\n\n\t\tif ( this.meshes.length === 0 || ! this.enabled.physics || ! this.sharedPhysics ) return;\n\n\t\tconst physics = this._getMasterPhysics();\n\n\t\tif ( physics === null ) return;\n\n\t\tfor ( let i = 0, il = this.meshes.length; i < il; i ++ ) {\n\n\t\t\tconst p = this.meshes[ i ].physics;\n\n\t\t\tif ( p !== null && p !== undefined ) {\n\n\t\t\t\tp.updateRigidBodies();\n\n\t\t\t}\n\n\t\t}\n\n\t\tphysics.stepSimulation( delta );\n\n\t\tfor ( let i = 0, il = this.meshes.length; i < il; i ++ ) {\n\n\t\t\tconst p = this.meshes[ i ].physics;\n\n\t\t\tif ( p !== null && p !== undefined ) {\n\n\t\t\t\tp.updateBones();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\n// Keep working quaternions for less GC\nconst _quaternions = [];\nlet _quaternionIndex = 0;\n\nfunction getQuaternion() {\n\n\tif ( _quaternionIndex >= _quaternions.length ) {\n\n\t\t_quaternions.push( new Quaternion() );\n\n\t}\n\n\treturn _quaternions[ _quaternionIndex ++ ];\n\n}\n\n// Save rotation whose grant and IK are already applied\n// used by grant children\nconst _grantResultMap = new Map();\n\nfunction updateOne( mesh, boneIndex, ikSolver, grantSolver ) {\n\n\tconst bones = mesh.skeleton.bones;\n\tconst bonesData = mesh.geometry.userData.MMD.bones;\n\tconst boneData = bonesData[ boneIndex ];\n\tconst bone = bones[ boneIndex ];\n\n\t// Return if already updated by being referred as a grant parent.\n\tif ( _grantResultMap.has( boneIndex ) ) return;\n\n\tconst quaternion = getQuaternion();\n\n\t// Initialize grant result here to prevent infinite loop.\n\t// If it's referred before updating with actual result later\n\t// result without applyting IK or grant is gotten\n\t// but better than composing of infinite loop.\n\t_grantResultMap.set( boneIndex, quaternion.copy( bone.quaternion ) );\n\n\t// @TODO: Support global grant and grant position\n\tif ( grantSolver && boneData.grant &&\n\t\t! boneData.grant.isLocal && boneData.grant.affectRotation ) {\n\n\t\tconst parentIndex = boneData.grant.parentIndex;\n\t\tconst ratio = boneData.grant.ratio;\n\n\t\tif ( ! _grantResultMap.has( parentIndex ) ) {\n\n\t\t\tupdateOne( mesh, parentIndex, ikSolver, grantSolver );\n\n\t\t}\n\n\t\tgrantSolver.addGrantRotation( bone, _grantResultMap.get( parentIndex ), ratio );\n\n\t}\n\n\tif ( ikSolver && boneData.ik ) {\n\n\t\t// @TODO: Updating world matrices every time solving an IK bone is\n\t\t// costly. Optimize if possible.\n\t\tmesh.updateMatrixWorld( true );\n\t\tikSolver.updateOne( boneData.ik );\n\n\t\t// No confident, but it seems the grant results with ik links should be updated?\n\t\tconst links = boneData.ik.links;\n\n\t\tfor ( let i = 0, il = links.length; i < il; i ++ ) {\n\n\t\t\tconst link = links[ i ];\n\n\t\t\tif ( link.enabled === false ) continue;\n\n\t\t\tconst linkIndex = link.index;\n\n\t\t\tif ( _grantResultMap.has( linkIndex ) ) {\n\n\t\t\t\t_grantResultMap.set( linkIndex, _grantResultMap.get( linkIndex ).copy( bones[ linkIndex ].quaternion ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Update with the actual result here\n\tquaternion.copy( bone.quaternion );\n\n}\n\n//\n\nclass AudioManager {\n\n\t/**\n\t * @param {THREE.Audio} audio\n\t * @param {Object} params - (optional)\n\t * @param {Nuumber} params.delayTime\n\t */\n\tconstructor( audio, params = {} ) {\n\n\t\tthis.audio = audio;\n\n\t\tthis.elapsedTime = 0.0;\n\t\tthis.currentTime = 0.0;\n\t\tthis.delayTime = params.delayTime !== undefined\n\t\t\t? params.delayTime : 0.0;\n\n\t\tthis.audioDuration = this.audio.buffer.duration;\n\t\tthis.duration = this.audioDuration + this.delayTime;\n\n\t}\n\n\t/**\n\t * @param {Number} delta\n\t * @return {AudioManager}\n\t */\n\tcontrol( delta ) {\n\n\t\tthis.elapsed += delta;\n\t\tthis.currentTime += delta;\n\n\t\tif ( this._shouldStopAudio() ) this.audio.stop();\n\t\tif ( this._shouldStartAudio() ) this.audio.play();\n\n\t\treturn this;\n\n\t}\n\n\t// private methods\n\n\t_shouldStartAudio() {\n\n\t\tif ( this.audio.isPlaying ) return false;\n\n\t\twhile ( this.currentTime >= this.duration ) {\n\n\t\t\tthis.currentTime -= this.duration;\n\n\t\t}\n\n\t\tif ( this.currentTime < this.delayTime ) return false;\n\n\t\t// 'duration' can be bigger than 'audioDuration + delayTime' because of sync configuration\n\t\tif ( ( this.currentTime - this.delayTime ) > this.audioDuration ) return false;\n\n\t\treturn true;\n\n\t}\n\n\t_shouldStopAudio() {\n\n\t\treturn this.audio.isPlaying &&\n\t\t\tthis.currentTime >= this.duration;\n\n\t}\n\n}\n\nconst _q = new Quaternion();\n\n/**\n * Solver for Grant (Fuyo in Japanese. I just google translated because\n * Fuyo may be MMD specific term and may not be common word in 3D CG terms.)\n * Grant propagates a bone's transform to other bones transforms even if\n * they are not children.\n * @param {THREE.SkinnedMesh} mesh\n * @param {Array<Object>} grants\n */\nclass GrantSolver {\n\n\tconstructor( mesh, grants = [] ) {\n\n\t\tthis.mesh = mesh;\n\t\tthis.grants = grants;\n\n\t}\n\n\t/**\n\t * Solve all the grant bones\n\t * @return {GrantSolver}\n\t */\n\tupdate() {\n\n\t\tconst grants = this.grants;\n\n\t\tfor ( let i = 0, il = grants.length; i < il; i ++ ) {\n\n\t\t\tthis.updateOne( grants[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Solve a grant bone\n\t * @param {Object} grant - grant parameter\n\t * @return {GrantSolver}\n\t */\n\tupdateOne( grant ) {\n\n\t\tconst bones = this.mesh.skeleton.bones;\n\t\tconst bone = bones[ grant.index ];\n\t\tconst parentBone = bones[ grant.parentIndex ];\n\n\t\tif ( grant.isLocal ) {\n\n\t\t\t// TODO: implement\n\t\t\tif ( grant.affectPosition ) {\n\n\t\t\t}\n\n\t\t\t// TODO: implement\n\t\t\tif ( grant.affectRotation ) {\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// TODO: implement\n\t\t\tif ( grant.affectPosition ) {\n\n\t\t\t}\n\n\t\t\tif ( grant.affectRotation ) {\n\n\t\t\t\tthis.addGrantRotation( bone, parentBone.quaternion, grant.ratio );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddGrantRotation( bone, q, ratio ) {\n\n\t\t_q.set( 0, 0, 0, 1 );\n\t\t_q.slerp( q, ratio );\n\t\tbone.quaternion.multiply( _q );\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport { MMDAnimationHelper };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}