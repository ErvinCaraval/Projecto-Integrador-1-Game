{"ast":null,"code":"var _jsxFileName = \"/home/ervin/Escritorio/integrador/squid-games-pi-2024-1-client/src/pages/level1/characters/redMen/RedManQuad.jsx\",\n  _s = $RefreshSig$();\nimport { useGLTF } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RedManQuad(props) {\n  _s();\n  const redManQuadRef = useRef(null);\n  const {\n    nodes,\n    materials\n  } = useGLTF('/assets/models/red-mens/RedManQuad.glb');\n  const amplitude = 3.5;\n  useFrame((state, delta) => {\n    const position = redManQuadRef.current.position;\n    position.x = Math.cos(state.clock.getElapsedTime()) * amplitude + props.position[0];\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ...props,\n    ref: redManQuadRef,\n    ...props,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      name: \"Scene\",\n      children: /*#__PURE__*/_jsxDEV(\"group\", {\n        name: \"Rigid\",\n        children: [/*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n          name: \"RedManQuad\",\n          geometry: nodes.RedManQuad.geometry,\n          material: materials.redManQuadMaterial,\n          skeleton: nodes.RedManQuad.skeleton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"primitive\", {\n          object: nodes.root\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(RedManQuad, \"rt5LFD8LY+nJ/495NHKXnBALhiU=\", false, function () {\n  return [useGLTF, useFrame];\n});\n_c = RedManQuad;\nuseGLTF.preload('/assets/models/red-mens/RedManQuad.glb');\nvar _c;\n$RefreshReg$(_c, \"RedManQuad\");","map":{"version":3,"names":["useGLTF","useFrame","useRef","jsxDEV","_jsxDEV","RedManQuad","props","_s","redManQuadRef","nodes","materials","amplitude","state","delta","position","current","x","Math","cos","clock","getElapsedTime","ref","dispose","children","name","geometry","material","redManQuadMaterial","skeleton","fileName","_jsxFileName","lineNumber","columnNumber","object","root","_c","preload","$RefreshReg$"],"sources":["/home/ervin/Escritorio/integrador/squid-games-pi-2024-1-client/src/pages/level1/characters/redMen/RedManQuad.jsx"],"sourcesContent":["import { useGLTF } from \"@react-three/drei\"\nimport { useFrame } from \"@react-three/fiber\"\nimport { useRef } from \"react\"\n\nexport default function RedManQuad(props) {\n    const redManQuadRef = useRef(null)\n    const { nodes, materials } = useGLTF('/assets/models/red-mens/RedManQuad.glb')\n    const amplitude = 3.5\n\n    useFrame((state, delta) => {\n        const position = redManQuadRef.current.position\n        position.x = Math.cos(state.clock.getElapsedTime()) * amplitude + props.position[0];\n    })\n\n    return (\n        <group {...props} ref={redManQuadRef} {...props} dispose={null}>\n            <group name=\"Scene\">\n                <group name=\"Rigid\">\n                    <skinnedMesh\n                        name=\"RedManQuad\"\n                        geometry={nodes.RedManQuad.geometry}\n                        material={materials.redManQuadMaterial}\n                        skeleton={nodes.RedManQuad.skeleton}\n                    />\n                    <primitive object={nodes.root} />\n                </group>\n            </group>\n        </group>\n    )\n}\n\nuseGLTF.preload('/assets/models/red-mens/RedManQuad.glb')\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,MAAM,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtC,MAAMC,aAAa,GAAGN,MAAM,CAAC,IAAI,CAAC;EAClC,MAAM;IAAEO,KAAK;IAAEC;EAAU,CAAC,GAAGV,OAAO,CAAC,wCAAwC,CAAC;EAC9E,MAAMW,SAAS,GAAG,GAAG;EAErBV,QAAQ,CAAC,CAACW,KAAK,EAAEC,KAAK,KAAK;IACvB,MAAMC,QAAQ,GAAGN,aAAa,CAACO,OAAO,CAACD,QAAQ;IAC/CA,QAAQ,CAACE,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACN,KAAK,CAACO,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,GAAGT,SAAS,GAAGL,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;EACvF,CAAC,CAAC;EAEF,oBACIV,OAAA;IAAA,GAAWE,KAAK;IAAEe,GAAG,EAAEb,aAAc;IAAA,GAAKF,KAAK;IAAEgB,OAAO,EAAE,IAAK;IAAAC,QAAA,eAC3DnB,OAAA;MAAOoB,IAAI,EAAC,OAAO;MAAAD,QAAA,eACfnB,OAAA;QAAOoB,IAAI,EAAC,OAAO;QAAAD,QAAA,gBACfnB,OAAA;UACIoB,IAAI,EAAC,YAAY;UACjBC,QAAQ,EAAEhB,KAAK,CAACJ,UAAU,CAACoB,QAAS;UACpCC,QAAQ,EAAEhB,SAAS,CAACiB,kBAAmB;UACvCC,QAAQ,EAAEnB,KAAK,CAACJ,UAAU,CAACuB;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACF5B,OAAA;UAAW6B,MAAM,EAAExB,KAAK,CAACyB;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB;AAACzB,EAAA,CAzBuBF,UAAU;EAAA,QAEDL,OAAO,EAGpCC,QAAQ;AAAA;AAAAkC,EAAA,GALY9B,UAAU;AA2BlCL,OAAO,CAACoC,OAAO,CAAC,wCAAwC,CAAC;AAAA,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}