{"ast":null,"code":"import { DataUtils, DataTextureLoader, FloatType, HalfFloatType, RGBAFormat } from 'three';\nclass LogLuvLoader extends DataTextureLoader {\n  constructor(manager) {\n    super(manager);\n    this.type = HalfFloatType;\n  }\n  parse(buffer) {\n    const ifds = UTIF.decode(buffer);\n    UTIF.decodeImage(buffer, ifds[0]);\n    const rgba = UTIF.toRGBA(ifds[0], this.type);\n    return {\n      width: ifds[0].width,\n      height: ifds[0].height,\n      data: rgba,\n      format: RGBAFormat,\n      type: this.type,\n      flipY: true\n    };\n  }\n  setDataType(value) {\n    this.type = value;\n    return this;\n  }\n}\n\n// from https://github.com/photopea/UTIF.js (MIT License)\n\nconst UTIF = {};\nUTIF.decode = function (buff, prm) {\n  if (prm == null) prm = {\n    parseMN: true,\n    debug: false\n  }; // read MakerNote, debug\n  var data = new Uint8Array(buff),\n    offset = 0;\n  var id = UTIF._binBE.readASCII(data, offset, 2);\n  offset += 2;\n  var bin = id == 'II' ? UTIF._binLE : UTIF._binBE;\n  bin.readUshort(data, offset);\n  offset += 2;\n  var ifdo = bin.readUint(data, offset);\n  var ifds = [];\n  while (true) {\n    var cnt = bin.readUshort(data, ifdo),\n      typ = bin.readUshort(data, ifdo + 4);\n    if (cnt != 0) if (typ < 1 || 13 < typ) {\n      console.log('error in TIFF');\n      break;\n    }\n    UTIF._readIFD(bin, data, ifdo, ifds, 0, prm);\n    ifdo = bin.readUint(data, ifdo + 2 + cnt * 12);\n    if (ifdo == 0) break;\n  }\n  return ifds;\n};\nUTIF.decodeImage = function (buff, img, ifds) {\n  if (img.data) return;\n  var data = new Uint8Array(buff);\n  var id = UTIF._binBE.readASCII(data, 0, 2);\n  if (img['t256'] == null) return; // No width => probably not an image\n  img.isLE = id == 'II';\n  img.width = img['t256'][0]; //delete img[\"t256\"];\n  img.height = img['t257'][0]; //delete img[\"t257\"];\n\n  var cmpr = img['t259'] ? img['t259'][0] : 1; //delete img[\"t259\"];\n  var fo = img['t266'] ? img['t266'][0] : 1; //delete img[\"t266\"];\n  if (img['t284'] && img['t284'][0] == 2) console.log('PlanarConfiguration 2 should not be used!');\n  if (cmpr == 7 && img['t258'] && img['t258'].length > 3) img['t258'] = img['t258'].slice(0, 3);\n  var bipp; // bits per pixel\n  if (img['t258']) bipp = Math.min(32, img['t258'][0]) * img['t258'].length;else bipp = img['t277'] ? img['t277'][0] : 1;\n  // Some .NEF files have t258==14, even though they use 16 bits per pixel\n  if (cmpr == 1 && img['t279'] != null && img['t278'] && img['t262'][0] == 32803) {\n    bipp = Math.round(img['t279'][0] * 8 / (img.width * img['t278'][0]));\n  }\n  var bipl = Math.ceil(img.width * bipp / 8) * 8;\n  var soff = img['t273'];\n  if (soff == null) soff = img['t324'];\n  var bcnt = img['t279'];\n  if (cmpr == 1 && soff.length == 1) bcnt = [img.height * (bipl >>> 3)];\n  if (bcnt == null) bcnt = img['t325'];\n  //bcnt[0] = Math.min(bcnt[0], data.length);  // Hasselblad, \"RAW_HASSELBLAD_H3D39II.3FR\"\n  var bytes = new Uint8Array(img.height * (bipl >>> 3)),\n    bilen = 0;\n  if (img['t322'] != null) {\n    var tw = img['t322'][0],\n      th = img['t323'][0];\n    var tx = Math.floor((img.width + tw - 1) / tw);\n    var ty = Math.floor((img.height + th - 1) / th);\n    var tbuff = new Uint8Array(Math.ceil(tw * th * bipp / 8) | 0);\n    for (var y = 0; y < ty; y++) for (var x = 0; x < tx; x++) {\n      var i = y * tx + x;\n      for (var j = 0; j < tbuff.length; j++) tbuff[j] = 0;\n      UTIF.decode._decompress(img, ifds, data, soff[i], bcnt[i], cmpr, tbuff, 0, fo);\n      // Might be required for 7 too. Need to check\n      if (cmpr == 6) bytes = tbuff;else UTIF._copyTile(tbuff, Math.ceil(tw * bipp / 8) | 0, th, bytes, Math.ceil(img.width * bipp / 8) | 0, img.height, Math.ceil(x * tw * bipp / 8) | 0, y * th);\n    }\n    bilen = bytes.length * 8;\n  } else {\n    var rps = img['t278'] ? img['t278'][0] : img.height;\n    rps = Math.min(rps, img.height);\n    for (var i = 0; i < soff.length; i++) {\n      UTIF.decode._decompress(img, ifds, data, soff[i], bcnt[i], cmpr, bytes, Math.ceil(bilen / 8) | 0, fo);\n      bilen += bipl * rps;\n    }\n    bilen = Math.min(bilen, bytes.length * 8);\n  }\n  img.data = new Uint8Array(bytes.buffer, 0, Math.ceil(bilen / 8) | 0);\n};\nUTIF.decode._decompress = function (img, ifds, data, off, len, cmpr, tgt, toff) {\n  //console.log(\"compression\", cmpr);\n  //var time = Date.now();\n  if (cmpr == 34676) UTIF.decode._decodeLogLuv32(img, data, off, len, tgt, toff);else console.log('Unsupported compression', cmpr);\n\n  //console.log(Date.now()-time);\n\n  var bps = img['t258'] ? Math.min(32, img['t258'][0]) : 1;\n  var noc = img['t277'] ? img['t277'][0] : 1,\n    bpp = bps * noc >>> 3,\n    h = img['t278'] ? img['t278'][0] : img.height,\n    bpl = Math.ceil(bps * noc * img.width / 8);\n\n  // convert to Little Endian  /*\n  if (bps == 16 && !img.isLE && img['t33422'] == null)\n    // not DNG\n    for (var y = 0; y < h; y++) {\n      //console.log(\"fixing endianity\");\n      var roff = toff + y * bpl;\n      for (var x = 1; x < bpl; x += 2) {\n        var t = tgt[roff + x];\n        tgt[roff + x] = tgt[roff + x - 1];\n        tgt[roff + x - 1] = t;\n      }\n    } //*/\n\n  if (img['t317'] && img['t317'][0] == 2) {\n    for (var y = 0; y < h; y++) {\n      var ntoff = toff + y * bpl;\n      if (bps == 16) for (var j = bpp; j < bpl; j += 2) {\n        var nv = (tgt[ntoff + j + 1] << 8 | tgt[ntoff + j]) + (tgt[ntoff + j - bpp + 1] << 8 | tgt[ntoff + j - bpp]);\n        tgt[ntoff + j] = nv & 255;\n        tgt[ntoff + j + 1] = nv >>> 8 & 255;\n      } else if (noc == 3) for (var j = 3; j < bpl; j += 3) {\n        tgt[ntoff + j] = tgt[ntoff + j] + tgt[ntoff + j - 3] & 255;\n        tgt[ntoff + j + 1] = tgt[ntoff + j + 1] + tgt[ntoff + j - 2] & 255;\n        tgt[ntoff + j + 2] = tgt[ntoff + j + 2] + tgt[ntoff + j - 1] & 255;\n      } else for (var j = bpp; j < bpl; j++) tgt[ntoff + j] = tgt[ntoff + j] + tgt[ntoff + j - bpp] & 255;\n    }\n  }\n};\nUTIF.decode._decodeLogLuv32 = function (img, data, off, len, tgt, toff) {\n  var w = img.width,\n    qw = w * 4;\n  var io = 0,\n    out = new Uint8Array(qw);\n  while (io < len) {\n    var oo = 0;\n    while (oo < qw) {\n      var c = data[off + io];\n      io++;\n      if (c < 128) {\n        for (var j = 0; j < c; j++) out[oo + j] = data[off + io + j];\n        oo += c;\n        io += c;\n      } else {\n        c = c - 126;\n        for (var j = 0; j < c; j++) out[oo + j] = data[off + io];\n        oo += c;\n        io++;\n      }\n    }\n    for (var x = 0; x < w; x++) {\n      tgt[toff + 0] = out[x];\n      tgt[toff + 1] = out[x + w];\n      tgt[toff + 2] = out[x + w * 2];\n      tgt[toff + 4] = out[x + w * 3];\n      toff += 6;\n    }\n  }\n};\nUTIF.tags = {};\n//UTIF.ttypes = {  256:3,257:3,258:3,   259:3, 262:3,  273:4,  274:3, 277:3,278:4,279:4, 282:5, 283:5, 284:3, 286:5,287:5, 296:3, 305:2, 306:2, 338:3, 513:4, 514:4, 34665:4  };\n// start at tag 250\nUTIF._types = function () {\n  var main = new Array(250);\n  main.fill(0);\n  main = main.concat([0, 0, 0, 0, 4, 3, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 0, 0, 2, 2, 2, 2, 4, 3, 0, 0, 3, 4, 4, 3, 3, 5, 5, 3, 2, 5, 5, 0, 0, 0, 0, 4, 4, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 5, 5, 3, 0, 3, 3, 4, 4, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  var rest = {\n    33432: 2,\n    33434: 5,\n    33437: 5,\n    34665: 4,\n    34850: 3,\n    34853: 4,\n    34855: 3,\n    34864: 3,\n    34866: 4,\n    36864: 7,\n    36867: 2,\n    36868: 2,\n    37121: 7,\n    37377: 10,\n    37378: 5,\n    37380: 10,\n    37381: 5,\n    37383: 3,\n    37384: 3,\n    37385: 3,\n    37386: 5,\n    37510: 7,\n    37520: 2,\n    37521: 2,\n    37522: 2,\n    40960: 7,\n    40961: 3,\n    40962: 4,\n    40963: 4,\n    40965: 4,\n    41486: 5,\n    41487: 5,\n    41488: 3,\n    41985: 3,\n    41986: 3,\n    41987: 3,\n    41988: 5,\n    41989: 3,\n    41990: 3,\n    41993: 3,\n    41994: 3,\n    41995: 7,\n    41996: 3,\n    42032: 2,\n    42033: 2,\n    42034: 5,\n    42036: 2,\n    42037: 2,\n    59932: 7\n  };\n  return {\n    basic: {\n      main: main,\n      rest: rest\n    },\n    gps: {\n      main: [1, 2, 5, 2, 5, 1, 5, 5, 0, 9],\n      rest: {\n        18: 2,\n        29: 2\n      }\n    }\n  };\n}();\nUTIF._readIFD = function (bin, data, offset, ifds, depth, prm) {\n  var cnt = bin.readUshort(data, offset);\n  offset += 2;\n  var ifd = {};\n  if (prm.debug) console.log('   '.repeat(depth), ifds.length - 1, '>>>----------------');\n  for (var i = 0; i < cnt; i++) {\n    var tag = bin.readUshort(data, offset);\n    offset += 2;\n    var type = bin.readUshort(data, offset);\n    offset += 2;\n    var num = bin.readUint(data, offset);\n    offset += 4;\n    var voff = bin.readUint(data, offset);\n    offset += 4;\n    var arr = [];\n    //ifd[\"t\"+tag+\"-\"+UTIF.tags[tag]] = arr;\n    if (type == 1 || type == 7) {\n      arr = new Uint8Array(data.buffer, num < 5 ? offset - 4 : voff, num);\n    }\n    if (type == 2) {\n      var o0 = num < 5 ? offset - 4 : voff,\n        c = data[o0],\n        len = Math.max(0, Math.min(num - 1, data.length - o0));\n      if (c < 128 || len == 0) arr.push(bin.readASCII(data, o0, len));else arr = new Uint8Array(data.buffer, o0, len);\n    }\n    if (type == 3) {\n      for (var j = 0; j < num; j++) arr.push(bin.readUshort(data, (num < 3 ? offset - 4 : voff) + 2 * j));\n    }\n    if (type == 4 || type == 13) {\n      for (var j = 0; j < num; j++) arr.push(bin.readUint(data, (num < 2 ? offset - 4 : voff) + 4 * j));\n    }\n    if (type == 5 || type == 10) {\n      var ri = type == 5 ? bin.readUint : bin.readInt;\n      for (var j = 0; j < num; j++) arr.push([ri(data, voff + j * 8), ri(data, voff + j * 8 + 4)]);\n    }\n    if (type == 8) {\n      for (var j = 0; j < num; j++) arr.push(bin.readShort(data, (num < 3 ? offset - 4 : voff) + 2 * j));\n    }\n    if (type == 9) {\n      for (var j = 0; j < num; j++) arr.push(bin.readInt(data, (num < 2 ? offset - 4 : voff) + 4 * j));\n    }\n    if (type == 11) {\n      for (var j = 0; j < num; j++) arr.push(bin.readFloat(data, voff + j * 4));\n    }\n    if (type == 12) {\n      for (var j = 0; j < num; j++) arr.push(bin.readDouble(data, voff + j * 8));\n    }\n    if (num != 0 && arr.length == 0) {\n      console.log(tag, 'unknown TIFF tag type: ', type, 'num:', num);\n      if (i == 0) return;\n      continue;\n    }\n    if (prm.debug) console.log('   '.repeat(depth), tag, type, UTIF.tags[tag], arr);\n    ifd['t' + tag] = arr;\n    if (tag == 330 || tag == 34665 || tag == 34853 || tag == 50740 && bin.readUshort(data, bin.readUint(arr, 0)) < 300 || tag == 61440) {\n      var oarr = tag == 50740 ? [bin.readUint(arr, 0)] : arr;\n      var subfd = [];\n      for (var j = 0; j < oarr.length; j++) UTIF._readIFD(bin, data, oarr[j], subfd, depth + 1, prm);\n      if (tag == 330) ifd.subIFD = subfd;\n      if (tag == 34665) ifd.exifIFD = subfd[0];\n      if (tag == 34853) ifd.gpsiIFD = subfd[0]; //console.log(\"gps\", subfd[0]);  }\n      if (tag == 50740) ifd.dngPrvt = subfd[0];\n      if (tag == 61440) ifd.fujiIFD = subfd[0];\n    }\n    if (tag == 37500 && prm.parseMN) {\n      var mn = arr;\n      //console.log(bin.readASCII(mn,0,mn.length), mn);\n      if (bin.readASCII(mn, 0, 5) == 'Nikon') ifd.makerNote = UTIF['decode'](mn.slice(10).buffer)[0];else if (bin.readUshort(data, voff) < 300 && bin.readUshort(data, voff + 4) <= 12) {\n        var subsub = [];\n        UTIF._readIFD(bin, data, voff, subsub, depth + 1, prm);\n        ifd.makerNote = subsub[0];\n      }\n    }\n  }\n  ifds.push(ifd);\n  if (prm.debug) console.log('   '.repeat(depth), '<<<---------------');\n  return offset;\n};\nUTIF.toRGBA = function (out, type) {\n  const w = out.width,\n    h = out.height,\n    area = w * h,\n    data = out.data;\n  let img;\n  switch (type) {\n    case HalfFloatType:\n      img = new Uint16Array(area * 4);\n      break;\n    case FloatType:\n      img = new Float32Array(area * 4);\n      break;\n    default:\n      throw new Error('THREE.LogLuvLoader: Unsupported texture data type: ' + type);\n  }\n  let intp = out['t262'] ? out['t262'][0] : 2;\n  const bps = out['t258'] ? Math.min(32, out['t258'][0]) : 1;\n  if (out['t262'] == null && bps == 1) intp = 0;\n  if (intp == 32845) {\n    for (let y = 0; y < h; y++) {\n      for (let x = 0; x < w; x++) {\n        const si = (y * w + x) * 6,\n          qi = (y * w + x) * 4;\n        let L = data[si + 1] << 8 | data[si];\n        L = Math.pow(2, (L + 0.5) / 256 - 64);\n        const u = (data[si + 3] + 0.5) / 410;\n        const v = (data[si + 5] + 0.5) / 410;\n\n        // Luv to xyY\n        const sX = 9 * u / (6 * u - 16 * v + 12);\n        const sY = 4 * v / (6 * u - 16 * v + 12);\n        const bY = L;\n\n        // xyY to XYZ\n        const X = sX * bY / sY,\n          Y = bY,\n          Z = (1 - sX - sY) * bY / sY;\n\n        // XYZ to linear RGB\n        const r = 2.690 * X - 1.276 * Y - 0.414 * Z;\n        const g = -1.022 * X + 1.978 * Y + 0.044 * Z;\n        const b = 0.061 * X - 0.224 * Y + 1.163 * Z;\n        if (type === HalfFloatType) {\n          img[qi] = DataUtils.toHalfFloat(Math.min(r, 65504));\n          img[qi + 1] = DataUtils.toHalfFloat(Math.min(g, 65504));\n          img[qi + 2] = DataUtils.toHalfFloat(Math.min(b, 65504));\n          img[qi + 3] = DataUtils.toHalfFloat(1);\n        } else {\n          img[qi] = r;\n          img[qi + 1] = g;\n          img[qi + 2] = b;\n          img[qi + 3] = 1;\n        }\n      }\n    }\n  } else {\n    throw new Error('THREE.LogLuvLoader: Unsupported Photometric interpretation: ' + intp);\n  }\n  return img;\n};\nUTIF._binBE = {\n  nextZero: function (data, o) {\n    while (data[o] != 0) o++;\n    return o;\n  },\n  readUshort: function (buff, p) {\n    return buff[p] << 8 | buff[p + 1];\n  },\n  readShort: function (buff, p) {\n    var a = UTIF._binBE.ui8;\n    a[0] = buff[p + 1];\n    a[1] = buff[p + 0];\n    return UTIF._binBE.i16[0];\n  },\n  readInt: function (buff, p) {\n    var a = UTIF._binBE.ui8;\n    a[0] = buff[p + 3];\n    a[1] = buff[p + 2];\n    a[2] = buff[p + 1];\n    a[3] = buff[p + 0];\n    return UTIF._binBE.i32[0];\n  },\n  readUint: function (buff, p) {\n    var a = UTIF._binBE.ui8;\n    a[0] = buff[p + 3];\n    a[1] = buff[p + 2];\n    a[2] = buff[p + 1];\n    a[3] = buff[p + 0];\n    return UTIF._binBE.ui32[0];\n  },\n  readASCII: function (buff, p, l) {\n    var s = '';\n    for (var i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);\n    return s;\n  },\n  readFloat: function (buff, p) {\n    var a = UTIF._binBE.ui8;\n    for (var i = 0; i < 4; i++) a[i] = buff[p + 3 - i];\n    return UTIF._binBE.fl32[0];\n  },\n  readDouble: function (buff, p) {\n    var a = UTIF._binBE.ui8;\n    for (var i = 0; i < 8; i++) a[i] = buff[p + 7 - i];\n    return UTIF._binBE.fl64[0];\n  },\n  writeUshort: function (buff, p, n) {\n    buff[p] = n >> 8 & 255;\n    buff[p + 1] = n & 255;\n  },\n  writeInt: function (buff, p, n) {\n    var a = UTIF._binBE.ui8;\n    UTIF._binBE.i32[0] = n;\n    buff[p + 3] = a[0];\n    buff[p + 2] = a[1];\n    buff[p + 1] = a[2];\n    buff[p + 0] = a[3];\n  },\n  writeUint: function (buff, p, n) {\n    buff[p] = n >> 24 & 255;\n    buff[p + 1] = n >> 16 & 255;\n    buff[p + 2] = n >> 8 & 255;\n    buff[p + 3] = n >> 0 & 255;\n  },\n  writeASCII: function (buff, p, s) {\n    for (var i = 0; i < s.length; i++) buff[p + i] = s.charCodeAt(i);\n  },\n  writeDouble: function (buff, p, n) {\n    UTIF._binBE.fl64[0] = n;\n    for (var i = 0; i < 8; i++) buff[p + i] = UTIF._binBE.ui8[7 - i];\n  }\n};\nUTIF._binBE.ui8 = new Uint8Array(8);\nUTIF._binBE.i16 = new Int16Array(UTIF._binBE.ui8.buffer);\nUTIF._binBE.i32 = new Int32Array(UTIF._binBE.ui8.buffer);\nUTIF._binBE.ui32 = new Uint32Array(UTIF._binBE.ui8.buffer);\nUTIF._binBE.fl32 = new Float32Array(UTIF._binBE.ui8.buffer);\nUTIF._binBE.fl64 = new Float64Array(UTIF._binBE.ui8.buffer);\nUTIF._binLE = {\n  nextZero: UTIF._binBE.nextZero,\n  readUshort: function (buff, p) {\n    return buff[p + 1] << 8 | buff[p];\n  },\n  readShort: function (buff, p) {\n    var a = UTIF._binBE.ui8;\n    a[0] = buff[p + 0];\n    a[1] = buff[p + 1];\n    return UTIF._binBE.i16[0];\n  },\n  readInt: function (buff, p) {\n    var a = UTIF._binBE.ui8;\n    a[0] = buff[p + 0];\n    a[1] = buff[p + 1];\n    a[2] = buff[p + 2];\n    a[3] = buff[p + 3];\n    return UTIF._binBE.i32[0];\n  },\n  readUint: function (buff, p) {\n    var a = UTIF._binBE.ui8;\n    a[0] = buff[p + 0];\n    a[1] = buff[p + 1];\n    a[2] = buff[p + 2];\n    a[3] = buff[p + 3];\n    return UTIF._binBE.ui32[0];\n  },\n  readASCII: UTIF._binBE.readASCII,\n  readFloat: function (buff, p) {\n    var a = UTIF._binBE.ui8;\n    for (var i = 0; i < 4; i++) a[i] = buff[p + i];\n    return UTIF._binBE.fl32[0];\n  },\n  readDouble: function (buff, p) {\n    var a = UTIF._binBE.ui8;\n    for (var i = 0; i < 8; i++) a[i] = buff[p + i];\n    return UTIF._binBE.fl64[0];\n  },\n  writeUshort: function (buff, p, n) {\n    buff[p] = n & 255;\n    buff[p + 1] = n >> 8 & 255;\n  },\n  writeInt: function (buff, p, n) {\n    var a = UTIF._binBE.ui8;\n    UTIF._binBE.i32[0] = n;\n    buff[p + 0] = a[0];\n    buff[p + 1] = a[1];\n    buff[p + 2] = a[2];\n    buff[p + 3] = a[3];\n  },\n  writeUint: function (buff, p, n) {\n    buff[p] = n >>> 0 & 255;\n    buff[p + 1] = n >>> 8 & 255;\n    buff[p + 2] = n >>> 16 & 255;\n    buff[p + 3] = n >>> 24 & 255;\n  },\n  writeASCII: UTIF._binBE.writeASCII\n};\nUTIF._copyTile = function (tb, tw, th, b, w, h, xoff, yoff) {\n  //log(\"copyTile\", tw, th,  w, h, xoff, yoff);\n  var xlim = Math.min(tw, w - xoff);\n  var ylim = Math.min(th, h - yoff);\n  for (var y = 0; y < ylim; y++) {\n    var tof = (yoff + y) * w + xoff;\n    var sof = y * tw;\n    for (var x = 0; x < xlim; x++) b[tof + x] = tb[sof + x];\n  }\n};\nexport { LogLuvLoader };","map":{"version":3,"names":["DataUtils","DataTextureLoader","FloatType","HalfFloatType","RGBAFormat","LogLuvLoader","constructor","manager","type","parse","buffer","ifds","UTIF","decode","decodeImage","rgba","toRGBA","width","height","data","format","flipY","setDataType","value","buff","prm","parseMN","debug","Uint8Array","offset","id","_binBE","readASCII","bin","_binLE","readUshort","ifdo","readUint","cnt","typ","console","log","_readIFD","img","isLE","cmpr","fo","length","slice","bipp","Math","min","round","bipl","ceil","soff","bcnt","bytes","bilen","tw","th","tx","floor","ty","tbuff","y","x","i","j","_decompress","_copyTile","rps","off","len","tgt","toff","_decodeLogLuv32","bps","noc","bpp","h","bpl","roff","t","ntoff","nv","w","qw","io","out","oo","c","tags","_types","main","Array","fill","concat","rest","basic","gps","depth","ifd","repeat","tag","num","voff","arr","o0","max","push","ri","readInt","readShort","readFloat","readDouble","oarr","subfd","subIFD","exifIFD","gpsiIFD","dngPrvt","fujiIFD","mn","makerNote","subsub","area","Uint16Array","Float32Array","Error","intp","si","qi","L","pow","u","v","sX","sY","bY","X","Y","Z","r","g","b","toHalfFloat","nextZero","o","p","a","ui8","i16","i32","ui32","l","s","String","fromCharCode","fl32","fl64","writeUshort","n","writeInt","writeUint","writeASCII","charCodeAt","writeDouble","Int16Array","Int32Array","Uint32Array","Float64Array","tb","xoff","yoff","xlim","ylim","tof","sof"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/three/examples/jsm/loaders/LogLuvLoader.js"],"sourcesContent":["import {\n\tDataUtils,\n\tDataTextureLoader,\n\tFloatType,\n\tHalfFloatType,\n\tRGBAFormat\n} from 'three';\n\nclass LogLuvLoader extends DataTextureLoader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.type = HalfFloatType;\n\n\t}\n\n\tparse( buffer ) {\n\n\t\tconst ifds = UTIF.decode( buffer );\n\t\tUTIF.decodeImage( buffer, ifds[ 0 ] );\n\t\tconst rgba = UTIF.toRGBA( ifds[ 0 ], this.type );\n\n\t\treturn {\n\t\t\twidth: ifds[ 0 ].width,\n\t\t\theight: ifds[ 0 ].height,\n\t\t\tdata: rgba,\n\t\t\tformat: RGBAFormat,\n\t\t\ttype: this.type,\n\t\t\tflipY: true\n\t\t};\n\n\t}\n\n\tsetDataType( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t}\n\n}\n\n// from https://github.com/photopea/UTIF.js (MIT License)\n\nconst UTIF = {};\n\nUTIF.decode = function ( buff, prm ) {\n\n\tif ( prm == null ) prm = { parseMN: true, debug: false }; // read MakerNote, debug\n\tvar data = new Uint8Array( buff ), offset = 0;\n\n\tvar id = UTIF._binBE.readASCII( data, offset, 2 ); offset += 2;\n\tvar bin = id == 'II' ? UTIF._binLE : UTIF._binBE;\n\tbin.readUshort( data, offset ); offset += 2;\n\n\tvar ifdo = bin.readUint( data, offset );\n\tvar ifds = [];\n\twhile ( true ) {\n\n\t\tvar cnt = bin.readUshort( data, ifdo ), typ = bin.readUshort( data, ifdo + 4 ); if ( cnt != 0 ) if ( typ < 1 || 13 < typ ) {\n\n\t\t\tconsole.log( 'error in TIFF' ); break;\n\n\t\t}\n\n\n\t\tUTIF._readIFD( bin, data, ifdo, ifds, 0, prm );\n\n\t\tifdo = bin.readUint( data, ifdo + 2 + cnt * 12 );\n\t\tif ( ifdo == 0 ) break;\n\n\t}\n\n\treturn ifds;\n\n};\n\nUTIF.decodeImage = function ( buff, img, ifds ) {\n\n\tif ( img.data ) return;\n\tvar data = new Uint8Array( buff );\n\tvar id = UTIF._binBE.readASCII( data, 0, 2 );\n\n\tif ( img[ 't256' ] == null ) return;\t// No width => probably not an image\n\timg.isLE = id == 'II';\n\timg.width = img[ 't256' ][ 0 ]; //delete img[\"t256\"];\n\timg.height = img[ 't257' ][ 0 ]; //delete img[\"t257\"];\n\n\tvar cmpr = img[ 't259' ] ? img[ 't259' ][ 0 ] : 1; //delete img[\"t259\"];\n\tvar fo = img[ 't266' ] ? img[ 't266' ][ 0 ] : 1; //delete img[\"t266\"];\n\tif ( img[ 't284' ] && img[ 't284' ][ 0 ] == 2 ) console.log( 'PlanarConfiguration 2 should not be used!' );\n\tif ( cmpr == 7 && img[ 't258' ] && img[ 't258' ].length > 3 ) img[ 't258' ] = img[ 't258' ].slice( 0, 3 );\n\n\tvar bipp; // bits per pixel\n\tif ( img[ 't258' ] ) bipp = Math.min( 32, img[ 't258' ][ 0 ] ) * img[ 't258' ].length;\n\telse bipp = ( img[ 't277' ] ? img[ 't277' ][ 0 ] : 1 );\n\t// Some .NEF files have t258==14, even though they use 16 bits per pixel\n\tif ( cmpr == 1 && img[ 't279' ] != null && img[ 't278' ] && img[ 't262' ][ 0 ] == 32803 ) {\n\n\t\tbipp = Math.round( ( img[ 't279' ][ 0 ] * 8 ) / ( img.width * img[ 't278' ][ 0 ] ) );\n\n\t}\n\n\tvar bipl = Math.ceil( img.width * bipp / 8 ) * 8;\n\tvar soff = img[ 't273' ]; if ( soff == null ) soff = img[ 't324' ];\n\tvar bcnt = img[ 't279' ]; if ( cmpr == 1 && soff.length == 1 ) bcnt = [ img.height * ( bipl >>> 3 ) ]; if ( bcnt == null ) bcnt = img[ 't325' ];\n\t//bcnt[0] = Math.min(bcnt[0], data.length);  // Hasselblad, \"RAW_HASSELBLAD_H3D39II.3FR\"\n\tvar bytes = new Uint8Array( img.height * ( bipl >>> 3 ) ), bilen = 0;\n\n\tif ( img[ 't322' ] != null ) {\n\n\t\tvar tw = img[ 't322' ][ 0 ], th = img[ 't323' ][ 0 ];\n\t\tvar tx = Math.floor( ( img.width + tw - 1 ) / tw );\n\t\tvar ty = Math.floor( ( img.height + th - 1 ) / th );\n\t\tvar tbuff = new Uint8Array( Math.ceil( tw * th * bipp / 8 ) | 0 );\n\t\tfor ( var y = 0; y < ty; y ++ )\n\t\t\tfor ( var x = 0; x < tx; x ++ ) {\n\n\t\t\t\tvar i = y * tx + x; for ( var j = 0; j < tbuff.length; j ++ ) tbuff[ j ] = 0;\n\t\t\t\tUTIF.decode._decompress( img, ifds, data, soff[ i ], bcnt[ i ], cmpr, tbuff, 0, fo );\n\t\t\t\t// Might be required for 7 too. Need to check\n\t\t\t\tif ( cmpr == 6 ) bytes = tbuff;\n\t\t\t\telse UTIF._copyTile( tbuff, Math.ceil( tw * bipp / 8 ) | 0, th, bytes, Math.ceil( img.width * bipp / 8 ) | 0, img.height, Math.ceil( x * tw * bipp / 8 ) | 0, y * th );\n\n\t\t\t}\n\n\t\tbilen = bytes.length * 8;\n\n\t} else {\n\n\t\tvar rps = img[ 't278' ] ? img[ 't278' ][ 0 ] : img.height; rps = Math.min( rps, img.height );\n\t\tfor ( var i = 0; i < soff.length; i ++ ) {\n\n\t\t\tUTIF.decode._decompress( img, ifds, data, soff[ i ], bcnt[ i ], cmpr, bytes, Math.ceil( bilen / 8 ) | 0, fo );\n\t\t\tbilen += bipl * rps;\n\n\t\t}\n\n\t\tbilen = Math.min( bilen, bytes.length * 8 );\n\n\t}\n\n\timg.data = new Uint8Array( bytes.buffer, 0, Math.ceil( bilen / 8 ) | 0 );\n\n};\n\nUTIF.decode._decompress = function ( img, ifds, data, off, len, cmpr, tgt, toff ) {\n\n\t//console.log(\"compression\", cmpr);\n\t//var time = Date.now();\n\tif ( cmpr == 34676 ) UTIF.decode._decodeLogLuv32( img, data, off, len, tgt, toff );\n\telse console.log( 'Unsupported compression', cmpr );\n\n\t//console.log(Date.now()-time);\n\n\tvar bps = ( img[ 't258' ] ? Math.min( 32, img[ 't258' ][ 0 ] ) : 1 );\n\tvar noc = ( img[ 't277' ] ? img[ 't277' ][ 0 ] : 1 ), bpp = ( bps * noc ) >>> 3, h = ( img[ 't278' ] ? img[ 't278' ][ 0 ] : img.height ), bpl = Math.ceil( bps * noc * img.width / 8 );\n\n\t// convert to Little Endian  /*\n\tif ( bps == 16 && ! img.isLE && img[ 't33422' ] == null ) // not DNG\n\t\tfor ( var y = 0; y < h; y ++ ) {\n\n\t\t\t//console.log(\"fixing endianity\");\n\t\t\tvar roff = toff + y * bpl;\n\t\t\tfor ( var x = 1; x < bpl; x += 2 ) {\n\n\t\t\t\tvar t = tgt[ roff + x ]; tgt[ roff + x ] = tgt[ roff + x - 1 ]; tgt[ roff + x - 1 ] = t;\n\n\t\t\t}\n\n\t\t} //*/\n\n\tif ( img[ 't317' ] && img[ 't317' ][ 0 ] == 2 ) {\n\n\t\tfor ( var y = 0; y < h; y ++ ) {\n\n\t\t\tvar ntoff = toff + y * bpl;\n\t\t\tif ( bps == 16 ) for ( var j = bpp; j < bpl; j += 2 ) {\n\n\t\t\t\tvar nv = ( ( tgt[ ntoff + j + 1 ] << 8 ) | tgt[ ntoff + j ] ) + ( ( tgt[ ntoff + j - bpp + 1 ] << 8 ) | tgt[ ntoff + j - bpp ] );\n\t\t\t\ttgt[ ntoff + j ] = nv & 255; tgt[ ntoff + j + 1 ] = ( nv >>> 8 ) & 255;\n\n\t\t\t}\n\t\t\telse if ( noc == 3 ) for ( var j = 3; j < bpl; j += 3 ) {\n\n\t\t\t\ttgt[ ntoff + j ] = ( tgt[ ntoff + j ] + tgt[ ntoff + j - 3 ] ) & 255;\n\t\t\t\ttgt[ ntoff + j + 1 ] = ( tgt[ ntoff + j + 1 ] + tgt[ ntoff + j - 2 ] ) & 255;\n\t\t\t\ttgt[ ntoff + j + 2 ] = ( tgt[ ntoff + j + 2 ] + tgt[ ntoff + j - 1 ] ) & 255;\n\n\t\t\t}\n\t\t\telse for ( var j = bpp; j < bpl; j ++ ) tgt[ ntoff + j ] = ( tgt[ ntoff + j ] + tgt[ ntoff + j - bpp ] ) & 255;\n\n\t\t}\n\n\t}\n\n};\n\nUTIF.decode._decodeLogLuv32 = function ( img, data, off, len, tgt, toff ) {\n\n\tvar w = img.width, qw = w * 4;\n\tvar io = 0, out = new Uint8Array( qw );\n\n\twhile ( io < len ) {\n\n\t\tvar oo = 0;\n\t\twhile ( oo < qw ) {\n\n\t\t\tvar c = data[ off + io ]; io ++;\n\t\t\tif ( c < 128 ) {\n\n\t\t\t\tfor ( var j = 0; j < c; j ++ ) out[ oo + j ] = data[ off + io + j ]; oo += c; io += c;\n\n\t\t\t} else {\n\n\t\t\t\tc = c - 126; for ( var j = 0; j < c; j ++ ) out[ oo + j ] = data[ off + io ]; oo += c; io ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var x = 0; x < w; x ++ ) {\n\n\t\t\ttgt[ toff + 0 ] = out[ x ];\n\t\t\ttgt[ toff + 1 ] = out[ x + w ];\n\t\t\ttgt[ toff + 2 ] = out[ x + w * 2 ];\n\t\t\ttgt[ toff + 4 ] = out[ x + w * 3 ];\n\t\t\ttoff += 6;\n\n\t\t}\n\n\t}\n\n};\n\nUTIF.tags = {};\n//UTIF.ttypes = {  256:3,257:3,258:3,   259:3, 262:3,  273:4,  274:3, 277:3,278:4,279:4, 282:5, 283:5, 284:3, 286:5,287:5, 296:3, 305:2, 306:2, 338:3, 513:4, 514:4, 34665:4  };\n// start at tag 250\nUTIF._types = function () {\n\n\tvar main = new Array( 250 ); main.fill( 0 );\n\tmain = main.concat( [ 0, 0, 0, 0, 4, 3, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 0, 0, 2, 2, 2, 2, 4, 3, 0, 0, 3, 4, 4, 3, 3, 5, 5, 3, 2, 5, 5, 0, 0, 0, 0, 4, 4, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 5, 5, 3, 0, 3, 3, 4, 4, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] );\n\tvar rest = { 33432: 2, 33434: 5, 33437: 5, 34665: 4, 34850: 3, 34853: 4, 34855: 3, 34864: 3, 34866: 4, 36864: 7, 36867: 2, 36868: 2, 37121: 7, 37377: 10, 37378: 5, 37380: 10, 37381: 5, 37383: 3, 37384: 3, 37385: 3, 37386: 5, 37510: 7, 37520: 2, 37521: 2, 37522: 2, 40960: 7, 40961: 3, 40962: 4, 40963: 4, 40965: 4, 41486: 5, 41487: 5, 41488: 3, 41985: 3, 41986: 3, 41987: 3, 41988: 5, 41989: 3, 41990: 3, 41993: 3, 41994: 3, 41995: 7, 41996: 3, 42032: 2, 42033: 2, 42034: 5, 42036: 2, 42037: 2, 59932: 7 };\n\treturn {\n\t\tbasic: {\n\t\t\tmain: main,\n\t\t\trest: rest\n\t\t},\n\t\tgps: {\n\t\t\tmain: [ 1, 2, 5, 2, 5, 1, 5, 5, 0, 9 ],\n\t\t\trest: { 18: 2, 29: 2 }\n\t\t}\n\t};\n\n}();\n\nUTIF._readIFD = function ( bin, data, offset, ifds, depth, prm ) {\n\n\tvar cnt = bin.readUshort( data, offset ); offset += 2;\n\tvar ifd = {};\n\n\tif ( prm.debug ) console.log( '   '.repeat( depth ), ifds.length - 1, '>>>----------------' );\n\tfor ( var i = 0; i < cnt; i ++ ) {\n\n\t\tvar tag = bin.readUshort( data, offset ); offset += 2;\n\t\tvar type = bin.readUshort( data, offset ); offset += 2;\n\t\tvar num = bin.readUint( data, offset ); offset += 4;\n\t\tvar voff = bin.readUint( data, offset ); offset += 4;\n\n\t\tvar arr = [];\n\t\t//ifd[\"t\"+tag+\"-\"+UTIF.tags[tag]] = arr;\n\t\tif ( type == 1 || type == 7 ) {\n\n\t\t\tarr = new Uint8Array( data.buffer, ( num < 5 ? offset - 4 : voff ), num );\n\n\t\t}\n\n\t\tif ( type == 2 ) {\n\n\t\t\tvar o0 = ( num < 5 ? offset - 4 : voff ), c = data[ o0 ], len = Math.max( 0, Math.min( num - 1, data.length - o0 ) );\n\t\t\tif ( c < 128 || len == 0 ) arr.push( bin.readASCII( data, o0, len ) );\n\t\t\telse arr = new Uint8Array( data.buffer, o0, len );\n\n\t\t}\n\n\t\tif ( type == 3 ) {\n\n\t\t\tfor ( var j = 0; j < num; j ++ ) arr.push( bin.readUshort( data, ( num < 3 ? offset - 4 : voff ) + 2 * j ) );\n\n\t\t}\n\n\t\tif ( type == 4\n\t\t|| type == 13 ) {\n\n\t\t\tfor ( var j = 0; j < num; j ++ ) arr.push( bin.readUint( data, ( num < 2 ? offset - 4 : voff ) + 4 * j ) );\n\n\t\t}\n\n\t\tif ( type == 5 || type == 10 ) {\n\n\t\t\tvar ri = type == 5 ? bin.readUint : bin.readInt;\n\t\t\tfor ( var j = 0; j < num; j ++ ) arr.push( [ ri( data, voff + j * 8 ), ri( data, voff + j * 8 + 4 ) ] );\n\n\t\t}\n\n\t\tif ( type == 8 ) {\n\n\t\t\tfor ( var j = 0; j < num; j ++ ) arr.push( bin.readShort( data, ( num < 3 ? offset - 4 : voff ) + 2 * j ) );\n\n\t\t}\n\n\t\tif ( type == 9 ) {\n\n\t\t\tfor ( var j = 0; j < num; j ++ ) arr.push( bin.readInt( data, ( num < 2 ? offset - 4 : voff ) + 4 * j ) );\n\n\t\t}\n\n\t\tif ( type == 11 ) {\n\n\t\t\tfor ( var j = 0; j < num; j ++ ) arr.push( bin.readFloat( data, voff + j * 4 ) );\n\n\t\t}\n\n\t\tif ( type == 12 ) {\n\n\t\t\tfor ( var j = 0; j < num; j ++ ) arr.push( bin.readDouble( data, voff + j * 8 ) );\n\n\t\t}\n\n\t\tif ( num != 0 && arr.length == 0 ) {\n\n\t\t\tconsole.log( tag, 'unknown TIFF tag type: ', type, 'num:', num ); if ( i == 0 ) return; continue;\n\n\t\t}\n\n\t\tif ( prm.debug ) console.log( '   '.repeat( depth ), tag, type, UTIF.tags[ tag ], arr );\n\n\t\tifd[ 't' + tag ] = arr;\n\n\t\tif ( tag == 330 || tag == 34665 || tag == 34853 || ( tag == 50740 && bin.readUshort( data, bin.readUint( arr, 0 ) ) < 300 ) || tag == 61440 ) {\n\n\t\t\tvar oarr = tag == 50740 ? [ bin.readUint( arr, 0 ) ] : arr;\n\t\t\tvar subfd = [];\n\t\t\tfor ( var j = 0; j < oarr.length; j ++ ) UTIF._readIFD( bin, data, oarr[ j ], subfd, depth + 1, prm );\n\t\t\tif ( tag == 330 ) ifd.subIFD = subfd;\n\t\t\tif ( tag == 34665 ) ifd.exifIFD = subfd[ 0 ];\n\t\t\tif ( tag == 34853 ) ifd.gpsiIFD = subfd[ 0 ]; //console.log(\"gps\", subfd[0]);  }\n\t\t\tif ( tag == 50740 ) ifd.dngPrvt = subfd[ 0 ];\n\t\t\tif ( tag == 61440 ) ifd.fujiIFD = subfd[ 0 ];\n\n\t\t}\n\n\t\tif ( tag == 37500 && prm.parseMN ) {\n\n\t\t\tvar mn = arr;\n\t\t\t//console.log(bin.readASCII(mn,0,mn.length), mn);\n\t\t\tif ( bin.readASCII( mn, 0, 5 ) == 'Nikon' ) ifd.makerNote = UTIF[ 'decode' ]( mn.slice( 10 ).buffer )[ 0 ];\n\t\t\telse if ( bin.readUshort( data, voff ) < 300 && bin.readUshort( data, voff + 4 ) <= 12 ) {\n\n\t\t\t\tvar subsub = []; UTIF._readIFD( bin, data, voff, subsub, depth + 1, prm );\n\t\t\t\tifd.makerNote = subsub[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tifds.push( ifd );\n\tif ( prm.debug ) console.log( '   '.repeat( depth ), '<<<---------------' );\n\treturn offset;\n\n};\n\nUTIF.toRGBA = function ( out, type ) {\n\n\tconst w = out.width, h = out.height, area = w * h, data = out.data;\n\n\tlet img;\n\n\tswitch ( type ) {\n\n\t\tcase HalfFloatType:\n\n\t\t\timg = new Uint16Array( area * 4 );\n\t\t\tbreak;\n\n\t\tcase FloatType:\n\n\t\t\timg = new Float32Array( area * 4 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'THREE.LogLuvLoader: Unsupported texture data type: ' + type );\n\n\t}\n\n\tlet intp = out[ 't262' ] ? out[ 't262' ][ 0 ] : 2;\n\tconst bps = out[ 't258' ] ? Math.min( 32, out[ 't258' ][ 0 ] ) : 1;\n\n\tif ( out[ 't262' ] == null && bps == 1 ) intp = 0;\n\n\tif ( intp == 32845 ) {\n\n\t\tfor ( let y = 0; y < h; y ++ ) {\n\n\t\t\tfor ( let x = 0; x < w; x ++ ) {\n\n\t\t\t\tconst si = ( y * w + x ) * 6, qi = ( y * w + x ) * 4;\n\t\t\t\tlet L = ( data[ si + 1 ] << 8 ) | data[ si ];\n\n\t\t\t\tL = Math.pow( 2, ( L + 0.5 ) / 256 - 64 );\n\t\t\t\tconst u = ( data[ si + 3 ] + 0.5 ) / 410;\n\t\t\t\tconst v = ( data[ si + 5 ] + 0.5 ) / 410;\n\n\t\t\t\t// Luv to xyY\n\t\t\t\tconst sX = ( 9 * u ) / ( 6 * u - 16 * v + 12 );\n\t\t\t\tconst sY = ( 4 * v ) / ( 6 * u - 16 * v + 12 );\n\t\t\t\tconst bY = L;\n\n\t\t\t\t// xyY to XYZ\n\t\t\t\tconst X = ( sX * bY ) / sY, Y = bY, Z = ( 1 - sX - sY ) * bY / sY;\n\n\t\t\t\t// XYZ to linear RGB\n\t\t\t\tconst r = 2.690 * X - 1.276 * Y - 0.414 * Z;\n\t\t\t\tconst g = - 1.022 * X + 1.978 * Y + 0.044 * Z;\n\t\t\t\tconst b = 0.061 * X - 0.224 * Y + 1.163 * Z;\n\n\t\t\t\tif ( type === HalfFloatType ) {\n\n\t\t\t\t\timg[ qi ] = DataUtils.toHalfFloat( Math.min( r, 65504 ) );\n\t\t\t\t\timg[ qi + 1 ] = DataUtils.toHalfFloat( Math.min( g, 65504 ) );\n\t\t\t\t\timg[ qi + 2 ] = DataUtils.toHalfFloat( Math.min( b, 65504 ) );\n\t\t\t\t\timg[ qi + 3 ] = DataUtils.toHalfFloat( 1 );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\timg[ qi ] = r;\n\t\t\t\t\timg[ qi + 1 ] = g;\n\t\t\t\t\timg[ qi + 2 ] = b;\n\t\t\t\t\timg[ qi + 3 ] = 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\tthrow new Error( 'THREE.LogLuvLoader: Unsupported Photometric interpretation: ' + intp );\n\n\t}\n\n\treturn img;\n\n};\n\nUTIF._binBE =\n{\n\tnextZero: function ( data, o ) {\n\n\t\twhile ( data[ o ] != 0 ) o ++; return o;\n\n\t},\n\treadUshort: function ( buff, p ) {\n\n\t\treturn ( buff[ p ] << 8 ) | buff[ p + 1 ];\n\n\t},\n\treadShort: function ( buff, p ) {\n\n\t\tvar a = UTIF._binBE.ui8; a[ 0 ] = buff[ p + 1 ]; a[ 1 ] = buff[ p + 0 ]; return UTIF._binBE.i16[ 0 ];\n\n\t},\n\treadInt: function ( buff, p ) {\n\n\t\tvar a = UTIF._binBE.ui8; a[ 0 ] = buff[ p + 3 ]; a[ 1 ] = buff[ p + 2 ]; a[ 2 ] = buff[ p + 1 ]; a[ 3 ] = buff[ p + 0 ]; return UTIF._binBE.i32[ 0 ];\n\n\t},\n\treadUint: function ( buff, p ) {\n\n\t\tvar a = UTIF._binBE.ui8; a[ 0 ] = buff[ p + 3 ]; a[ 1 ] = buff[ p + 2 ]; a[ 2 ] = buff[ p + 1 ]; a[ 3 ] = buff[ p + 0 ]; return UTIF._binBE.ui32[ 0 ];\n\n\t},\n\treadASCII: function ( buff, p, l ) {\n\n\t\tvar s = ''; for ( var i = 0; i < l; i ++ ) s += String.fromCharCode( buff[ p + i ] ); return s;\n\n\t},\n\treadFloat: function ( buff, p ) {\n\n\t\tvar a = UTIF._binBE.ui8; for ( var i = 0; i < 4; i ++ ) a[ i ] = buff[ p + 3 - i ]; return UTIF._binBE.fl32[ 0 ];\n\n\t},\n\treadDouble: function ( buff, p ) {\n\n\t\tvar a = UTIF._binBE.ui8; for ( var i = 0; i < 8; i ++ ) a[ i ] = buff[ p + 7 - i ]; return UTIF._binBE.fl64[ 0 ];\n\n\t},\n\n\twriteUshort: function ( buff, p, n ) {\n\n\t\tbuff[ p ] = ( n >> 8 ) & 255; buff[ p + 1 ] = n & 255;\n\n\t},\n\twriteInt: function ( buff, p, n ) {\n\n\t\tvar a = UTIF._binBE.ui8; UTIF._binBE.i32[ 0 ] = n; buff[ p + 3 ] = a[ 0 ]; buff[ p + 2 ] = a[ 1 ]; buff[ p + 1 ] = a[ 2 ]; buff[ p + 0 ] = a[ 3 ];\n\n\t},\n\twriteUint: function ( buff, p, n ) {\n\n\t\tbuff[ p ] = ( n >> 24 ) & 255; buff[ p + 1 ] = ( n >> 16 ) & 255; buff[ p + 2 ] = ( n >> 8 ) & 255; buff[ p + 3 ] = ( n >> 0 ) & 255;\n\n\t},\n\twriteASCII: function ( buff, p, s ) {\n\n\t\tfor ( var i = 0; i < s.length; i ++ ) buff[ p + i ] = s.charCodeAt( i );\n\n\t},\n\twriteDouble: function ( buff, p, n ) {\n\n\t\tUTIF._binBE.fl64[ 0 ] = n;\n\t\tfor ( var i = 0; i < 8; i ++ ) buff[ p + i ] = UTIF._binBE.ui8[ 7 - i ];\n\n\t}\n};\nUTIF._binBE.ui8 = new Uint8Array( 8 );\nUTIF._binBE.i16 = new Int16Array( UTIF._binBE.ui8.buffer );\nUTIF._binBE.i32 = new Int32Array( UTIF._binBE.ui8.buffer );\nUTIF._binBE.ui32 = new Uint32Array( UTIF._binBE.ui8.buffer );\nUTIF._binBE.fl32 = new Float32Array( UTIF._binBE.ui8.buffer );\nUTIF._binBE.fl64 = new Float64Array( UTIF._binBE.ui8.buffer );\n\nUTIF._binLE =\n{\n\tnextZero: UTIF._binBE.nextZero,\n\treadUshort: function ( buff, p ) {\n\n\t\treturn ( buff[ p + 1 ] << 8 ) | buff[ p ];\n\n\t},\n\treadShort: function ( buff, p ) {\n\n\t\tvar a = UTIF._binBE.ui8; a[ 0 ] = buff[ p + 0 ]; a[ 1 ] = buff[ p + 1 ]; return UTIF._binBE.i16[ 0 ];\n\n\t},\n\treadInt: function ( buff, p ) {\n\n\t\tvar a = UTIF._binBE.ui8; a[ 0 ] = buff[ p + 0 ]; a[ 1 ] = buff[ p + 1 ]; a[ 2 ] = buff[ p + 2 ]; a[ 3 ] = buff[ p + 3 ]; return UTIF._binBE.i32[ 0 ];\n\n\t},\n\treadUint: function ( buff, p ) {\n\n\t\tvar a = UTIF._binBE.ui8; a[ 0 ] = buff[ p + 0 ]; a[ 1 ] = buff[ p + 1 ]; a[ 2 ] = buff[ p + 2 ]; a[ 3 ] = buff[ p + 3 ]; return UTIF._binBE.ui32[ 0 ];\n\n\t},\n\treadASCII: UTIF._binBE.readASCII,\n\treadFloat: function ( buff, p ) {\n\n\t\tvar a = UTIF._binBE.ui8; for ( var i = 0; i < 4; i ++ ) a[ i ] = buff[ p + i ]; return UTIF._binBE.fl32[ 0 ];\n\n\t},\n\treadDouble: function ( buff, p ) {\n\n\t\tvar a = UTIF._binBE.ui8; for ( var i = 0; i < 8; i ++ ) a[ i ] = buff[ p + i ]; return UTIF._binBE.fl64[ 0 ];\n\n\t},\n\n\twriteUshort: function ( buff, p, n ) {\n\n\t\tbuff[ p ] = ( n ) & 255; buff[ p + 1 ] = ( n >> 8 ) & 255;\n\n\t},\n\twriteInt: function ( buff, p, n ) {\n\n\t\tvar a = UTIF._binBE.ui8; UTIF._binBE.i32[ 0 ] = n; buff[ p + 0 ] = a[ 0 ]; buff[ p + 1 ] = a[ 1 ]; buff[ p + 2 ] = a[ 2 ]; buff[ p + 3 ] = a[ 3 ];\n\n\t},\n\twriteUint: function ( buff, p, n ) {\n\n\t\tbuff[ p ] = ( n >>> 0 ) & 255; buff[ p + 1 ] = ( n >>> 8 ) & 255; buff[ p + 2 ] = ( n >>> 16 ) & 255; buff[ p + 3 ] = ( n >>> 24 ) & 255;\n\n\t},\n\twriteASCII: UTIF._binBE.writeASCII\n};\nUTIF._copyTile = function ( tb, tw, th, b, w, h, xoff, yoff ) {\n\n\t//log(\"copyTile\", tw, th,  w, h, xoff, yoff);\n\tvar xlim = Math.min( tw, w - xoff );\n\tvar ylim = Math.min( th, h - yoff );\n\tfor ( var y = 0; y < ylim; y ++ ) {\n\n\t\tvar tof = ( yoff + y ) * w + xoff;\n\t\tvar sof = y * tw;\n\t\tfor ( var x = 0; x < xlim; x ++ ) b[ tof + x ] = tb[ sof + x ];\n\n\t}\n\n};\n\nexport { LogLuvLoader };\n"],"mappings":"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E,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAG,CAAC;EAC1yE,IAAIC,IAAI,GAAG;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,EAAE;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,EAAE;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}