{"ast":null,"code":"import { ShaderMaterial, UniformsUtils } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { DotScreenShader } from '../shaders/DotScreenShader.js';\nclass DotScreenPass extends Pass {\n  constructor(center, angle, scale) {\n    super();\n    const shader = DotScreenShader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    if (center !== undefined) this.uniforms['center'].value.copy(center);\n    if (angle !== undefined) this.uniforms['angle'].value = angle;\n    if (scale !== undefined) this.uniforms['scale'].value = scale;\n    this.material = new ShaderMaterial({\n      name: shader.name,\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n  render(renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['tSize'].value.set(readBuffer.width, readBuffer.height);\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n  dispose() {\n    this.material.dispose();\n    this.fsQuad.dispose();\n  }\n}\nexport { DotScreenPass };","map":{"version":3,"names":["ShaderMaterial","UniformsUtils","Pass","FullScreenQuad","DotScreenShader","DotScreenPass","constructor","center","angle","scale","shader","uniforms","clone","undefined","value","copy","material","name","vertexShader","fragmentShader","fsQuad","render","renderer","writeBuffer","readBuffer","texture","set","width","height","renderToScreen","setRenderTarget","clear","dispose"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/three/examples/jsm/postprocessing/DotScreenPass.js"],"sourcesContent":["import {\n\tShaderMaterial,\n\tUniformsUtils\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { DotScreenShader } from '../shaders/DotScreenShader.js';\n\nclass DotScreenPass extends Pass {\n\n\tconstructor( center, angle, scale ) {\n\n\t\tsuper();\n\n\t\tconst shader = DotScreenShader;\n\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\tif ( center !== undefined ) this.uniforms[ 'center' ].value.copy( center );\n\t\tif ( angle !== undefined ) this.uniforms[ 'angle' ].value = angle;\n\t\tif ( scale !== undefined ) this.uniforms[ 'scale' ].value = scale;\n\n\t\tthis.material = new ShaderMaterial( {\n\n\t\t\tname: shader.name,\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t\tthis.fsQuad = new FullScreenQuad( this.material );\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tthis.uniforms[ 'tDiffuse' ].value = readBuffer.texture;\n\t\tthis.uniforms[ 'tSize' ].value.set( readBuffer.width, readBuffer.height );\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\tif ( this.clear ) renderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tthis.material.dispose();\n\n\t\tthis.fsQuad.dispose();\n\n\t}\n\n}\n\nexport { DotScreenPass };\n"],"mappings":"AAAA,SACCA,cAAc,EACdC,aAAa,QACP,OAAO;AACd,SAASC,IAAI,EAAEC,cAAc,QAAQ,WAAW;AAChD,SAASC,eAAe,QAAQ,+BAA+B;AAE/D,MAAMC,aAAa,SAASH,IAAI,CAAC;EAEhCI,WAAWA,CAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAG;IAEnC,KAAK,CAAC,CAAC;IAEP,MAAMC,MAAM,GAAGN,eAAe;IAE9B,IAAI,CAACO,QAAQ,GAAGV,aAAa,CAACW,KAAK,CAAEF,MAAM,CAACC,QAAS,CAAC;IAEtD,IAAKJ,MAAM,KAAKM,SAAS,EAAG,IAAI,CAACF,QAAQ,CAAE,QAAQ,CAAE,CAACG,KAAK,CAACC,IAAI,CAAER,MAAO,CAAC;IAC1E,IAAKC,KAAK,KAAKK,SAAS,EAAG,IAAI,CAACF,QAAQ,CAAE,OAAO,CAAE,CAACG,KAAK,GAAGN,KAAK;IACjE,IAAKC,KAAK,KAAKI,SAAS,EAAG,IAAI,CAACF,QAAQ,CAAE,OAAO,CAAE,CAACG,KAAK,GAAGL,KAAK;IAEjE,IAAI,CAACO,QAAQ,GAAG,IAAIhB,cAAc,CAAE;MAEnCiB,IAAI,EAAEP,MAAM,CAACO,IAAI;MACjBN,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBO,YAAY,EAAER,MAAM,CAACQ,YAAY;MACjCC,cAAc,EAAET,MAAM,CAACS;IAExB,CAAE,CAAC;IAEH,IAAI,CAACC,MAAM,GAAG,IAAIjB,cAAc,CAAE,IAAI,CAACa,QAAS,CAAC;EAElD;EAEAK,MAAMA,CAAEC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,CAAC,8BAA+B;IAExE,IAAI,CAACb,QAAQ,CAAE,UAAU,CAAE,CAACG,KAAK,GAAGU,UAAU,CAACC,OAAO;IACtD,IAAI,CAACd,QAAQ,CAAE,OAAO,CAAE,CAACG,KAAK,CAACY,GAAG,CAAEF,UAAU,CAACG,KAAK,EAAEH,UAAU,CAACI,MAAO,CAAC;IAEzE,IAAK,IAAI,CAACC,cAAc,EAAG;MAE1BP,QAAQ,CAACQ,eAAe,CAAE,IAAK,CAAC;MAChC,IAAI,CAACV,MAAM,CAACC,MAAM,CAAEC,QAAS,CAAC;IAE/B,CAAC,MAAM;MAENA,QAAQ,CAACQ,eAAe,CAAEP,WAAY,CAAC;MACvC,IAAK,IAAI,CAACQ,KAAK,EAAGT,QAAQ,CAACS,KAAK,CAAC,CAAC;MAClC,IAAI,CAACX,MAAM,CAACC,MAAM,CAAEC,QAAS,CAAC;IAE/B;EAED;EAEAU,OAAOA,CAAA,EAAG;IAET,IAAI,CAAChB,QAAQ,CAACgB,OAAO,CAAC,CAAC;IAEvB,IAAI,CAACZ,MAAM,CAACY,OAAO,CAAC,CAAC;EAEtB;AAED;AAEA,SAAS3B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}