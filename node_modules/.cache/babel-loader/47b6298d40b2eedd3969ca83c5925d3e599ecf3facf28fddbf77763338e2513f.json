{"ast":null,"code":"import { ShaderMaterial, UniformsUtils } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { HalftoneShader } from '../shaders/HalftoneShader.js';\n\n/**\n * RGB Halftone pass for three.js effects composer. Requires HalftoneShader.\n */\n\nclass HalftonePass extends Pass {\n  constructor(width, height, params) {\n    super();\n    this.uniforms = UniformsUtils.clone(HalftoneShader.uniforms);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      fragmentShader: HalftoneShader.fragmentShader,\n      vertexShader: HalftoneShader.vertexShader\n    });\n\n    // set params\n    this.uniforms.width.value = width;\n    this.uniforms.height.value = height;\n    for (const key in params) {\n      if (params.hasOwnProperty(key) && this.uniforms.hasOwnProperty(key)) {\n        this.uniforms[key].value = params[key];\n      }\n    }\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n  render(renderer, writeBuffer, readBuffer /*, deltaTime, maskActive*/) {\n    this.material.uniforms['tDiffuse'].value = readBuffer.texture;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n  setSize(width, height) {\n    this.uniforms.width.value = width;\n    this.uniforms.height.value = height;\n  }\n  dispose() {\n    this.material.dispose();\n    this.fsQuad.dispose();\n  }\n}\nexport { HalftonePass };","map":{"version":3,"names":["ShaderMaterial","UniformsUtils","Pass","FullScreenQuad","HalftoneShader","HalftonePass","constructor","width","height","params","uniforms","clone","material","fragmentShader","vertexShader","value","key","hasOwnProperty","fsQuad","render","renderer","writeBuffer","readBuffer","texture","renderToScreen","setRenderTarget","clear","setSize","dispose"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/three/examples/jsm/postprocessing/HalftonePass.js"],"sourcesContent":["import {\n\tShaderMaterial,\n\tUniformsUtils\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { HalftoneShader } from '../shaders/HalftoneShader.js';\n\n/**\n * RGB Halftone pass for three.js effects composer. Requires HalftoneShader.\n */\n\nclass HalftonePass extends Pass {\n\n\tconstructor( width, height, params ) {\n\n\t\tsuper();\n\n\t \tthis.uniforms = UniformsUtils.clone( HalftoneShader.uniforms );\n\t \tthis.material = new ShaderMaterial( {\n\t \t\tuniforms: this.uniforms,\n\t \t\tfragmentShader: HalftoneShader.fragmentShader,\n\t \t\tvertexShader: HalftoneShader.vertexShader\n\t \t} );\n\n\t\t// set params\n\t\tthis.uniforms.width.value = width;\n\t\tthis.uniforms.height.value = height;\n\n\t\tfor ( const key in params ) {\n\n\t\t\tif ( params.hasOwnProperty( key ) && this.uniforms.hasOwnProperty( key ) ) {\n\n\t\t\t\tthis.uniforms[ key ].value = params[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.fsQuad = new FullScreenQuad( this.material );\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer/*, deltaTime, maskActive*/ ) {\n\n \t\tthis.material.uniforms[ 'tDiffuse' ].value = readBuffer.texture;\n\n \t\tif ( this.renderToScreen ) {\n\n \t\t\trenderer.setRenderTarget( null );\n \t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n \t\t\trenderer.setRenderTarget( writeBuffer );\n \t\t\tif ( this.clear ) renderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n \t}\n\n \tsetSize( width, height ) {\n\n \t\tthis.uniforms.width.value = width;\n \t\tthis.uniforms.height.value = height;\n\n \t}\n\n\tdispose() {\n\n\t\tthis.material.dispose();\n\n\t\tthis.fsQuad.dispose();\n\n\t}\n\n}\n\nexport { HalftonePass };\n"],"mappings":"AAAA,SACCA,cAAc,EACdC,aAAa,QACP,OAAO;AACd,SAASC,IAAI,EAAEC,cAAc,QAAQ,WAAW;AAChD,SAASC,cAAc,QAAQ,8BAA8B;;AAE7D;AACA;AACA;;AAEA,MAAMC,YAAY,SAASH,IAAI,CAAC;EAE/BI,WAAWA,CAAEC,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAG;IAEpC,KAAK,CAAC,CAAC;IAEN,IAAI,CAACC,QAAQ,GAAGT,aAAa,CAACU,KAAK,CAAEP,cAAc,CAACM,QAAS,CAAC;IAC9D,IAAI,CAACE,QAAQ,GAAG,IAAIZ,cAAc,CAAE;MACnCU,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBG,cAAc,EAAET,cAAc,CAACS,cAAc;MAC7CC,YAAY,EAAEV,cAAc,CAACU;IAC9B,CAAE,CAAC;;IAEJ;IACA,IAAI,CAACJ,QAAQ,CAACH,KAAK,CAACQ,KAAK,GAAGR,KAAK;IACjC,IAAI,CAACG,QAAQ,CAACF,MAAM,CAACO,KAAK,GAAGP,MAAM;IAEnC,KAAM,MAAMQ,GAAG,IAAIP,MAAM,EAAG;MAE3B,IAAKA,MAAM,CAACQ,cAAc,CAAED,GAAI,CAAC,IAAI,IAAI,CAACN,QAAQ,CAACO,cAAc,CAAED,GAAI,CAAC,EAAG;QAE1E,IAAI,CAACN,QAAQ,CAAEM,GAAG,CAAE,CAACD,KAAK,GAAGN,MAAM,CAAEO,GAAG,CAAE;MAE3C;IAED;IAEA,IAAI,CAACE,MAAM,GAAG,IAAIf,cAAc,CAAE,IAAI,CAACS,QAAS,CAAC;EAElD;EAEAO,MAAMA,CAAEC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,8BAA8B;IAErE,IAAI,CAACV,QAAQ,CAACF,QAAQ,CAAE,UAAU,CAAE,CAACK,KAAK,GAAGO,UAAU,CAACC,OAAO;IAE/D,IAAK,IAAI,CAACC,cAAc,EAAG;MAE1BJ,QAAQ,CAACK,eAAe,CAAE,IAAK,CAAC;MAChC,IAAI,CAACP,MAAM,CAACC,MAAM,CAAEC,QAAS,CAAC;IAEhC,CAAC,MAAM;MAELA,QAAQ,CAACK,eAAe,CAAEJ,WAAY,CAAC;MACvC,IAAK,IAAI,CAACK,KAAK,EAAGN,QAAQ,CAACM,KAAK,CAAC,CAAC;MACnC,IAAI,CAACR,MAAM,CAACC,MAAM,CAAEC,QAAS,CAAC;IAE/B;EAEA;EAEAO,OAAOA,CAAEpB,KAAK,EAAEC,MAAM,EAAG;IAExB,IAAI,CAACE,QAAQ,CAACH,KAAK,CAACQ,KAAK,GAAGR,KAAK;IACjC,IAAI,CAACG,QAAQ,CAACF,MAAM,CAACO,KAAK,GAAGP,MAAM;EAEpC;EAEDoB,OAAOA,CAAA,EAAG;IAET,IAAI,CAAChB,QAAQ,CAACgB,OAAO,CAAC,CAAC;IAEvB,IAAI,CAACV,MAAM,CAACU,OAAO,CAAC,CAAC;EAEtB;AAED;AAEA,SAASvB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}