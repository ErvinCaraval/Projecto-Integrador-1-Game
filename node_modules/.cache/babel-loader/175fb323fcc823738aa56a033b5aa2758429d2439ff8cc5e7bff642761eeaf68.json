{"ast":null,"code":"import { jsxs, jsx, Fragment } from \"react/jsx-runtime\";\nimport React, { useRef } from \"react\";\nimport { ChartUI } from \"./Graph.mjs\";\nimport { LightningBoltIcon, RulerHorizontalIcon, LapTimerIcon, TextAlignJustifyIcon, VercelLogoIcon, BarChartIcon, MarginIcon, ImageIcon, ActivityLogIcon, MinusIcon, DotIcon, DropdownMenuIcon, TriangleDownIcon, TriangleUpIcon } from \"@radix-ui/react-icons\";\nimport { HtmlMinimal } from \"./HtmlMinimal.mjs\";\nimport { PerfHeadless } from \"./PerfHeadless.mjs\";\nimport { PerfB, PerfIContainer, PerfI, PerfSmallI, Toggle, ToggleContainer, ContainerScroll, PerfS } from \"../styles.mjs\";\nimport { ProgramsUI } from \"./Program.mjs\";\nimport { usePerf, setPerf } from \"../store.mjs\";\nconst colorsGraph = colorBlind => {\n  const colors = {\n    overClock: `#ff6eff`,\n    fps: colorBlind ? \"100, 143, 255\" : \"238,38,110\",\n    cpu: colorBlind ? \"254, 254, 98\" : \"66,226,46\",\n    gpu: colorBlind ? \"254,254,254\" : \"253,151,31\",\n    custom: colorBlind ? \"86,180,233\" : \"40,255,255\"\n  };\n  return colors;\n};\nconst DynamicUIPerf = ({\n  showGraph,\n  colorBlind\n}) => {\n  const overclockingFps = usePerf(s => s.overclockingFps);\n  const fpsLimit = usePerf(s => s.fpsLimit);\n  return /* @__PURE__ */jsxs(PerfB, {\n    style: showGraph ? {\n      color: overclockingFps ? colorsGraph(colorBlind).overClock.toString() : `rgb(${colorsGraph(colorBlind).fps})`\n    } : {},\n    children: [\"FPS \", overclockingFps ? `${fpsLimit}ðŸš€` : \"\"]\n  });\n};\nconst DynamicUI = ({\n  showGraph,\n  colorBlind,\n  customData,\n  minimal\n}) => {\n  const gl = usePerf(state => state.gl);\n  return gl ? /* @__PURE__ */jsxs(PerfIContainer, {\n    children: [/* @__PURE__ */jsxs(PerfI, {\n      children: [/* @__PURE__ */jsx(LightningBoltIcon, {}), /* @__PURE__ */jsx(PerfB, {\n        style: showGraph ? {\n          color: `rgb(${colorsGraph(colorBlind).gpu.toString()})`\n        } : {},\n        children: \"GPU\"\n      }), /* @__PURE__ */jsx(PerfSmallI, {\n        children: \"ms\"\n      })]\n    }), /* @__PURE__ */jsxs(PerfI, {\n      children: [/* @__PURE__ */jsx(RulerHorizontalIcon, {}), /* @__PURE__ */jsx(PerfB, {\n        style: showGraph ? {\n          color: `rgb(${colorsGraph(colorBlind).cpu.toString()})`\n        } : {},\n        children: \"CPU\"\n      }), /* @__PURE__ */jsx(PerfSmallI, {\n        children: \"ms\"\n      })]\n    }), /* @__PURE__ */jsxs(PerfI, {\n      children: [/* @__PURE__ */jsx(LapTimerIcon, {}), /* @__PURE__ */jsx(DynamicUIPerf, {\n        showGraph,\n        colorBlind\n      })]\n    }), !minimal && gl && /* @__PURE__ */jsxs(PerfI, {\n      children: [/* @__PURE__ */jsx(TextAlignJustifyIcon, {}), /* @__PURE__ */jsx(PerfB, {\n        children: gl.info.render.calls === 1 ? \"call\" : \"calls\"\n      })]\n    }), !minimal && gl && /* @__PURE__ */jsxs(PerfI, {\n      children: [/* @__PURE__ */jsx(VercelLogoIcon, {}), /* @__PURE__ */jsx(PerfB, {\n        children: \"Triangles\"\n      })]\n    }), customData && /* @__PURE__ */jsxs(PerfI, {\n      children: [/* @__PURE__ */jsx(BarChartIcon, {}), /* @__PURE__ */jsx(PerfB, {\n        style: showGraph ? {\n          color: `rgb(${colorsGraph(colorBlind).custom})`\n        } : {},\n        children: customData.name\n      }), customData.info && /* @__PURE__ */jsx(PerfSmallI, {\n        children: customData.info\n      })]\n    })]\n  }) : null;\n};\nconst PerfUI = ({\n  showGraph,\n  colorBlind,\n  deepAnalyze,\n  customData,\n  matrixUpdate,\n  openByDefault,\n  minimal\n}) => {\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsx(DynamicUI, {\n      showGraph,\n      colorBlind,\n      customData,\n      minimal\n    }), !minimal && /* @__PURE__ */jsx(PerfThree, {\n      matrixUpdate,\n      openByDefault,\n      deepAnalyze,\n      showGraph\n    })]\n  });\n};\nconst InfoUI = ({\n  matrixUpdate\n}) => {\n  return /* @__PURE__ */jsxs(\"div\", {\n    children: [/* @__PURE__ */jsxs(PerfI, {\n      children: [/* @__PURE__ */jsx(MarginIcon, {}), /* @__PURE__ */jsx(PerfB, {\n        children: \"Geometries\"\n      })]\n    }), /* @__PURE__ */jsxs(PerfI, {\n      children: [/* @__PURE__ */jsx(ImageIcon, {}), /* @__PURE__ */jsx(PerfB, {\n        children: \"Textures\"\n      })]\n    }), /* @__PURE__ */jsxs(PerfI, {\n      children: [/* @__PURE__ */jsx(ActivityLogIcon, {}), /* @__PURE__ */jsx(PerfB, {\n        children: \"shaders\"\n      })]\n    }), /* @__PURE__ */jsxs(PerfI, {\n      children: [/* @__PURE__ */jsx(MinusIcon, {}), /* @__PURE__ */jsx(PerfB, {\n        children: \"Lines\"\n      })]\n    }), /* @__PURE__ */jsxs(PerfI, {\n      children: [/* @__PURE__ */jsx(DotIcon, {}), /* @__PURE__ */jsx(PerfB, {\n        children: \"Points\"\n      })]\n    }), matrixUpdate && /* @__PURE__ */jsxs(PerfI, {\n      children: [/* @__PURE__ */jsx(DropdownMenuIcon, {}), /* @__PURE__ */jsx(PerfB, {\n        children: \"Matrices\"\n      })]\n    })]\n  });\n};\nconst ToggleEl = ({\n  tab,\n  title,\n  set\n}) => {\n  const tabStore = usePerf(s => s.tab);\n  return /* @__PURE__ */jsx(Toggle, {\n    className: `${tabStore === tab ? \" __perf_toggle_tab_active\" : \"\"}`,\n    onClick: () => {\n      set(true);\n      setPerf({\n        tab\n      });\n    },\n    children: /* @__PURE__ */jsx(\"span\", {\n      children: title\n    })\n  });\n};\nconst PerfThree = ({\n  openByDefault,\n  showGraph,\n  deepAnalyze,\n  matrixUpdate\n}) => {\n  const [show, set] = React.useState(openByDefault);\n  return /* @__PURE__ */jsxs(\"span\", {\n    children: [/* @__PURE__ */jsx(TabContainers, {\n      show,\n      showGraph,\n      matrixUpdate\n    }), openByDefault && !deepAnalyze ? null : /* @__PURE__ */jsxs(ToggleContainer, {\n      className: \"__perf_toggle\",\n      children: [deepAnalyze && /* @__PURE__ */jsx(ToggleEl, {\n        tab: \"programs\",\n        title: \"Programs\",\n        set\n      }), deepAnalyze && /* @__PURE__ */jsx(ToggleEl, {\n        tab: \"infos\",\n        title: \"Infos\",\n        set\n      }), /* @__PURE__ */jsx(Toggle, {\n        onClick: () => {\n          set(!show);\n        },\n        children: show ? /* @__PURE__ */jsxs(\"span\", {\n          children: [/* @__PURE__ */jsx(TriangleDownIcon, {}), \" Minimize\"]\n        }) : /* @__PURE__ */jsxs(\"span\", {\n          children: [/* @__PURE__ */jsx(TriangleUpIcon, {}), \" More\"]\n        })\n      })]\n    })]\n  });\n};\nconst TabContainers = ({\n  show,\n  showGraph,\n  matrixUpdate\n}) => {\n  const tab = usePerf(state => state.tab);\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsx(InfoUI, {\n      matrixUpdate\n    }), show && /* @__PURE__ */jsx(\"div\", {\n      children: /* @__PURE__ */jsx(ContainerScroll, {\n        style: {\n          marginTop: showGraph ? \"38px\" : 0\n        },\n        children: tab === \"programs\" && /* @__PURE__ */jsx(ProgramsUI, {})\n      })\n    })]\n  });\n};\nconst Perf = ({\n  showGraph = true,\n  colorBlind = false,\n  openByDefault = true,\n  className,\n  overClock = false,\n  style,\n  position = \"top-right\",\n  chart,\n  logsPerSecond,\n  deepAnalyze = false,\n  antialias = true,\n  customData,\n  matrixUpdate,\n  minimal\n}) => {\n  const perfContainerRef = useRef(null);\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsx(PerfHeadless, {\n      logsPerSecond,\n      chart,\n      overClock,\n      deepAnalyze,\n      matrixUpdate\n    }), /* @__PURE__ */jsx(HtmlMinimal, {\n      name: \"r3f-perf\",\n      children: /* @__PURE__ */jsxs(PerfS, {\n        className: (className ? \" \".concat(className) : \" \") + ` ${position ? position : \"\"} ${minimal ? \"minimal\" : \"\"}`,\n        style: {\n          minHeight: minimal ? \"37px\" : showGraph ? \"100px\" : \"60px\",\n          ...style\n        },\n        ref: perfContainerRef,\n        children: [/* @__PURE__ */jsx(ChartUI, {\n          perfContainerRef,\n          colorBlind,\n          chart,\n          showGraph,\n          antialias,\n          customData,\n          minimal,\n          matrixUpdate\n        }), /* @__PURE__ */jsx(PerfUI, {\n          colorBlind,\n          showGraph,\n          deepAnalyze,\n          openByDefault,\n          customData,\n          matrixUpdate,\n          minimal\n        })]\n      })\n    })]\n  });\n};\nexport { Perf, colorsGraph };","map":{"version":3,"names":["colorsGraph","colorBlind","colors","overClock","fps","cpu","gpu","custom","DynamicUIPerf","showGraph","overclockingFps","usePerf","s","fpsLimit","jsxs","PerfB","style","color","toString","children","DynamicUI","customData","minimal","gl","state","PerfIContainer","PerfI","jsx","LightningBoltIcon","PerfSmallI","RulerHorizontalIcon","LapTimerIcon","TextAlignJustifyIcon","info","render","calls","VercelLogoIcon","BarChartIcon","name","PerfUI","deepAnalyze","matrixUpdate","openByDefault","Fragment","PerfThree","InfoUI","MarginIcon","ImageIcon","ActivityLogIcon","MinusIcon","DotIcon","DropdownMenuIcon","ToggleEl","tab","title","set","tabStore","Toggle","className","onClick","setPerf","show","React","useState","TabContainers","ToggleContainer","TriangleDownIcon","TriangleUpIcon","ContainerScroll","marginTop","ProgramsUI","Perf","position","chart","logsPerSecond","antialias","perfContainerRef","useRef","PerfHeadless","HtmlMinimal","PerfS","concat","minHeight","ref","ChartUI"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/r3f-perf/src/components/Perf.tsx"],"sourcesContent":["import React, { FC, useRef } from 'react'\nimport { ChartUI } from './Graph'\nimport {\n  ActivityLogIcon,\n  BarChartIcon,\n  DotIcon,\n  DropdownMenuIcon,\n  ImageIcon,\n  LapTimerIcon,\n  LightningBoltIcon,\n  MarginIcon,\n  MinusIcon,\n  RulerHorizontalIcon,\n  TextAlignJustifyIcon,\n  TriangleDownIcon,\n  TriangleUpIcon,\n  VercelLogoIcon,\n} from '@radix-ui/react-icons'\n\nimport { HtmlMinimal } from './HtmlMinimal'\nimport { PerfHeadless } from './PerfHeadless'\n\nimport { Toggle, PerfS, PerfIContainer, PerfI, PerfB, ToggleContainer, ContainerScroll, PerfSmallI } from '../styles'\nimport { ProgramsUI } from './Program'\nimport { setPerf, usePerf } from '../store'\nimport { PerfPropsGui } from '../typings'\n\ninterface colors {\n  [index: string]: string\n}\n\nexport const colorsGraph = (colorBlind: boolean | undefined) => {\n  const colors: colors = {\n    overClock: `#ff6eff`,\n    fps: colorBlind ? '100, 143, 255' : '238,38,110',\n    cpu: colorBlind ? '254, 254, 98' : '66,226,46',\n    gpu: colorBlind ? '254,254,254' : '253,151,31',\n    custom: colorBlind ? '86,180,233' : '40,255,255',\n  }\n  return colors\n}\n\nconst DynamicUIPerf: FC<PerfPropsGui> = ({ showGraph, colorBlind }) => {\n  const overclockingFps = usePerf((s) => s.overclockingFps)\n  const fpsLimit = usePerf((s) => s.fpsLimit)\n\n  return (\n    <PerfB\n      style={\n        showGraph\n          ? {\n              color: overclockingFps\n                ? colorsGraph(colorBlind).overClock.toString()\n                : `rgb(${colorsGraph(colorBlind).fps})`,\n            }\n          : {}\n      }>\n      FPS {overclockingFps ? `${fpsLimit}ðŸš€` : ''}\n    </PerfB>\n  )\n}\n\nconst DynamicUI: FC<PerfPropsGui> = ({ showGraph, colorBlind, customData, minimal }) => {\n  const gl = usePerf((state) => state.gl)\n\n  return gl ? (\n    <PerfIContainer>\n      <PerfI>\n        <LightningBoltIcon />\n        <PerfB\n          style={\n            showGraph\n              ? {\n                  color: `rgb(${colorsGraph(colorBlind).gpu.toString()})`,\n                }\n              : {}\n          }>\n          GPU\n        </PerfB>\n        <PerfSmallI>ms</PerfSmallI>\n      </PerfI>\n      <PerfI>\n        <RulerHorizontalIcon />\n        <PerfB\n          style={\n            showGraph\n              ? {\n                  color: `rgb(${colorsGraph(colorBlind).cpu.toString()})`,\n                }\n              : {}\n          }>\n          CPU\n        </PerfB>\n        <PerfSmallI>ms</PerfSmallI>\n      </PerfI>\n      {/* <PerfI>\n        <RulerHorizontalIcon />\n        <PerfB  style={\n            showGraph\n              ? {\n                  color: `rgb(${colorsGraph(colorBlind).cpu.toString()})`,\n                }\n              : {}\n          }>Memory</PerfB>\n        <PerfSmallI>mb</PerfSmallI>\n      </PerfI> */}\n      <PerfI>\n        <LapTimerIcon />\n        <DynamicUIPerf showGraph={showGraph} colorBlind={colorBlind} />\n      </PerfI>\n      {!minimal && gl && (\n        <PerfI>\n          <TextAlignJustifyIcon />\n          {/* @ts-ignore */}\n          <PerfB>{gl.info.render.calls === 1 ? 'call' : 'calls'}</PerfB>\n        </PerfI>\n      )}\n      {!minimal && gl && (\n        <PerfI>\n          <VercelLogoIcon />\n          <PerfB>Triangles</PerfB>\n        </PerfI>\n      )}\n      {customData && (\n        <PerfI>\n          <BarChartIcon />\n          <PerfB style={showGraph ? { color: `rgb(${colorsGraph(colorBlind).custom})` } : {}}>{customData.name}</PerfB>\n          {customData.info && <PerfSmallI>{customData.info}</PerfSmallI>}\n        </PerfI>\n      )}\n    </PerfIContainer>\n  ) : null\n}\n\nconst PerfUI: FC<PerfPropsGui> = ({\n  showGraph,\n  colorBlind,\n  deepAnalyze,\n  customData,\n  matrixUpdate,\n  openByDefault,\n  minimal,\n}) => {\n  return (\n    <>\n      <DynamicUI showGraph={showGraph} colorBlind={colorBlind} customData={customData} minimal={minimal} />\n      {!minimal && (\n        <PerfThree\n          matrixUpdate={matrixUpdate}\n          openByDefault={openByDefault}\n          deepAnalyze={deepAnalyze}\n          showGraph={showGraph}\n        />\n      )}\n    </>\n  )\n}\n\nconst InfoUI: FC<PerfPropsGui> = ({ matrixUpdate }) => {\n  return (\n    <div>\n      <PerfI>\n        <MarginIcon />\n        <PerfB>Geometries</PerfB>\n      </PerfI>\n      <PerfI>\n        <ImageIcon />\n        <PerfB>Textures</PerfB>\n      </PerfI>\n      <PerfI>\n        <ActivityLogIcon />\n        <PerfB>shaders</PerfB>\n      </PerfI>\n      <PerfI>\n        <MinusIcon />\n        <PerfB>Lines</PerfB>\n      </PerfI>\n      <PerfI>\n        <DotIcon />\n        <PerfB>Points</PerfB>\n      </PerfI>\n      {matrixUpdate && (\n        <PerfI>\n          <DropdownMenuIcon />\n          <PerfB>Matrices</PerfB>\n        </PerfI>\n      )}\n    </div>\n  )\n}\n\nconst ToggleEl = ({ tab, title, set }: any) => {\n  const tabStore = usePerf((s: { tab: any }) => s.tab)\n  return (\n    <Toggle\n      className={`${tabStore === tab ? ' __perf_toggle_tab_active' : ''}`}\n      onClick={() => {\n        set(true)\n        setPerf({ tab: tab })\n      }}>\n      <span>{title}</span>\n    </Toggle>\n  )\n}\nconst PerfThree: FC<PerfPropsGui> = ({ openByDefault, showGraph, deepAnalyze, matrixUpdate }) => {\n  const [show, set] = React.useState(openByDefault)\n\n  return (\n    <span>\n      <TabContainers show={show} showGraph={showGraph} matrixUpdate={matrixUpdate} />\n      {openByDefault && !deepAnalyze ? null : (\n        <ToggleContainer className={'__perf_toggle'}>\n          {/* <ToggleEl tab=\"inspector\" title=\"Inspector\" set={set} /> */}\n          {deepAnalyze && <ToggleEl tab=\"programs\" title=\"Programs\" set={set} />}\n          {deepAnalyze && <ToggleEl tab=\"infos\" title=\"Infos\" set={set} />}\n          <Toggle\n            onClick={() => {\n              set(!show)\n            }}>\n            {show ? (\n              <span>\n                <TriangleDownIcon /> Minimize\n              </span>\n            ) : (\n              <span>\n                <TriangleUpIcon /> More\n              </span>\n            )}\n          </Toggle>\n        </ToggleContainer>\n      )}\n    </span>\n  )\n}\n\nconst TabContainers = ({ show, showGraph, matrixUpdate }: any) => {\n  const tab = usePerf((state) => state.tab)\n\n  return (\n    <>\n      <InfoUI matrixUpdate={matrixUpdate} />\n      {show && (\n        <div>\n          <ContainerScroll style={{ marginTop: showGraph ? '38px' : 0 }}>\n            {tab === 'programs' && <ProgramsUI />}\n          </ContainerScroll>\n        </div>\n      )}\n    </>\n  )\n}\n/**\n * Performance profiler component\n */\nexport const Perf: FC<PerfPropsGui> = ({\n  showGraph = true,\n  colorBlind = false,\n  openByDefault = true,\n  className,\n  overClock = false,\n  style,\n  position = 'top-right',\n  chart,\n  logsPerSecond,\n  deepAnalyze = false,\n  antialias = true,\n  customData,\n  matrixUpdate,\n  minimal,\n}) => {\n  const perfContainerRef = useRef(null)\n\n  return (\n    <>\n      <PerfHeadless\n        logsPerSecond={logsPerSecond}\n        chart={chart}\n        overClock={overClock}\n        deepAnalyze={deepAnalyze}\n        matrixUpdate={matrixUpdate}\n      />\n      <HtmlMinimal name='r3f-perf'>\n        <PerfS\n          className={\n            (className ? ' '.concat(className) : ' ') + ` ${position ? position : ''} ${minimal ? 'minimal' : ''}`\n          }\n          style={{ minHeight: minimal ? '37px' : showGraph ? '100px' : '60px', ...style }}\n          ref={perfContainerRef}>\n          <ChartUI\n            perfContainerRef={perfContainerRef}\n            colorBlind={colorBlind}\n            chart={chart}\n            showGraph={showGraph}\n            antialias={antialias}\n            customData={customData}\n            minimal={minimal}\n            matrixUpdate={matrixUpdate}\n          />\n          <PerfUI\n            colorBlind={colorBlind}\n            showGraph={showGraph}\n            deepAnalyze={deepAnalyze}\n            openByDefault={openByDefault}\n            customData={customData}\n            matrixUpdate={matrixUpdate}\n            minimal={minimal}\n          />\n        </PerfS>\n      </HtmlMinimal>\n    </>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}