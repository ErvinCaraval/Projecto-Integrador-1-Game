{"ast":null,"code":"import { AnimationMixer, Box3, Mesh, MeshLambertMaterial, Object3D, TextureLoader, UVMapping, SRGBColorSpace } from 'three';\nimport { MD2Loader } from '../loaders/MD2Loader.js';\nclass MD2Character {\n  constructor() {\n    this.scale = 1;\n    this.animationFPS = 6;\n    this.root = new Object3D();\n    this.meshBody = null;\n    this.meshWeapon = null;\n    this.skinsBody = [];\n    this.skinsWeapon = [];\n    this.weapons = [];\n    this.activeAnimation = null;\n    this.mixer = null;\n    this.onLoadComplete = function () {};\n    this.loadCounter = 0;\n  }\n  loadParts(config) {\n    const scope = this;\n    function createPart(geometry, skinMap) {\n      const materialWireframe = new MeshLambertMaterial({\n        color: 0xffaa00,\n        wireframe: true\n      });\n      const materialTexture = new MeshLambertMaterial({\n        color: 0xffffff,\n        wireframe: false,\n        map: skinMap\n      });\n\n      //\n\n      const mesh = new Mesh(geometry, materialTexture);\n      mesh.rotation.y = -Math.PI / 2;\n      mesh.castShadow = true;\n      mesh.receiveShadow = true;\n\n      //\n\n      mesh.materialTexture = materialTexture;\n      mesh.materialWireframe = materialWireframe;\n      return mesh;\n    }\n    function loadTextures(baseUrl, textureUrls) {\n      const textureLoader = new TextureLoader();\n      const textures = [];\n      for (let i = 0; i < textureUrls.length; i++) {\n        textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\n        textures[i].mapping = UVMapping;\n        textures[i].name = textureUrls[i];\n        textures[i].colorSpace = SRGBColorSpace;\n      }\n      return textures;\n    }\n    function checkLoadingComplete() {\n      scope.loadCounter -= 1;\n      if (scope.loadCounter === 0) scope.onLoadComplete();\n    }\n    this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n    const weaponsTextures = [];\n    for (let i = 0; i < config.weapons.length; i++) weaponsTextures[i] = config.weapons[i][1];\n    // SKINS\n\n    this.skinsBody = loadTextures(config.baseUrl + 'skins/', config.skins);\n    this.skinsWeapon = loadTextures(config.baseUrl + 'skins/', weaponsTextures);\n\n    // BODY\n\n    const loader = new MD2Loader();\n    loader.load(config.baseUrl + config.body, function (geo) {\n      const boundingBox = new Box3();\n      boundingBox.setFromBufferAttribute(geo.attributes.position);\n      scope.root.position.y = -scope.scale * boundingBox.min.y;\n      const mesh = createPart(geo, scope.skinsBody[0]);\n      mesh.scale.set(scope.scale, scope.scale, scope.scale);\n      scope.root.add(mesh);\n      scope.meshBody = mesh;\n      scope.meshBody.clipOffset = 0;\n      scope.activeAnimationClipName = mesh.geometry.animations[0].name;\n      scope.mixer = new AnimationMixer(mesh);\n      checkLoadingComplete();\n    });\n\n    // WEAPONS\n\n    const generateCallback = function (index, name) {\n      return function (geo) {\n        const mesh = createPart(geo, scope.skinsWeapon[index]);\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\n        mesh.visible = false;\n        mesh.name = name;\n        scope.root.add(mesh);\n        scope.weapons[index] = mesh;\n        scope.meshWeapon = mesh;\n        checkLoadingComplete();\n      };\n    };\n    for (let i = 0; i < config.weapons.length; i++) {\n      loader.load(config.baseUrl + config.weapons[i][0], generateCallback(i, config.weapons[i][0]));\n    }\n  }\n  setPlaybackRate(rate) {\n    if (rate !== 0) {\n      this.mixer.timeScale = 1 / rate;\n    } else {\n      this.mixer.timeScale = 0;\n    }\n  }\n  setWireframe(wireframeEnabled) {\n    if (wireframeEnabled) {\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialWireframe;\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialWireframe;\n    } else {\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialTexture;\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialTexture;\n    }\n  }\n  setSkin(index) {\n    if (this.meshBody && this.meshBody.material.wireframe === false) {\n      this.meshBody.material.map = this.skinsBody[index];\n    }\n  }\n  setWeapon(index) {\n    for (let i = 0; i < this.weapons.length; i++) this.weapons[i].visible = false;\n    const activeWeapon = this.weapons[index];\n    if (activeWeapon) {\n      activeWeapon.visible = true;\n      this.meshWeapon = activeWeapon;\n      this.syncWeaponAnimation();\n    }\n  }\n  setAnimation(clipName) {\n    if (this.meshBody) {\n      if (this.meshBody.activeAction) {\n        this.meshBody.activeAction.stop();\n        this.meshBody.activeAction = null;\n      }\n      const action = this.mixer.clipAction(clipName, this.meshBody);\n      if (action) {\n        this.meshBody.activeAction = action.play();\n      }\n    }\n    this.activeClipName = clipName;\n    this.syncWeaponAnimation();\n  }\n  syncWeaponAnimation() {\n    const clipName = this.activeClipName;\n    if (this.meshWeapon) {\n      if (this.meshWeapon.activeAction) {\n        this.meshWeapon.activeAction.stop();\n        this.meshWeapon.activeAction = null;\n      }\n      const action = this.mixer.clipAction(clipName, this.meshWeapon);\n      if (action) {\n        this.meshWeapon.activeAction = action.syncWith(this.meshBody.activeAction).play();\n      }\n    }\n  }\n  update(delta) {\n    if (this.mixer) this.mixer.update(delta);\n  }\n}\nexport { MD2Character };","map":{"version":3,"names":["AnimationMixer","Box3","Mesh","MeshLambertMaterial","Object3D","TextureLoader","UVMapping","SRGBColorSpace","MD2Loader","MD2Character","constructor","scale","animationFPS","root","meshBody","meshWeapon","skinsBody","skinsWeapon","weapons","activeAnimation","mixer","onLoadComplete","loadCounter","loadParts","config","scope","createPart","geometry","skinMap","materialWireframe","color","wireframe","materialTexture","map","mesh","rotation","y","Math","PI","castShadow","receiveShadow","loadTextures","baseUrl","textureUrls","textureLoader","textures","i","length","load","checkLoadingComplete","mapping","name","colorSpace","skins","weaponsTextures","loader","body","geo","boundingBox","setFromBufferAttribute","attributes","position","min","set","add","clipOffset","activeAnimationClipName","animations","generateCallback","index","visible","setPlaybackRate","rate","timeScale","setWireframe","wireframeEnabled","material","setSkin","setWeapon","activeWeapon","syncWeaponAnimation","setAnimation","clipName","activeAction","stop","action","clipAction","play","activeClipName","syncWith","update","delta"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/three/examples/jsm/misc/MD2Character.js"],"sourcesContent":["import {\n\tAnimationMixer,\n\tBox3,\n\tMesh,\n\tMeshLambertMaterial,\n\tObject3D,\n\tTextureLoader,\n\tUVMapping,\n\tSRGBColorSpace\n} from 'three';\nimport { MD2Loader } from '../loaders/MD2Loader.js';\n\nclass MD2Character {\n\n\tconstructor() {\n\n\t\tthis.scale = 1;\n\t\tthis.animationFPS = 6;\n\n\t\tthis.root = new Object3D();\n\n\t\tthis.meshBody = null;\n\t\tthis.meshWeapon = null;\n\n\t\tthis.skinsBody = [];\n\t\tthis.skinsWeapon = [];\n\n\t\tthis.weapons = [];\n\n\t\tthis.activeAnimation = null;\n\n\t\tthis.mixer = null;\n\n\t\tthis.onLoadComplete = function () {};\n\n\t\tthis.loadCounter = 0;\n\n\t}\n\n\tloadParts( config ) {\n\n\t\tconst scope = this;\n\n\t\tfunction createPart( geometry, skinMap ) {\n\n\t\t\tconst materialWireframe = new MeshLambertMaterial( { color: 0xffaa00, wireframe: true } );\n\t\t\tconst materialTexture = new MeshLambertMaterial( { color: 0xffffff, wireframe: false, map: skinMap } );\n\n\t\t\t//\n\n\t\t\tconst mesh = new Mesh( geometry, materialTexture );\n\t\t\tmesh.rotation.y = - Math.PI / 2;\n\n\t\t\tmesh.castShadow = true;\n\t\t\tmesh.receiveShadow = true;\n\n\t\t\t//\n\n\t\t\tmesh.materialTexture = materialTexture;\n\t\t\tmesh.materialWireframe = materialWireframe;\n\n\t\t\treturn mesh;\n\n\t\t}\n\n\t\tfunction loadTextures( baseUrl, textureUrls ) {\n\n\t\t\tconst textureLoader = new TextureLoader();\n\t\t\tconst textures = [];\n\n\t\t\tfor ( let i = 0; i < textureUrls.length; i ++ ) {\n\n\t\t\t\ttextures[ i ] = textureLoader.load( baseUrl + textureUrls[ i ], checkLoadingComplete );\n\t\t\t\ttextures[ i ].mapping = UVMapping;\n\t\t\t\ttextures[ i ].name = textureUrls[ i ];\n\t\t\t\ttextures[ i ].colorSpace = SRGBColorSpace;\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t}\n\n\t\tfunction checkLoadingComplete() {\n\n\t\t\tscope.loadCounter -= 1;\n\n\t\t\tif ( scope.loadCounter === 0 ) scope.onLoadComplete();\n\n\t\t}\n\n\t\tthis.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n\n\t\tconst weaponsTextures = [];\n\t\tfor ( let i = 0; i < config.weapons.length; i ++ ) weaponsTextures[ i ] = config.weapons[ i ][ 1 ];\n\t\t// SKINS\n\n\t\tthis.skinsBody = loadTextures( config.baseUrl + 'skins/', config.skins );\n\t\tthis.skinsWeapon = loadTextures( config.baseUrl + 'skins/', weaponsTextures );\n\n\t\t// BODY\n\n\t\tconst loader = new MD2Loader();\n\n\t\tloader.load( config.baseUrl + config.body, function ( geo ) {\n\n\t\t\tconst boundingBox = new Box3();\n\t\t\tboundingBox.setFromBufferAttribute( geo.attributes.position );\n\n\t\t\tscope.root.position.y = - scope.scale * boundingBox.min.y;\n\n\t\t\tconst mesh = createPart( geo, scope.skinsBody[ 0 ] );\n\t\t\tmesh.scale.set( scope.scale, scope.scale, scope.scale );\n\n\t\t\tscope.root.add( mesh );\n\n\t\t\tscope.meshBody = mesh;\n\n\t\t\tscope.meshBody.clipOffset = 0;\n\t\t\tscope.activeAnimationClipName = mesh.geometry.animations[ 0 ].name;\n\n\t\t\tscope.mixer = new AnimationMixer( mesh );\n\n\t\t\tcheckLoadingComplete();\n\n\t\t} );\n\n\t\t// WEAPONS\n\n\t\tconst generateCallback = function ( index, name ) {\n\n\t\t\treturn function ( geo ) {\n\n\t\t\t\tconst mesh = createPart( geo, scope.skinsWeapon[ index ] );\n\t\t\t\tmesh.scale.set( scope.scale, scope.scale, scope.scale );\n\t\t\t\tmesh.visible = false;\n\n\t\t\t\tmesh.name = name;\n\n\t\t\t\tscope.root.add( mesh );\n\n\t\t\t\tscope.weapons[ index ] = mesh;\n\t\t\t\tscope.meshWeapon = mesh;\n\n\t\t\t\tcheckLoadingComplete();\n\n\t\t\t};\n\n\t\t};\n\n\t\tfor ( let i = 0; i < config.weapons.length; i ++ ) {\n\n\t\t\tloader.load( config.baseUrl + config.weapons[ i ][ 0 ], generateCallback( i, config.weapons[ i ][ 0 ] ) );\n\n\t\t}\n\n\t}\n\n\tsetPlaybackRate( rate ) {\n\n\t\tif ( rate !== 0 ) {\n\n\t\t\tthis.mixer.timeScale = 1 / rate;\n\n\t\t} else {\n\n\t\t\tthis.mixer.timeScale = 0;\n\n\t\t}\n\n\t}\n\n\tsetWireframe( wireframeEnabled ) {\n\n\t\tif ( wireframeEnabled ) {\n\n\t\t\tif ( this.meshBody ) this.meshBody.material = this.meshBody.materialWireframe;\n\t\t\tif ( this.meshWeapon ) this.meshWeapon.material = this.meshWeapon.materialWireframe;\n\n\t\t} else {\n\n\t\t\tif ( this.meshBody ) this.meshBody.material = this.meshBody.materialTexture;\n\t\t\tif ( this.meshWeapon ) this.meshWeapon.material = this.meshWeapon.materialTexture;\n\n\t\t}\n\n\t}\n\n\tsetSkin( index ) {\n\n\t\tif ( this.meshBody && this.meshBody.material.wireframe === false ) {\n\n\t\t\tthis.meshBody.material.map = this.skinsBody[ index ];\n\n\t\t}\n\n\t}\n\n\tsetWeapon( index ) {\n\n\t\tfor ( let i = 0; i < this.weapons.length; i ++ ) this.weapons[ i ].visible = false;\n\n\t\tconst activeWeapon = this.weapons[ index ];\n\n\t\tif ( activeWeapon ) {\n\n\t\t\tactiveWeapon.visible = true;\n\t\t\tthis.meshWeapon = activeWeapon;\n\n\t\t\tthis.syncWeaponAnimation();\n\n\t\t}\n\n\t}\n\n\tsetAnimation( clipName ) {\n\n\t\tif ( this.meshBody ) {\n\n\t\t\tif ( this.meshBody.activeAction ) {\n\n\t\t\t\tthis.meshBody.activeAction.stop();\n\t\t\t\tthis.meshBody.activeAction = null;\n\n\t\t\t}\n\n\t\t\tconst action = this.mixer.clipAction( clipName, this.meshBody );\n\n\t\t\tif ( action ) {\n\n\t\t\t\tthis.meshBody.activeAction = action.play();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.activeClipName = clipName;\n\n\t\tthis.syncWeaponAnimation();\n\n\t}\n\n\tsyncWeaponAnimation() {\n\n\t\tconst clipName = this.activeClipName;\n\n\t\tif ( this.meshWeapon ) {\n\n\t\t\tif ( this.meshWeapon.activeAction ) {\n\n\t\t\t\tthis.meshWeapon.activeAction.stop();\n\t\t\t\tthis.meshWeapon.activeAction = null;\n\n\t\t\t}\n\n\t\t\tconst action = this.mixer.clipAction( clipName, this.meshWeapon );\n\n\t\t\tif ( action ) {\n\n\t\t\t\tthis.meshWeapon.activeAction = action.syncWith( this.meshBody.activeAction ).play();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate( delta ) {\n\n\t\tif ( this.mixer ) this.mixer.update( delta );\n\n\t}\n\n}\n\nexport { MD2Character };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}