{"ast":null,"code":"import { ColorManagement, RawShaderMaterial, UniformsUtils, LinearToneMapping, ReinhardToneMapping, CineonToneMapping, AgXToneMapping, ACESFilmicToneMapping, NeutralToneMapping, SRGBTransfer } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { OutputShader } from '../shaders/OutputShader.js';\nclass OutputPass extends Pass {\n  constructor() {\n    super();\n\n    //\n\n    const shader = OutputShader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.material = new RawShaderMaterial({\n      name: shader.name,\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    this.fsQuad = new FullScreenQuad(this.material);\n\n    // internal cache\n\n    this._outputColorSpace = null;\n    this._toneMapping = null;\n  }\n  render(renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['toneMappingExposure'].value = renderer.toneMappingExposure;\n\n    // rebuild defines if required\n\n    if (this._outputColorSpace !== renderer.outputColorSpace || this._toneMapping !== renderer.toneMapping) {\n      this._outputColorSpace = renderer.outputColorSpace;\n      this._toneMapping = renderer.toneMapping;\n      this.material.defines = {};\n      if (ColorManagement.getTransfer(this._outputColorSpace) === SRGBTransfer) this.material.defines.SRGB_TRANSFER = '';\n      if (this._toneMapping === LinearToneMapping) this.material.defines.LINEAR_TONE_MAPPING = '';else if (this._toneMapping === ReinhardToneMapping) this.material.defines.REINHARD_TONE_MAPPING = '';else if (this._toneMapping === CineonToneMapping) this.material.defines.CINEON_TONE_MAPPING = '';else if (this._toneMapping === ACESFilmicToneMapping) this.material.defines.ACES_FILMIC_TONE_MAPPING = '';else if (this._toneMapping === AgXToneMapping) this.material.defines.AGX_TONE_MAPPING = '';else if (this._toneMapping === NeutralToneMapping) this.material.defines.NEUTRAL_TONE_MAPPING = '';\n      this.material.needsUpdate = true;\n    }\n\n    //\n\n    if (this.renderToScreen === true) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n      this.fsQuad.render(renderer);\n    }\n  }\n  dispose() {\n    this.material.dispose();\n    this.fsQuad.dispose();\n  }\n}\nexport { OutputPass };","map":{"version":3,"names":["ColorManagement","RawShaderMaterial","UniformsUtils","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","AgXToneMapping","ACESFilmicToneMapping","NeutralToneMapping","SRGBTransfer","Pass","FullScreenQuad","OutputShader","OutputPass","constructor","shader","uniforms","clone","material","name","vertexShader","fragmentShader","fsQuad","_outputColorSpace","_toneMapping","render","renderer","writeBuffer","readBuffer","value","texture","toneMappingExposure","outputColorSpace","toneMapping","defines","getTransfer","SRGB_TRANSFER","LINEAR_TONE_MAPPING","REINHARD_TONE_MAPPING","CINEON_TONE_MAPPING","ACES_FILMIC_TONE_MAPPING","AGX_TONE_MAPPING","NEUTRAL_TONE_MAPPING","needsUpdate","renderToScreen","setRenderTarget","clear","autoClearColor","autoClearDepth","autoClearStencil","dispose"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/three/examples/jsm/postprocessing/OutputPass.js"],"sourcesContent":["import {\n\tColorManagement,\n\tRawShaderMaterial,\n\tUniformsUtils,\n\tLinearToneMapping,\n\tReinhardToneMapping,\n\tCineonToneMapping,\n\tAgXToneMapping,\n\tACESFilmicToneMapping,\n\tNeutralToneMapping,\n\tSRGBTransfer\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { OutputShader } from '../shaders/OutputShader.js';\n\nclass OutputPass extends Pass {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\t//\n\n\t\tconst shader = OutputShader;\n\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new RawShaderMaterial( {\n\t\t\tname: shader.name,\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\t\t} );\n\n\t\tthis.fsQuad = new FullScreenQuad( this.material );\n\n\t\t// internal cache\n\n\t\tthis._outputColorSpace = null;\n\t\tthis._toneMapping = null;\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer/*, deltaTime, maskActive */ ) {\n\n\t\tthis.uniforms[ 'tDiffuse' ].value = readBuffer.texture;\n\t\tthis.uniforms[ 'toneMappingExposure' ].value = renderer.toneMappingExposure;\n\n\t\t// rebuild defines if required\n\n\t\tif ( this._outputColorSpace !== renderer.outputColorSpace || this._toneMapping !== renderer.toneMapping ) {\n\n\t\t\tthis._outputColorSpace = renderer.outputColorSpace;\n\t\t\tthis._toneMapping = renderer.toneMapping;\n\n\t\t\tthis.material.defines = {};\n\n\t\t\tif ( ColorManagement.getTransfer( this._outputColorSpace ) === SRGBTransfer ) this.material.defines.SRGB_TRANSFER = '';\n\n\t\t\tif ( this._toneMapping === LinearToneMapping ) this.material.defines.LINEAR_TONE_MAPPING = '';\n\t\t\telse if ( this._toneMapping === ReinhardToneMapping ) this.material.defines.REINHARD_TONE_MAPPING = '';\n\t\t\telse if ( this._toneMapping === CineonToneMapping ) this.material.defines.CINEON_TONE_MAPPING = '';\n\t\t\telse if ( this._toneMapping === ACESFilmicToneMapping ) this.material.defines.ACES_FILMIC_TONE_MAPPING = '';\n\t\t\telse if ( this._toneMapping === AgXToneMapping ) this.material.defines.AGX_TONE_MAPPING = '';\n\t\t\telse if ( this._toneMapping === NeutralToneMapping ) this.material.defines.NEUTRAL_TONE_MAPPING = '';\n\n\t\t\tthis.material.needsUpdate = true;\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.renderToScreen === true ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tthis.material.dispose();\n\t\tthis.fsQuad.dispose();\n\n\t}\n\n}\n\nexport { OutputPass };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}