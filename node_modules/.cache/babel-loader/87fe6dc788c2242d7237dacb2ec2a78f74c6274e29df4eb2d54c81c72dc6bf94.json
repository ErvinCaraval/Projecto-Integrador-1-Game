{"ast":null,"code":"import { Mesh, OrthographicCamera, PerspectiveCamera, PlaneGeometry, Scene, ShaderMaterial, UniformsUtils, WebGLRenderTarget } from 'three';\nimport { BokehShader, BokehDepthShader } from '../shaders/BokehShader2.js';\nclass CinematicCamera extends PerspectiveCamera {\n  constructor(fov, aspect, near, far) {\n    super(fov, aspect, near, far);\n    this.type = 'CinematicCamera';\n    this.postprocessing = {\n      enabled: true\n    };\n    this.shaderSettings = {\n      rings: 3,\n      samples: 4\n    };\n    const depthShader = BokehDepthShader;\n    this.materialDepth = new ShaderMaterial({\n      uniforms: depthShader.uniforms,\n      vertexShader: depthShader.vertexShader,\n      fragmentShader: depthShader.fragmentShader\n    });\n    this.materialDepth.uniforms['mNear'].value = near;\n    this.materialDepth.uniforms['mFar'].value = far;\n\n    // In case of cinematicCamera, having a default lens set is important\n    this.setLens();\n    this.initPostProcessing();\n  }\n\n  // providing fnumber and coc(Circle of Confusion) as extra arguments\n  // In case of cinematicCamera, having a default lens set is important\n  // if fnumber and coc are not provided, cinematicCamera tries to act as a basic PerspectiveCamera\n  setLens(focalLength = 35, filmGauge = 35, fNumber = 8, coc = 0.019) {\n    this.filmGauge = filmGauge;\n    this.setFocalLength(focalLength);\n    this.fNumber = fNumber;\n    this.coc = coc;\n\n    // fNumber is focalLength by aperture\n    this.aperture = focalLength / this.fNumber;\n\n    // hyperFocal is required to calculate depthOfField when a lens tries to focus at a distance with given fNumber and focalLength\n    this.hyperFocal = focalLength * focalLength / (this.aperture * this.coc);\n  }\n  linearize(depth) {\n    const zfar = this.far;\n    const znear = this.near;\n    return -zfar * znear / (depth * (zfar - znear) - zfar);\n  }\n  smoothstep(near, far, depth) {\n    const x = this.saturate((depth - near) / (far - near));\n    return x * x * (3 - 2 * x);\n  }\n  saturate(x) {\n    return Math.max(0, Math.min(1, x));\n  }\n\n  // function for focusing at a distance from the camera\n  focusAt(focusDistance = 20) {\n    const focalLength = this.getFocalLength();\n\n    // distance from the camera (normal to frustrum) to focus on\n    this.focus = focusDistance;\n\n    // the nearest point from the camera which is in focus (unused)\n    this.nearPoint = this.hyperFocal * this.focus / (this.hyperFocal + (this.focus - focalLength));\n\n    // the farthest point from the camera which is in focus (unused)\n    this.farPoint = this.hyperFocal * this.focus / (this.hyperFocal - (this.focus - focalLength));\n\n    // the gap or width of the space in which is everything is in focus (unused)\n    this.depthOfField = this.farPoint - this.nearPoint;\n\n    // Considering minimum distance of focus for a standard lens (unused)\n    if (this.depthOfField < 0) this.depthOfField = 0;\n    this.sdistance = this.smoothstep(this.near, this.far, this.focus);\n    this.ldistance = this.linearize(1 - this.sdistance);\n    this.postprocessing.bokeh_uniforms['focalDepth'].value = this.ldistance;\n  }\n  initPostProcessing() {\n    if (this.postprocessing.enabled) {\n      this.postprocessing.scene = new Scene();\n      this.postprocessing.camera = new OrthographicCamera(window.innerWidth / -2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, -10000, 10000);\n      this.postprocessing.scene.add(this.postprocessing.camera);\n      this.postprocessing.rtTextureDepth = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      this.postprocessing.rtTextureColor = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      const bokeh_shader = BokehShader;\n      this.postprocessing.bokeh_uniforms = UniformsUtils.clone(bokeh_shader.uniforms);\n      this.postprocessing.bokeh_uniforms['tColor'].value = this.postprocessing.rtTextureColor.texture;\n      this.postprocessing.bokeh_uniforms['tDepth'].value = this.postprocessing.rtTextureDepth.texture;\n      this.postprocessing.bokeh_uniforms['manualdof'].value = 0;\n      this.postprocessing.bokeh_uniforms['shaderFocus'].value = 0;\n      this.postprocessing.bokeh_uniforms['fstop'].value = 2.8;\n      this.postprocessing.bokeh_uniforms['showFocus'].value = 1;\n      this.postprocessing.bokeh_uniforms['focalDepth'].value = 0.1;\n\n      //console.log( this.postprocessing.bokeh_uniforms[ \"focalDepth\" ].value );\n\n      this.postprocessing.bokeh_uniforms['znear'].value = this.near;\n      this.postprocessing.bokeh_uniforms['zfar'].value = this.near;\n      this.postprocessing.bokeh_uniforms['textureWidth'].value = window.innerWidth;\n      this.postprocessing.bokeh_uniforms['textureHeight'].value = window.innerHeight;\n      this.postprocessing.materialBokeh = new ShaderMaterial({\n        uniforms: this.postprocessing.bokeh_uniforms,\n        vertexShader: bokeh_shader.vertexShader,\n        fragmentShader: bokeh_shader.fragmentShader,\n        defines: {\n          RINGS: this.shaderSettings.rings,\n          SAMPLES: this.shaderSettings.samples,\n          DEPTH_PACKING: 1\n        }\n      });\n      this.postprocessing.quad = new Mesh(new PlaneGeometry(window.innerWidth, window.innerHeight), this.postprocessing.materialBokeh);\n      this.postprocessing.quad.position.z = -500;\n      this.postprocessing.scene.add(this.postprocessing.quad);\n    }\n  }\n  renderCinematic(scene, renderer) {\n    if (this.postprocessing.enabled) {\n      const currentRenderTarget = renderer.getRenderTarget();\n      renderer.clear();\n\n      // Render scene into texture\n\n      scene.overrideMaterial = null;\n      renderer.setRenderTarget(this.postprocessing.rtTextureColor);\n      renderer.clear();\n      renderer.render(scene, this);\n\n      // Render depth into texture\n\n      scene.overrideMaterial = this.materialDepth;\n      renderer.setRenderTarget(this.postprocessing.rtTextureDepth);\n      renderer.clear();\n      renderer.render(scene, this);\n\n      // Render bokeh composite\n\n      renderer.setRenderTarget(null);\n      renderer.render(this.postprocessing.scene, this.postprocessing.camera);\n      renderer.setRenderTarget(currentRenderTarget);\n    }\n  }\n}\nexport { CinematicCamera };","map":{"version":3,"names":["Mesh","OrthographicCamera","PerspectiveCamera","PlaneGeometry","Scene","ShaderMaterial","UniformsUtils","WebGLRenderTarget","BokehShader","BokehDepthShader","CinematicCamera","constructor","fov","aspect","near","far","type","postprocessing","enabled","shaderSettings","rings","samples","depthShader","materialDepth","uniforms","vertexShader","fragmentShader","value","setLens","initPostProcessing","focalLength","filmGauge","fNumber","coc","setFocalLength","aperture","hyperFocal","linearize","depth","zfar","znear","smoothstep","x","saturate","Math","max","min","focusAt","focusDistance","getFocalLength","focus","nearPoint","farPoint","depthOfField","sdistance","ldistance","bokeh_uniforms","scene","camera","window","innerWidth","innerHeight","add","rtTextureDepth","rtTextureColor","bokeh_shader","clone","texture","materialBokeh","defines","RINGS","SAMPLES","DEPTH_PACKING","quad","position","z","renderCinematic","renderer","currentRenderTarget","getRenderTarget","clear","overrideMaterial","setRenderTarget","render"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/three/examples/jsm/cameras/CinematicCamera.js"],"sourcesContent":["import {\n\tMesh,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPlaneGeometry,\n\tScene,\n\tShaderMaterial,\n\tUniformsUtils,\n\tWebGLRenderTarget\n} from 'three';\n\nimport { BokehShader, BokehDepthShader } from '../shaders/BokehShader2.js';\n\nclass CinematicCamera extends PerspectiveCamera {\n\n\tconstructor( fov, aspect, near, far ) {\n\n\t\tsuper( fov, aspect, near, far );\n\n\t\tthis.type = 'CinematicCamera';\n\n\t\tthis.postprocessing = { enabled: true };\n\t\tthis.shaderSettings = {\n\t\t\trings: 3,\n\t\t\tsamples: 4\n\t\t};\n\n\t\tconst depthShader = BokehDepthShader;\n\n\t\tthis.materialDepth = new ShaderMaterial( {\n\t\t\tuniforms: depthShader.uniforms,\n\t\t\tvertexShader: depthShader.vertexShader,\n\t\t\tfragmentShader: depthShader.fragmentShader\n\t\t} );\n\n\t\tthis.materialDepth.uniforms[ 'mNear' ].value = near;\n\t\tthis.materialDepth.uniforms[ 'mFar' ].value = far;\n\n\t\t// In case of cinematicCamera, having a default lens set is important\n\t\tthis.setLens();\n\n\t\tthis.initPostProcessing();\n\n\t}\n\n\t// providing fnumber and coc(Circle of Confusion) as extra arguments\n\t// In case of cinematicCamera, having a default lens set is important\n\t// if fnumber and coc are not provided, cinematicCamera tries to act as a basic PerspectiveCamera\n\tsetLens( focalLength = 35, filmGauge = 35, fNumber = 8, coc = 0.019 ) {\n\n\t\tthis.filmGauge = filmGauge;\n\n\t\tthis.setFocalLength( focalLength );\n\n\t\tthis.fNumber = fNumber;\n\t\tthis.coc = coc;\n\n\t\t// fNumber is focalLength by aperture\n\t\tthis.aperture = focalLength / this.fNumber;\n\n\t\t// hyperFocal is required to calculate depthOfField when a lens tries to focus at a distance with given fNumber and focalLength\n\t\tthis.hyperFocal = ( focalLength * focalLength ) / ( this.aperture * this.coc );\n\n\t}\n\n\tlinearize( depth ) {\n\n\t\tconst zfar = this.far;\n\t\tconst znear = this.near;\n\t\treturn - zfar * znear / ( depth * ( zfar - znear ) - zfar );\n\n\t}\n\n\tsmoothstep( near, far, depth ) {\n\n\t\tconst x = this.saturate( ( depth - near ) / ( far - near ) );\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t}\n\n\tsaturate( x ) {\n\n\t\treturn Math.max( 0, Math.min( 1, x ) );\n\n\t}\n\n\t// function for focusing at a distance from the camera\n\tfocusAt( focusDistance = 20 ) {\n\n\t\tconst focalLength = this.getFocalLength();\n\n\t\t// distance from the camera (normal to frustrum) to focus on\n\t\tthis.focus = focusDistance;\n\n\t\t// the nearest point from the camera which is in focus (unused)\n\t\tthis.nearPoint = ( this.hyperFocal * this.focus ) / ( this.hyperFocal + ( this.focus - focalLength ) );\n\n\t\t// the farthest point from the camera which is in focus (unused)\n\t\tthis.farPoint = ( this.hyperFocal * this.focus ) / ( this.hyperFocal - ( this.focus - focalLength ) );\n\n\t\t// the gap or width of the space in which is everything is in focus (unused)\n\t\tthis.depthOfField = this.farPoint - this.nearPoint;\n\n\t\t// Considering minimum distance of focus for a standard lens (unused)\n\t\tif ( this.depthOfField < 0 ) this.depthOfField = 0;\n\n\t\tthis.sdistance = this.smoothstep( this.near, this.far, this.focus );\n\n\t\tthis.ldistance = this.linearize( 1 -\tthis.sdistance );\n\n\t\tthis.postprocessing.bokeh_uniforms[ 'focalDepth' ].value = this.ldistance;\n\n\t}\n\n\tinitPostProcessing() {\n\n\t\tif ( this.postprocessing.enabled ) {\n\n\t\t\tthis.postprocessing.scene = new Scene();\n\n\t\t\tthis.postprocessing.camera = new OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2,\twindow.innerHeight / 2, window.innerHeight / - 2, - 10000, 10000 );\n\n\t\t\tthis.postprocessing.scene.add( this.postprocessing.camera );\n\n\t\t\tthis.postprocessing.rtTextureDepth = new WebGLRenderTarget( window.innerWidth, window.innerHeight );\n\t\t\tthis.postprocessing.rtTextureColor = new WebGLRenderTarget( window.innerWidth, window.innerHeight );\n\n\t\t\tconst bokeh_shader = BokehShader;\n\n\t\t\tthis.postprocessing.bokeh_uniforms = UniformsUtils.clone( bokeh_shader.uniforms );\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'tColor' ].value = this.postprocessing.rtTextureColor.texture;\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'tDepth' ].value = this.postprocessing.rtTextureDepth.texture;\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'manualdof' ].value = 0;\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'shaderFocus' ].value = 0;\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'fstop' ].value = 2.8;\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'showFocus' ].value = 1;\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'focalDepth' ].value = 0.1;\n\n\t\t\t//console.log( this.postprocessing.bokeh_uniforms[ \"focalDepth\" ].value );\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'znear' ].value = this.near;\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'zfar' ].value = this.near;\n\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'textureWidth' ].value = window.innerWidth;\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'textureHeight' ].value = window.innerHeight;\n\n\t\t\tthis.postprocessing.materialBokeh = new ShaderMaterial( {\n\t\t\t\tuniforms: this.postprocessing.bokeh_uniforms,\n\t\t\t\tvertexShader: bokeh_shader.vertexShader,\n\t\t\t\tfragmentShader: bokeh_shader.fragmentShader,\n\t\t\t\tdefines: {\n\t\t\t\t\tRINGS: this.shaderSettings.rings,\n\t\t\t\t\tSAMPLES: this.shaderSettings.samples,\n\t\t\t\t\tDEPTH_PACKING: 1\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.postprocessing.quad = new Mesh( new PlaneGeometry( window.innerWidth, window.innerHeight ), this.postprocessing.materialBokeh );\n\t\t\tthis.postprocessing.quad.position.z = - 500;\n\t\t\tthis.postprocessing.scene.add( this.postprocessing.quad );\n\n\t\t}\n\n\t}\n\n\trenderCinematic( scene, renderer ) {\n\n\t\tif ( this.postprocessing.enabled ) {\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\trenderer.clear();\n\n\t\t\t// Render scene into texture\n\n\t\t\tscene.overrideMaterial = null;\n\t\t\trenderer.setRenderTarget( this.postprocessing.rtTextureColor );\n\t\t\trenderer.clear();\n\t\t\trenderer.render( scene, this );\n\n\t\t\t// Render depth into texture\n\n\t\t\tscene.overrideMaterial = this.materialDepth;\n\t\t\trenderer.setRenderTarget( this.postprocessing.rtTextureDepth );\n\t\t\trenderer.clear();\n\t\t\trenderer.render( scene, this );\n\n\t\t\t// Render bokeh composite\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\trenderer.render( this.postprocessing.scene, this.postprocessing.camera );\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t}\n\n\t}\n\n}\n\nexport { CinematicCamera };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}