{"ast":null,"code":"// https://wwwimages2.adobe.com/content/dam/acom/en/products/speedgrade/cc/pdfs/cube-lut-specification-1.0.pdf\n\nimport { ClampToEdgeWrapping, DataTexture, Data3DTexture, FileLoader, FloatType, LinearFilter, Loader, UnsignedByteType, Vector3 } from 'three';\nexport class LUTCubeLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.type = UnsignedByteType;\n  }\n  setType(type) {\n    if (type !== UnsignedByteType && type !== FloatType) {\n      throw new Error('LUTCubeLoader: Unsupported type');\n    }\n    this.type = type;\n    return this;\n  }\n  load(url, onLoad, onProgress, onError) {\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('text');\n    loader.load(url, text => {\n      try {\n        onLoad(this.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n        this.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n  parse(input) {\n    const regExpTitle = /TITLE +\"([^\"]*)\"/;\n    const regExpSize = /LUT_3D_SIZE +(\\d+)/;\n    const regExpDomainMin = /DOMAIN_MIN +([\\d.]+) +([\\d.]+) +([\\d.]+)/;\n    const regExpDomainMax = /DOMAIN_MAX +([\\d.]+) +([\\d.]+) +([\\d.]+)/;\n    const regExpDataPoints = /^([\\d.e+-]+) +([\\d.e+-]+) +([\\d.e+-]+) *$/gm;\n    let result = regExpTitle.exec(input);\n    const title = result !== null ? result[1] : null;\n    result = regExpSize.exec(input);\n    if (result === null) {\n      throw new Error('LUTCubeLoader: Missing LUT_3D_SIZE information');\n    }\n    const size = Number(result[1]);\n    const length = size ** 3 * 4;\n    const data = this.type === UnsignedByteType ? new Uint8Array(length) : new Float32Array(length);\n    const domainMin = new Vector3(0, 0, 0);\n    const domainMax = new Vector3(1, 1, 1);\n    result = regExpDomainMin.exec(input);\n    if (result !== null) {\n      domainMin.set(Number(result[1]), Number(result[2]), Number(result[3]));\n    }\n    result = regExpDomainMax.exec(input);\n    if (result !== null) {\n      domainMax.set(Number(result[1]), Number(result[2]), Number(result[3]));\n    }\n    if (domainMin.x > domainMax.x || domainMin.y > domainMax.y || domainMin.z > domainMax.z) {\n      throw new Error('LUTCubeLoader: Invalid input domain');\n    }\n    const scale = this.type === UnsignedByteType ? 255 : 1;\n    let i = 0;\n    while ((result = regExpDataPoints.exec(input)) !== null) {\n      data[i++] = Number(result[1]) * scale;\n      data[i++] = Number(result[2]) * scale;\n      data[i++] = Number(result[3]) * scale;\n      data[i++] = scale;\n    }\n    const texture = new DataTexture();\n    texture.image.data = data;\n    texture.image.width = size;\n    texture.image.height = size * size;\n    texture.type = this.type;\n    texture.magFilter = LinearFilter;\n    texture.minFilter = LinearFilter;\n    texture.wrapS = ClampToEdgeWrapping;\n    texture.wrapT = ClampToEdgeWrapping;\n    texture.generateMipmaps = false;\n    texture.needsUpdate = true;\n    const texture3D = new Data3DTexture();\n    texture3D.image.data = data;\n    texture3D.image.width = size;\n    texture3D.image.height = size;\n    texture3D.image.depth = size;\n    texture3D.type = this.type;\n    texture3D.magFilter = LinearFilter;\n    texture3D.minFilter = LinearFilter;\n    texture3D.wrapS = ClampToEdgeWrapping;\n    texture3D.wrapT = ClampToEdgeWrapping;\n    texture3D.wrapR = ClampToEdgeWrapping;\n    texture3D.generateMipmaps = false;\n    texture3D.needsUpdate = true;\n    return {\n      title,\n      size,\n      domainMin,\n      domainMax,\n      texture,\n      texture3D\n    };\n  }\n}","map":{"version":3,"names":["ClampToEdgeWrapping","DataTexture","Data3DTexture","FileLoader","FloatType","LinearFilter","Loader","UnsignedByteType","Vector3","LUTCubeLoader","constructor","manager","type","setType","Error","load","url","onLoad","onProgress","onError","loader","setPath","path","setResponseType","text","parse","e","console","error","itemError","input","regExpTitle","regExpSize","regExpDomainMin","regExpDomainMax","regExpDataPoints","result","exec","title","size","Number","length","data","Uint8Array","Float32Array","domainMin","domainMax","set","x","y","z","scale","i","texture","image","width","height","magFilter","minFilter","wrapS","wrapT","generateMipmaps","needsUpdate","texture3D","depth","wrapR"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/three/examples/jsm/loaders/LUTCubeLoader.js"],"sourcesContent":["// https://wwwimages2.adobe.com/content/dam/acom/en/products/speedgrade/cc/pdfs/cube-lut-specification-1.0.pdf\n\nimport {\n\tClampToEdgeWrapping,\n\tDataTexture,\n\tData3DTexture,\n\tFileLoader,\n\tFloatType,\n\tLinearFilter,\n\tLoader,\n\tUnsignedByteType,\n\tVector3,\n} from 'three';\n\nexport class LUTCubeLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.type = UnsignedByteType;\n\n\t}\n\n\tsetType( type ) {\n\n\t\tif ( type !== UnsignedByteType && type !== FloatType ) {\n\n\t\t\tthrow new Error( 'LUTCubeLoader: Unsupported type' );\n\n\t\t}\n\n\t\tthis.type = type;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'text' );\n\t\tloader.load( url, text => {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( this.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( input ) {\n\n\t\tconst regExpTitle = /TITLE +\"([^\"]*)\"/;\n\t\tconst regExpSize = /LUT_3D_SIZE +(\\d+)/;\n\t\tconst regExpDomainMin = /DOMAIN_MIN +([\\d.]+) +([\\d.]+) +([\\d.]+)/;\n\t\tconst regExpDomainMax = /DOMAIN_MAX +([\\d.]+) +([\\d.]+) +([\\d.]+)/;\n\t\tconst regExpDataPoints = /^([\\d.e+-]+) +([\\d.e+-]+) +([\\d.e+-]+) *$/gm;\n\n\t\tlet result = regExpTitle.exec( input );\n\t\tconst title = ( result !== null ) ? result[ 1 ] : null;\n\n\t\tresult = regExpSize.exec( input );\n\n\t\tif ( result === null ) {\n\n\t\t\tthrow new Error( 'LUTCubeLoader: Missing LUT_3D_SIZE information' );\n\n\t\t}\n\n\t\tconst size = Number( result[ 1 ] );\n\t\tconst length = size ** 3 * 4;\n\t\tconst data = this.type === UnsignedByteType ? new Uint8Array( length ) : new Float32Array( length );\n\n\t\tconst domainMin = new Vector3( 0, 0, 0 );\n\t\tconst domainMax = new Vector3( 1, 1, 1 );\n\n\t\tresult = regExpDomainMin.exec( input );\n\n\t\tif ( result !== null ) {\n\n\t\t\tdomainMin.set( Number( result[ 1 ] ), Number( result[ 2 ] ), Number( result[ 3 ] ) );\n\n\t\t}\n\n\t\tresult = regExpDomainMax.exec( input );\n\n\t\tif ( result !== null ) {\n\n\t\t\tdomainMax.set( Number( result[ 1 ] ), Number( result[ 2 ] ), Number( result[ 3 ] ) );\n\n\t\t}\n\n\t\tif ( domainMin.x > domainMax.x || domainMin.y > domainMax.y || domainMin.z > domainMax.z ) {\n\n\t\t\tthrow new Error( 'LUTCubeLoader: Invalid input domain' );\n\n\t\t}\n\n\t\tconst scale = this.type === UnsignedByteType ? 255 : 1;\n\t\tlet i = 0;\n\n\t\twhile ( ( result = regExpDataPoints.exec( input ) ) !== null ) {\n\n\t\t\tdata[ i ++ ] = Number( result[ 1 ] ) * scale;\n\t\t\tdata[ i ++ ] = Number( result[ 2 ] ) * scale;\n\t\t\tdata[ i ++ ] = Number( result[ 3 ] ) * scale;\n\t\t\tdata[ i ++ ] = scale;\n\n\t\t}\n\n\t\tconst texture = new DataTexture();\n\t\ttexture.image.data = data;\n\t\ttexture.image.width = size;\n\t\ttexture.image.height = size * size;\n\t\ttexture.type = this.type;\n\t\ttexture.magFilter = LinearFilter;\n\t\ttexture.minFilter = LinearFilter;\n\t\ttexture.wrapS = ClampToEdgeWrapping;\n\t\ttexture.wrapT = ClampToEdgeWrapping;\n\t\ttexture.generateMipmaps = false;\n\t\ttexture.needsUpdate = true;\n\n\t\tconst texture3D = new Data3DTexture();\n\t\ttexture3D.image.data = data;\n\t\ttexture3D.image.width = size;\n\t\ttexture3D.image.height = size;\n\t\ttexture3D.image.depth = size;\n\t\ttexture3D.type = this.type;\n\t\ttexture3D.magFilter = LinearFilter;\n\t\ttexture3D.minFilter = LinearFilter;\n\t\ttexture3D.wrapS = ClampToEdgeWrapping;\n\t\ttexture3D.wrapT = ClampToEdgeWrapping;\n\t\ttexture3D.wrapR = ClampToEdgeWrapping;\n\t\ttexture3D.generateMipmaps = false;\n\t\ttexture3D.needsUpdate = true;\n\n\t\treturn {\n\t\t\ttitle,\n\t\t\tsize,\n\t\t\tdomainMin,\n\t\t\tdomainMax,\n\t\t\ttexture,\n\t\t\ttexture3D,\n\t\t};\n\n\t}\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}