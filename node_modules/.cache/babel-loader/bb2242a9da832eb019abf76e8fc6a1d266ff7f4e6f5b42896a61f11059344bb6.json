{"ast":null,"code":"import { BackSide, BufferGeometry, Float32BufferAttribute, Line, LineBasicMaterial, Mesh, MeshBasicMaterial } from 'three';\n\n/**\n *  This helper must be added as a child of the light\n */\n\nclass RectAreaLightHelper extends Line {\n  constructor(light, color) {\n    const positions = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0];\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    const material = new LineBasicMaterial({\n      fog: false\n    });\n    super(geometry, material);\n    this.light = light;\n    this.color = color; // optional hardwired color for the helper\n    this.type = 'RectAreaLightHelper';\n\n    //\n\n    const positions2 = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0];\n    const geometry2 = new BufferGeometry();\n    geometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n    geometry2.computeBoundingSphere();\n    this.add(new Mesh(geometry2, new MeshBasicMaterial({\n      side: BackSide,\n      fog: false\n    })));\n  }\n  updateMatrixWorld() {\n    this.scale.set(0.5 * this.light.width, 0.5 * this.light.height, 1);\n    if (this.color !== undefined) {\n      this.material.color.set(this.color);\n      this.children[0].material.color.set(this.color);\n    } else {\n      this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n\n      // prevent hue shift\n      const c = this.material.color;\n      const max = Math.max(c.r, c.g, c.b);\n      if (max > 1) c.multiplyScalar(1 / max);\n      this.children[0].material.color.copy(this.material.color);\n    }\n\n    // ignore world scale on light\n    this.matrixWorld.extractRotation(this.light.matrixWorld).scale(this.scale).copyPosition(this.light.matrixWorld);\n    this.children[0].matrixWorld.copy(this.matrixWorld);\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  }\n}\nexport { RectAreaLightHelper };","map":{"version":3,"names":["BackSide","BufferGeometry","Float32BufferAttribute","Line","LineBasicMaterial","Mesh","MeshBasicMaterial","RectAreaLightHelper","constructor","light","color","positions","geometry","setAttribute","computeBoundingSphere","material","fog","type","positions2","geometry2","add","side","updateMatrixWorld","scale","set","width","height","undefined","children","copy","multiplyScalar","intensity","c","max","Math","r","g","b","matrixWorld","extractRotation","copyPosition","dispose"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/three/examples/jsm/helpers/RectAreaLightHelper.js"],"sourcesContent":["import {\n\tBackSide,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tLine,\n\tLineBasicMaterial,\n\tMesh,\n\tMeshBasicMaterial\n} from 'three';\n\n/**\n *  This helper must be added as a child of the light\n */\n\nclass RectAreaLightHelper extends Line {\n\n\tconstructor( light, color ) {\n\n\t\tconst positions = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tconst material = new LineBasicMaterial( { fog: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.color = color; // optional hardwired color for the helper\n\t\tthis.type = 'RectAreaLightHelper';\n\n\t\t//\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { side: BackSide, fog: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld() {\n\n\t\tthis.scale.set( 0.5 * this.light.width, 0.5 * this.light.height, 1 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\t\t\tthis.children[ 0 ].material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t\t// prevent hue shift\n\t\t\tconst c = this.material.color;\n\t\t\tconst max = Math.max( c.r, c.g, c.b );\n\t\t\tif ( max > 1 ) c.multiplyScalar( 1 / max );\n\n\t\t\tthis.children[ 0 ].material.color.copy( this.material.color );\n\n\t\t}\n\n\t\t// ignore world scale on light\n\t\tthis.matrixWorld.extractRotation( this.light.matrixWorld ).scale( this.scale ).copyPosition( this.light.matrixWorld );\n\n\t\tthis.children[ 0 ].matrixWorld.copy( this.matrixWorld );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nexport { RectAreaLightHelper };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}