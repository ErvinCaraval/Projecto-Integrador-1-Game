{"ast":null,"code":"var _jsxFileName = \"/home/ervin/Escritorio/integrador/squid-games-pi-2024-1-client/src/pages/level1/world/World.jsx\",\n  _s = $RefreshSig$();\nimport { useGLTF } from \"@react-three/drei\";\nimport { CuboidCollider, CylinderCollider, RigidBody } from \"@react-three/rapier\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function World(props) {\n  _s();\n  const {\n    nodes,\n    materials\n  } = useGLTF(\"/assets/models/world/WorldSquidGames.glb\");\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ...props,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      children: [/*#__PURE__*/_jsxDEV(RigidBody, {\n        type: \"fixed\",\n        colliders: \"trimesh\",\n        children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n          onClick: e => e.stopPropagation(),\n          geometry: nodes.Walls.geometry,\n          material: materials.wallMaterial\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RigidBody, {\n        type: \"fixed\",\n        colliders: \"trimesh\",\n        children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n          onClick: e => e.stopPropagation(),\n          receiveShadow: true,\n          geometry: nodes.Floor.geometry,\n          material: materials.floorMaterial\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RigidBody, {\n        type: \"fixed\",\n        colliders: false,\n        children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n          onClick: e => e.stopPropagation(),\n          castShadow: true,\n          geometry: nodes.WoodenFence.geometry,\n          material: materials.woodMaterial,\n          children: [/*#__PURE__*/_jsxDEV(CuboidCollider, {\n            args: [0.2, 0.5, 47.5],\n            position: [-3.8, 0.5, -47]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CuboidCollider, {\n            args: [0.2, 0.5, 47.5],\n            position: [4.2, 0.5, -47]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RigidBody, {\n        colliders: false,\n        type: \"fixed\",\n        children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n          onClick: e => e.stopPropagation(),\n          geometry: nodes.Tree.geometry,\n          material: materials.treeMaterial,\n          position: [0, 0, -96]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CylinderCollider, {\n          args: [1, 0.5],\n          position: [0, 1, -96]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_s(World, \"3EbVibAGuOW6XeBFAk0EenvHzHI=\", false, function () {\n  return [useGLTF];\n});\n_c = World;\nuseGLTF.preload(\"/assets/models/world/WorldSquidGames.glb\");\nvar _c;\n$RefreshReg$(_c, \"World\");","map":{"version":3,"names":["useGLTF","CuboidCollider","CylinderCollider","RigidBody","jsxDEV","_jsxDEV","World","props","_s","nodes","materials","dispose","children","type","colliders","onClick","e","stopPropagation","geometry","Walls","material","wallMaterial","fileName","_jsxFileName","lineNumber","columnNumber","receiveShadow","Floor","floorMaterial","castShadow","WoodenFence","woodMaterial","args","position","Tree","treeMaterial","_c","preload","$RefreshReg$"],"sources":["/home/ervin/Escritorio/integrador/squid-games-pi-2024-1-client/src/pages/level1/world/World.jsx"],"sourcesContent":["import { useGLTF } from \"@react-three/drei\"\nimport { CuboidCollider, CylinderCollider, RigidBody } from \"@react-three/rapier\"\n\nexport default function World(props) {\n    const { nodes, materials } = useGLTF(\"/assets/models/world/WorldSquidGames.glb\")\n\n    return (\n        <group {...props} dispose={null}>\n            <group>\n                <RigidBody type=\"fixed\" colliders=\"trimesh\">\n                    <mesh onClick={(e) => e.stopPropagation()} geometry={nodes.Walls.geometry} material={materials.wallMaterial} />\n                </RigidBody>\n                <RigidBody type=\"fixed\" colliders=\"trimesh\">\n                    <mesh onClick={(e) => e.stopPropagation()} receiveShadow={true} geometry={nodes.Floor.geometry} material={materials.floorMaterial} />\n                </RigidBody>\n                <RigidBody type=\"fixed\" colliders={false}>\n                        <mesh\n                            onClick={(e) => e.stopPropagation()}\n                            castShadow={true}\n                            geometry={nodes.WoodenFence.geometry}\n                            material={materials.woodMaterial}>\n                            <CuboidCollider args={[0.2, 0.5, 47.5]} position={[-3.8, 0.5, -47]} />\n                            <CuboidCollider args={[0.2, 0.5, 47.5]} position={[4.2, 0.5, -47]} />\n                        </mesh>\n                </RigidBody>\n                <RigidBody colliders={false} type=\"fixed\" >\n                    <mesh onClick={(e) => e.stopPropagation()} geometry={nodes.Tree.geometry} material={materials.treeMaterial} position={[0, 0, -96]} />\n                    <CylinderCollider args={[1, 0.5]} position={[0, 1, -96]} />\n                </RigidBody>\n            </group>\n        </group>\n    );\n}\n\nuseGLTF.preload(\"/assets/models/world/WorldSquidGames.glb\");\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}