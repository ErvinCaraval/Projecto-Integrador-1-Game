{"ast":null,"code":"import * as THREE from 'three';\nfunction createText(message, height) {\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  let metrics = null;\n  const textHeight = 100;\n  context.font = 'normal ' + textHeight + 'px Arial';\n  metrics = context.measureText(message);\n  const textWidth = metrics.width;\n  canvas.width = textWidth;\n  canvas.height = textHeight;\n  context.font = 'normal ' + textHeight + 'px Arial';\n  context.textAlign = 'center';\n  context.textBaseline = 'middle';\n  context.fillStyle = '#ffffff';\n  context.fillText(message, textWidth / 2, textHeight / 2);\n  const texture = new THREE.Texture(canvas);\n  texture.needsUpdate = true;\n  const material = new THREE.MeshBasicMaterial({\n    color: 0xffffff,\n    side: THREE.DoubleSide,\n    map: texture,\n    transparent: true\n  });\n  const geometry = new THREE.PlaneGeometry(height * textWidth / textHeight, height);\n  const plane = new THREE.Mesh(geometry, material);\n  return plane;\n}\nexport { createText };","map":{"version":3,"names":["THREE","createText","message","height","canvas","document","createElement","context","getContext","metrics","textHeight","font","measureText","textWidth","width","textAlign","textBaseline","fillStyle","fillText","texture","Texture","needsUpdate","material","MeshBasicMaterial","color","side","DoubleSide","map","transparent","geometry","PlaneGeometry","plane","Mesh"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/three/examples/jsm/webxr/Text2D.js"],"sourcesContent":["import * as THREE from 'three';\n\nfunction createText( message, height ) {\n\n\tconst canvas = document.createElement( 'canvas' );\n\tconst context = canvas.getContext( '2d' );\n\tlet metrics = null;\n\tconst textHeight = 100;\n\tcontext.font = 'normal ' + textHeight + 'px Arial';\n\tmetrics = context.measureText( message );\n\tconst textWidth = metrics.width;\n\tcanvas.width = textWidth;\n\tcanvas.height = textHeight;\n\tcontext.font = 'normal ' + textHeight + 'px Arial';\n\tcontext.textAlign = 'center';\n\tcontext.textBaseline = 'middle';\n\tcontext.fillStyle = '#ffffff';\n\tcontext.fillText( message, textWidth / 2, textHeight / 2 );\n\n\tconst texture = new THREE.Texture( canvas );\n\ttexture.needsUpdate = true;\n\n\tconst material = new THREE.MeshBasicMaterial( {\n\t\tcolor: 0xffffff,\n\t\tside: THREE.DoubleSide,\n\t\tmap: texture,\n\t\ttransparent: true,\n\t} );\n\tconst geometry = new THREE.PlaneGeometry(\n\t\t( height * textWidth ) / textHeight,\n\t\theight\n\t);\n\tconst plane = new THREE.Mesh( geometry, material );\n\treturn plane;\n\n}\n\nexport { createText };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,UAAUA,CAAEC,OAAO,EAAEC,MAAM,EAAG;EAEtC,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAE,QAAS,CAAC;EACjD,MAAMC,OAAO,GAAGH,MAAM,CAACI,UAAU,CAAE,IAAK,CAAC;EACzC,IAAIC,OAAO,GAAG,IAAI;EAClB,MAAMC,UAAU,GAAG,GAAG;EACtBH,OAAO,CAACI,IAAI,GAAG,SAAS,GAAGD,UAAU,GAAG,UAAU;EAClDD,OAAO,GAAGF,OAAO,CAACK,WAAW,CAAEV,OAAQ,CAAC;EACxC,MAAMW,SAAS,GAAGJ,OAAO,CAACK,KAAK;EAC/BV,MAAM,CAACU,KAAK,GAAGD,SAAS;EACxBT,MAAM,CAACD,MAAM,GAAGO,UAAU;EAC1BH,OAAO,CAACI,IAAI,GAAG,SAAS,GAAGD,UAAU,GAAG,UAAU;EAClDH,OAAO,CAACQ,SAAS,GAAG,QAAQ;EAC5BR,OAAO,CAACS,YAAY,GAAG,QAAQ;EAC/BT,OAAO,CAACU,SAAS,GAAG,SAAS;EAC7BV,OAAO,CAACW,QAAQ,CAAEhB,OAAO,EAAEW,SAAS,GAAG,CAAC,EAAEH,UAAU,GAAG,CAAE,CAAC;EAE1D,MAAMS,OAAO,GAAG,IAAInB,KAAK,CAACoB,OAAO,CAAEhB,MAAO,CAAC;EAC3Ce,OAAO,CAACE,WAAW,GAAG,IAAI;EAE1B,MAAMC,QAAQ,GAAG,IAAItB,KAAK,CAACuB,iBAAiB,CAAE;IAC7CC,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAEzB,KAAK,CAAC0B,UAAU;IACtBC,GAAG,EAAER,OAAO;IACZS,WAAW,EAAE;EACd,CAAE,CAAC;EACH,MAAMC,QAAQ,GAAG,IAAI7B,KAAK,CAAC8B,aAAa,CACrC3B,MAAM,GAAGU,SAAS,GAAKH,UAAU,EACnCP,MACD,CAAC;EACD,MAAM4B,KAAK,GAAG,IAAI/B,KAAK,CAACgC,IAAI,CAAEH,QAAQ,EAAEP,QAAS,CAAC;EAClD,OAAOS,KAAK;AAEb;AAEA,SAAS9B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}