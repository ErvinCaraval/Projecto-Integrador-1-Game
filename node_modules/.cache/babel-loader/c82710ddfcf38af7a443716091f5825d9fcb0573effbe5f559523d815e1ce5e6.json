{"ast":null,"code":"import { BufferGeometry, Color, FileLoader, Float32BufferAttribute, Loader } from 'three';\nclass XYZLoader extends Loader {\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n  parse(text) {\n    const lines = text.split('\\n');\n    const vertices = [];\n    const colors = [];\n    const color = new Color();\n    for (let line of lines) {\n      line = line.trim();\n      if (line.charAt(0) === '#') continue; // skip comments\n\n      const lineValues = line.split(/\\s+/);\n      if (lineValues.length === 3) {\n        // XYZ\n\n        vertices.push(parseFloat(lineValues[0]));\n        vertices.push(parseFloat(lineValues[1]));\n        vertices.push(parseFloat(lineValues[2]));\n      }\n      if (lineValues.length === 6) {\n        // XYZRGB\n\n        vertices.push(parseFloat(lineValues[0]));\n        vertices.push(parseFloat(lineValues[1]));\n        vertices.push(parseFloat(lineValues[2]));\n        const r = parseFloat(lineValues[3]) / 255;\n        const g = parseFloat(lineValues[4]) / 255;\n        const b = parseFloat(lineValues[5]) / 255;\n        color.set(r, g, b).convertSRGBToLinear();\n        colors.push(color.r, color.g, color.b);\n      }\n    }\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    if (colors.length > 0) {\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    }\n    return geometry;\n  }\n}\nexport { XYZLoader };","map":{"version":3,"names":["BufferGeometry","Color","FileLoader","Float32BufferAttribute","Loader","XYZLoader","load","url","onLoad","onProgress","onError","scope","loader","manager","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","lines","split","vertices","colors","color","line","trim","charAt","lineValues","length","push","parseFloat","r","g","b","set","convertSRGBToLinear","geometry","setAttribute"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/three/examples/jsm/loaders/XYZLoader.js"],"sourcesContent":["import {\n\tBufferGeometry,\n\tColor,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tLoader\n} from 'three';\n\nclass XYZLoader extends Loader {\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( text ) {\n\n\t\tconst lines = text.split( '\\n' );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\t\tconst color = new Color();\n\n\t\tfor ( let line of lines ) {\n\n\t\t\tline = line.trim();\n\n\t\t\tif ( line.charAt( 0 ) === '#' ) continue; // skip comments\n\n\t\t\tconst lineValues = line.split( /\\s+/ );\n\n\t\t\tif ( lineValues.length === 3 ) {\n\n\t\t\t\t// XYZ\n\n\t\t\t\tvertices.push( parseFloat( lineValues[ 0 ] ) );\n\t\t\t\tvertices.push( parseFloat( lineValues[ 1 ] ) );\n\t\t\t\tvertices.push( parseFloat( lineValues[ 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( lineValues.length === 6 ) {\n\n\t\t\t\t// XYZRGB\n\n\t\t\t\tvertices.push( parseFloat( lineValues[ 0 ] ) );\n\t\t\t\tvertices.push( parseFloat( lineValues[ 1 ] ) );\n\t\t\t\tvertices.push( parseFloat( lineValues[ 2 ] ) );\n\n\t\t\t\tconst r = parseFloat( lineValues[ 3 ] ) / 255;\n\t\t\t\tconst g = parseFloat( lineValues[ 4 ] ) / 255;\n\t\t\t\tconst b = parseFloat( lineValues[ 5 ] ) / 255;\n\n\t\t\t\tcolor.set( r, g, b ).convertSRGBToLinear();\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\tif ( colors.length > 0 ) {\n\n\t\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nexport { XYZLoader };\n"],"mappings":"AAAA,SACCA,cAAc,EACdC,KAAK,EACLC,UAAU,EACVC,sBAAsB,EACtBC,MAAM,QACA,OAAO;AAEd,MAAMC,SAAS,SAASD,MAAM,CAAC;EAE9BE,IAAIA,CAAEC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;IAExC,MAAMC,KAAK,GAAG,IAAI;IAElB,MAAMC,MAAM,GAAG,IAAIV,UAAU,CAAE,IAAI,CAACW,OAAQ,CAAC;IAC7CD,MAAM,CAACE,OAAO,CAAE,IAAI,CAACC,IAAK,CAAC;IAC3BH,MAAM,CAACI,gBAAgB,CAAE,IAAI,CAACC,aAAc,CAAC;IAC7CL,MAAM,CAACM,kBAAkB,CAAE,IAAI,CAACC,eAAgB,CAAC;IACjDP,MAAM,CAACN,IAAI,CAAEC,GAAG,EAAE,UAAWa,IAAI,EAAG;MAEnC,IAAI;QAEHZ,MAAM,CAAEG,KAAK,CAACU,KAAK,CAAED,IAAK,CAAE,CAAC;MAE9B,CAAC,CAAC,OAAQE,CAAC,EAAG;QAEb,IAAKZ,OAAO,EAAG;UAEdA,OAAO,CAAEY,CAAE,CAAC;QAEb,CAAC,MAAM;UAENC,OAAO,CAACC,KAAK,CAAEF,CAAE,CAAC;QAEnB;QAEAX,KAAK,CAACE,OAAO,CAACY,SAAS,CAAElB,GAAI,CAAC;MAE/B;IAED,CAAC,EAAEE,UAAU,EAAEC,OAAQ,CAAC;EAEzB;EAEAW,KAAKA,CAAED,IAAI,EAAG;IAEb,MAAMM,KAAK,GAAGN,IAAI,CAACO,KAAK,CAAE,IAAK,CAAC;IAEhC,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMC,KAAK,GAAG,IAAI7B,KAAK,CAAC,CAAC;IAEzB,KAAM,IAAI8B,IAAI,IAAIL,KAAK,EAAG;MAEzBK,IAAI,GAAGA,IAAI,CAACC,IAAI,CAAC,CAAC;MAElB,IAAKD,IAAI,CAACE,MAAM,CAAE,CAAE,CAAC,KAAK,GAAG,EAAG,SAAS,CAAC;;MAE1C,MAAMC,UAAU,GAAGH,IAAI,CAACJ,KAAK,CAAE,KAAM,CAAC;MAEtC,IAAKO,UAAU,CAACC,MAAM,KAAK,CAAC,EAAG;QAE9B;;QAEAP,QAAQ,CAACQ,IAAI,CAAEC,UAAU,CAAEH,UAAU,CAAE,CAAC,CAAG,CAAE,CAAC;QAC9CN,QAAQ,CAACQ,IAAI,CAAEC,UAAU,CAAEH,UAAU,CAAE,CAAC,CAAG,CAAE,CAAC;QAC9CN,QAAQ,CAACQ,IAAI,CAAEC,UAAU,CAAEH,UAAU,CAAE,CAAC,CAAG,CAAE,CAAC;MAE/C;MAEA,IAAKA,UAAU,CAACC,MAAM,KAAK,CAAC,EAAG;QAE9B;;QAEAP,QAAQ,CAACQ,IAAI,CAAEC,UAAU,CAAEH,UAAU,CAAE,CAAC,CAAG,CAAE,CAAC;QAC9CN,QAAQ,CAACQ,IAAI,CAAEC,UAAU,CAAEH,UAAU,CAAE,CAAC,CAAG,CAAE,CAAC;QAC9CN,QAAQ,CAACQ,IAAI,CAAEC,UAAU,CAAEH,UAAU,CAAE,CAAC,CAAG,CAAE,CAAC;QAE9C,MAAMI,CAAC,GAAGD,UAAU,CAAEH,UAAU,CAAE,CAAC,CAAG,CAAC,GAAG,GAAG;QAC7C,MAAMK,CAAC,GAAGF,UAAU,CAAEH,UAAU,CAAE,CAAC,CAAG,CAAC,GAAG,GAAG;QAC7C,MAAMM,CAAC,GAAGH,UAAU,CAAEH,UAAU,CAAE,CAAC,CAAG,CAAC,GAAG,GAAG;QAE7CJ,KAAK,CAACW,GAAG,CAAEH,CAAC,EAAEC,CAAC,EAAEC,CAAE,CAAC,CAACE,mBAAmB,CAAC,CAAC;QAE1Cb,MAAM,CAACO,IAAI,CAAEN,KAAK,CAACQ,CAAC,EAAER,KAAK,CAACS,CAAC,EAAET,KAAK,CAACU,CAAE,CAAC;MAEzC;IAED;IAEA,MAAMG,QAAQ,GAAG,IAAI3C,cAAc,CAAC,CAAC;IACrC2C,QAAQ,CAACC,YAAY,CAAE,UAAU,EAAE,IAAIzC,sBAAsB,CAAEyB,QAAQ,EAAE,CAAE,CAAE,CAAC;IAE9E,IAAKC,MAAM,CAACM,MAAM,GAAG,CAAC,EAAG;MAExBQ,QAAQ,CAACC,YAAY,CAAE,OAAO,EAAE,IAAIzC,sBAAsB,CAAE0B,MAAM,EAAE,CAAE,CAAE,CAAC;IAE1E;IAEA,OAAOc,QAAQ;EAEhB;AAED;AAEA,SAAStC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}