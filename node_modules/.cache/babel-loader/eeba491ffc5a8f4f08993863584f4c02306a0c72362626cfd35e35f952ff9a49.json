{"ast":null,"code":"import { LineSegments, BufferGeometry, Float32BufferAttribute, LineBasicMaterial } from 'three';\nclass OctreeHelper extends LineSegments {\n  constructor(octree, color = 0xffff00) {\n    super(new BufferGeometry(), new LineBasicMaterial({\n      color: color,\n      toneMapped: false\n    }));\n    this.octree = octree;\n    this.color = color;\n    this.type = 'OctreeHelper';\n    this.update();\n  }\n  update() {\n    const vertices = [];\n    function traverse(tree) {\n      for (let i = 0; i < tree.length; i++) {\n        const min = tree[i].box.min;\n        const max = tree[i].box.max;\n        vertices.push(max.x, max.y, max.z);\n        vertices.push(min.x, max.y, max.z); // 0, 1\n        vertices.push(min.x, max.y, max.z);\n        vertices.push(min.x, min.y, max.z); // 1, 2\n        vertices.push(min.x, min.y, max.z);\n        vertices.push(max.x, min.y, max.z); // 2, 3\n        vertices.push(max.x, min.y, max.z);\n        vertices.push(max.x, max.y, max.z); // 3, 0\n\n        vertices.push(max.x, max.y, min.z);\n        vertices.push(min.x, max.y, min.z); // 4, 5\n        vertices.push(min.x, max.y, min.z);\n        vertices.push(min.x, min.y, min.z); // 5, 6\n        vertices.push(min.x, min.y, min.z);\n        vertices.push(max.x, min.y, min.z); // 6, 7\n        vertices.push(max.x, min.y, min.z);\n        vertices.push(max.x, max.y, min.z); // 7, 4\n\n        vertices.push(max.x, max.y, max.z);\n        vertices.push(max.x, max.y, min.z); // 0, 4\n        vertices.push(min.x, max.y, max.z);\n        vertices.push(min.x, max.y, min.z); // 1, 5\n        vertices.push(min.x, min.y, max.z);\n        vertices.push(min.x, min.y, min.z); // 2, 6\n        vertices.push(max.x, min.y, max.z);\n        vertices.push(max.x, min.y, min.z); // 3, 7\n\n        traverse(tree[i].subTrees);\n      }\n    }\n    traverse(this.octree.subTrees);\n    this.geometry.dispose();\n    this.geometry = new BufferGeometry();\n    this.geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\nexport { OctreeHelper };","map":{"version":3,"names":["LineSegments","BufferGeometry","Float32BufferAttribute","LineBasicMaterial","OctreeHelper","constructor","octree","color","toneMapped","type","update","vertices","traverse","tree","i","length","min","box","max","push","x","y","z","subTrees","geometry","dispose","setAttribute","material"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/three/examples/jsm/helpers/OctreeHelper.js"],"sourcesContent":["import {\n\tLineSegments,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tLineBasicMaterial\n} from 'three';\n\nclass OctreeHelper extends LineSegments {\n\n\tconstructor( octree, color = 0xffff00 ) {\n\n\t\tsuper( new BufferGeometry(), new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.octree = octree;\n\t\tthis.color = color;\n\n\t\tthis.type = 'OctreeHelper';\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst vertices = [];\n\n\t\tfunction traverse( tree ) {\n\n\t\t\tfor ( let i = 0; i < tree.length; i ++ ) {\n\n\t\t\t\tconst min = tree[ i ].box.min;\n\t\t\t\tconst max = tree[ i ].box.max;\n\n\t\t\t\tvertices.push( max.x, max.y, max.z ); vertices.push( min.x, max.y, max.z ); // 0, 1\n\t\t\t\tvertices.push( min.x, max.y, max.z ); vertices.push( min.x, min.y, max.z ); // 1, 2\n\t\t\t\tvertices.push( min.x, min.y, max.z ); vertices.push( max.x, min.y, max.z ); // 2, 3\n\t\t\t\tvertices.push( max.x, min.y, max.z ); vertices.push( max.x, max.y, max.z ); // 3, 0\n\n\t\t\t\tvertices.push( max.x, max.y, min.z ); vertices.push( min.x, max.y, min.z ); // 4, 5\n\t\t\t\tvertices.push( min.x, max.y, min.z ); vertices.push( min.x, min.y, min.z ); // 5, 6\n\t\t\t\tvertices.push( min.x, min.y, min.z ); vertices.push( max.x, min.y, min.z ); // 6, 7\n\t\t\t\tvertices.push( max.x, min.y, min.z ); vertices.push( max.x, max.y, min.z ); // 7, 4\n\n\t\t\t\tvertices.push( max.x, max.y, max.z ); vertices.push( max.x, max.y, min.z ); // 0, 4\n\t\t\t\tvertices.push( min.x, max.y, max.z ); vertices.push( min.x, max.y, min.z ); // 1, 5\n\t\t\t\tvertices.push( min.x, min.y, max.z ); vertices.push( min.x, min.y, min.z ); // 2, 6\n\t\t\t\tvertices.push( max.x, min.y, max.z ); vertices.push( max.x, min.y, min.z ); // 3, 7\n\n\t\t\t\ttraverse( tree[ i ].subTrees );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttraverse( this.octree.subTrees );\n\n\t\tthis.geometry.dispose();\n\n\t\tthis.geometry = new BufferGeometry();\n\t\tthis.geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nexport { OctreeHelper };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}