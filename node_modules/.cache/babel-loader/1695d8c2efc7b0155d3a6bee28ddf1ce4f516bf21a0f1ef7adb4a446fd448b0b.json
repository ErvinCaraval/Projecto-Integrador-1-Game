{"ast":null,"code":"import { Clock, Vector3, Quaternion, Matrix4 } from 'three';\nconst RAPIER_PATH = 'https://cdn.skypack.dev/@dimforge/rapier3d-compat@0.11.2';\nconst frameRate = 60;\nconst _scale = new Vector3(1, 1, 1);\nconst ZERO = new Vector3();\nlet RAPIER = null;\nfunction getCollider(geometry) {\n  const parameters = geometry.parameters;\n\n  // TODO change type to is*\n\n  if (geometry.type === 'BoxGeometry') {\n    const sx = parameters.width !== undefined ? parameters.width / 2 : 0.5;\n    const sy = parameters.height !== undefined ? parameters.height / 2 : 0.5;\n    const sz = parameters.depth !== undefined ? parameters.depth / 2 : 0.5;\n    return RAPIER.ColliderDesc.cuboid(sx, sy, sz);\n  } else if (geometry.type === 'SphereGeometry' || geometry.type === 'IcosahedronGeometry') {\n    const radius = parameters.radius !== undefined ? parameters.radius : 1;\n    return RAPIER.ColliderDesc.ball(radius);\n  }\n  return null;\n}\nasync function RapierPhysics() {\n  if (RAPIER === null) {\n    RAPIER = await import(RAPIER_PATH);\n    await RAPIER.init();\n  }\n\n  // Docs: https://rapier.rs/docs/api/javascript/JavaScript3D/\t\n\n  const gravity = new Vector3(0.0, -9.81, 0.0);\n  const world = new RAPIER.World(gravity);\n  const meshes = [];\n  const meshMap = new WeakMap();\n  const _vector = new Vector3();\n  const _quaternion = new Quaternion();\n  const _matrix = new Matrix4();\n  function addScene(scene) {\n    scene.traverse(function (child) {\n      if (child.isMesh) {\n        const physics = child.userData.physics;\n        if (physics) {\n          addMesh(child, physics.mass, physics.restitution);\n        }\n      }\n    });\n  }\n  function addMesh(mesh, mass = 0, restitution = 0) {\n    const shape = getCollider(mesh.geometry);\n    if (shape === null) return;\n    shape.setMass(mass);\n    shape.setRestitution(restitution);\n    const body = mesh.isInstancedMesh ? createInstancedBody(mesh, mass, shape) : createBody(mesh.position, mesh.quaternion, mass, shape);\n    if (mass > 0) {\n      meshes.push(mesh);\n      meshMap.set(mesh, body);\n    }\n  }\n  function createInstancedBody(mesh, mass, shape) {\n    const array = mesh.instanceMatrix.array;\n    const bodies = [];\n    for (let i = 0; i < mesh.count; i++) {\n      const position = _vector.fromArray(array, i * 16 + 12);\n      bodies.push(createBody(position, null, mass, shape));\n    }\n    return bodies;\n  }\n  function createBody(position, quaternion, mass, shape) {\n    const desc = mass > 0 ? RAPIER.RigidBodyDesc.dynamic() : RAPIER.RigidBodyDesc.fixed();\n    desc.setTranslation(...position);\n    if (quaternion !== null) desc.setRotation(quaternion);\n    const body = world.createRigidBody(desc);\n    world.createCollider(shape, body);\n    return body;\n  }\n  function setMeshPosition(mesh, position, index = 0) {\n    let body = meshMap.get(mesh);\n    if (mesh.isInstancedMesh) {\n      body = body[index];\n    }\n    body.setAngvel(ZERO);\n    body.setLinvel(ZERO);\n    body.setTranslation(position);\n  }\n  function setMeshVelocity(mesh, velocity, index = 0) {\n    let body = meshMap.get(mesh);\n    if (mesh.isInstancedMesh) {\n      body = body[index];\n    }\n    body.setLinvel(velocity);\n  }\n\n  //\n\n  const clock = new Clock();\n  function step() {\n    world.timestep = clock.getDelta();\n    world.step();\n\n    //\n\n    for (let i = 0, l = meshes.length; i < l; i++) {\n      const mesh = meshes[i];\n      if (mesh.isInstancedMesh) {\n        const array = mesh.instanceMatrix.array;\n        const bodies = meshMap.get(mesh);\n        for (let j = 0; j < bodies.length; j++) {\n          const body = bodies[j];\n          const position = body.translation();\n          _quaternion.copy(body.rotation());\n          _matrix.compose(position, _quaternion, _scale).toArray(array, j * 16);\n        }\n        mesh.instanceMatrix.needsUpdate = true;\n        mesh.computeBoundingSphere();\n      } else {\n        const body = meshMap.get(mesh);\n        mesh.position.copy(body.translation());\n        mesh.quaternion.copy(body.rotation());\n      }\n    }\n  }\n\n  // animate\n\n  setInterval(step, 1000 / frameRate);\n  return {\n    addScene: addScene,\n    addMesh: addMesh,\n    setMeshPosition: setMeshPosition,\n    setMeshVelocity: setMeshVelocity\n  };\n}\nexport { RapierPhysics };","map":{"version":3,"names":["Clock","Vector3","Quaternion","Matrix4","RAPIER_PATH","frameRate","_scale","ZERO","RAPIER","getCollider","geometry","parameters","type","sx","width","undefined","sy","height","sz","depth","ColliderDesc","cuboid","radius","ball","RapierPhysics","init","gravity","world","World","meshes","meshMap","WeakMap","_vector","_quaternion","_matrix","addScene","scene","traverse","child","isMesh","physics","userData","addMesh","mass","restitution","mesh","shape","setMass","setRestitution","body","isInstancedMesh","createInstancedBody","createBody","position","quaternion","push","set","array","instanceMatrix","bodies","i","count","fromArray","desc","RigidBodyDesc","dynamic","fixed","setTranslation","setRotation","createRigidBody","createCollider","setMeshPosition","index","get","setAngvel","setLinvel","setMeshVelocity","velocity","clock","step","timestep","getDelta","l","length","j","translation","copy","rotation","compose","toArray","needsUpdate","computeBoundingSphere","setInterval"],"sources":["/home/ervin/Escritorio/integrador/Projecto-Integrador-1-Game/node_modules/three/examples/jsm/physics/RapierPhysics.js"],"sourcesContent":["import { Clock, Vector3, Quaternion, Matrix4 } from 'three';\n\nconst RAPIER_PATH = 'https://cdn.skypack.dev/@dimforge/rapier3d-compat@0.11.2';\n\nconst frameRate = 60;\n\nconst _scale = new Vector3( 1, 1, 1 );\nconst ZERO = new Vector3();\n\nlet RAPIER = null;\n\nfunction getCollider( geometry ) {\n\n\tconst parameters = geometry.parameters;\n\n\t// TODO change type to is*\n\n\tif ( geometry.type === 'BoxGeometry' ) {\n\n\t\tconst sx = parameters.width !== undefined ? parameters.width / 2 : 0.5;\n\t\tconst sy = parameters.height !== undefined ? parameters.height / 2 : 0.5;\n\t\tconst sz = parameters.depth !== undefined ? parameters.depth / 2 : 0.5;\n\n\t\treturn RAPIER.ColliderDesc.cuboid( sx, sy, sz );\n\n\t} else if ( geometry.type === 'SphereGeometry' || geometry.type === 'IcosahedronGeometry' ) {\n\n\t\tconst radius = parameters.radius !== undefined ? parameters.radius : 1;\n\t\treturn RAPIER.ColliderDesc.ball( radius );\n\n\t}\n\n\treturn null;\n\n}\n\nasync function RapierPhysics() {\n\n\tif ( RAPIER === null ) {\n\n\t\tRAPIER = await import( RAPIER_PATH );\n\t\tawait RAPIER.init();\n\n\t}\n\n\t// Docs: https://rapier.rs/docs/api/javascript/JavaScript3D/\t\n\n\tconst gravity = new Vector3( 0.0, - 9.81, 0.0 );\n\tconst world = new RAPIER.World( gravity );\n\n\tconst meshes = [];\n\tconst meshMap = new WeakMap();\n\n\tconst _vector = new Vector3();\n\tconst _quaternion = new Quaternion();\n\tconst _matrix = new Matrix4();\n\n\tfunction addScene( scene ) {\n\n\t\tscene.traverse( function ( child ) {\n\n\t\t\tif ( child.isMesh ) {\n\n\t\t\t\tconst physics = child.userData.physics;\n\n\t\t\t\tif ( physics ) {\n\n\t\t\t\t\taddMesh( child, physics.mass, physics.restitution );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tfunction addMesh( mesh, mass = 0, restitution = 0 ) {\n\n\t\tconst shape = getCollider( mesh.geometry );\n\n\t\tif ( shape === null ) return;\n\n\t\tshape.setMass( mass );\n\t\tshape.setRestitution( restitution );\n\n\t\tconst body = mesh.isInstancedMesh\n\t\t\t\t\t\t\t? createInstancedBody( mesh, mass, shape )\n\t\t\t\t\t\t\t: createBody( mesh.position, mesh.quaternion, mass, shape );\n\n\t\tif ( mass > 0 ) {\n\n\t\t\tmeshes.push( mesh );\n\t\t\tmeshMap.set( mesh, body );\n\n\t\t}\n\n\t}\n\n\tfunction createInstancedBody( mesh, mass, shape ) {\n\n\t\tconst array = mesh.instanceMatrix.array;\n\n\t\tconst bodies = [];\n\n\t\tfor ( let i = 0; i < mesh.count; i ++ ) {\n\n\t\t\tconst position = _vector.fromArray( array, i * 16 + 12 );\n\t\t\tbodies.push( createBody( position, null, mass, shape ) );\n\n\t\t}\n\n\t\treturn bodies;\n\n\t}\n\n\tfunction createBody( position, quaternion, mass, shape ) {\n\n\t\tconst desc = mass > 0 ? RAPIER.RigidBodyDesc.dynamic() : RAPIER.RigidBodyDesc.fixed();\n\t\tdesc.setTranslation( ...position );\n\t\tif ( quaternion !== null ) desc.setRotation( quaternion );\n\n\t\tconst body = world.createRigidBody( desc );\n\t\tworld.createCollider( shape, body );\n\n\t\treturn body;\n\n\t}\n\n\tfunction setMeshPosition( mesh, position, index = 0 ) {\n\n\t\tlet body = meshMap.get( mesh );\n\n\t\tif ( mesh.isInstancedMesh ) {\n\n\t\t\tbody = body[ index ];\n\n\t\t}\n\n\t\tbody.setAngvel( ZERO );\n\t\tbody.setLinvel( ZERO );\n\t\tbody.setTranslation( position );\n\n\t}\n\n\tfunction setMeshVelocity( mesh, velocity, index = 0 ) {\n\n\t\tlet body = meshMap.get( mesh );\n\n\t\tif ( mesh.isInstancedMesh ) {\n\n\t\t\tbody = body[ index ];\n\n\t\t}\n\n\t\tbody.setLinvel( velocity );\n\n\t}\n\n\t//\n\n\tconst clock = new Clock();\n\n\tfunction step() {\n\n\t\tworld.timestep = clock.getDelta();\n\t\tworld.step();\n\n\t\t//\n\n\t\tfor ( let i = 0, l = meshes.length; i < l; i ++ ) {\n\n\t\t\tconst mesh = meshes[ i ];\n\n\t\t\tif ( mesh.isInstancedMesh ) {\n\n\t\t\t\tconst array = mesh.instanceMatrix.array;\n\t\t\t\tconst bodies = meshMap.get( mesh );\n\n\t\t\t\tfor ( let j = 0; j < bodies.length; j ++ ) {\n\n\t\t\t\t\tconst body = bodies[ j ];\n\n\t\t\t\t\tconst position = body.translation();\n\t\t\t\t\t_quaternion.copy( body.rotation() );\n\n\t\t\t\t\t_matrix.compose( position, _quaternion, _scale ).toArray( array, j * 16 );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.instanceMatrix.needsUpdate = true;\n\t\t\t\tmesh.computeBoundingSphere();\n\n\t\t\t} else {\n\n\t\t\t\tconst body = meshMap.get( mesh );\n\n\t\t\t\tmesh.position.copy( body.translation() );\n\t\t\t\tmesh.quaternion.copy( body.rotation() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// animate\n\n\tsetInterval( step, 1000 / frameRate );\n\n\treturn {\n\t\taddScene: addScene,\n\t\taddMesh: addMesh,\n\t\tsetMeshPosition: setMeshPosition,\n\t\tsetMeshVelocity: setMeshVelocity\n\t};\n\n}\n\nexport { RapierPhysics };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}